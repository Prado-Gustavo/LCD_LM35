

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 01 11:19:11 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     	FNCALL	_main,___bmul
  1336                           	FNCALL	_main,_analog_init
  1337                           	FNCALL	_main,_fmm_add
  1338                           	FNCALL	_main,_fmm_add1
  1339                           	FNCALL	_main,_fmm_add2
  1340                           	FNCALL	_main,_fmm_add3
  1341                           	FNCALL	_main,_fmm_media
  1342                           	FNCALL	_main,_fmm_media1
  1343                           	FNCALL	_main,_fmm_media2
  1344                           	FNCALL	_main,_fmm_media3
  1345                           	FNCALL	_main,_lcd_init
  1346                           	FNCALL	_main,_lcd_num
  1347                           	FNCALL	_main,_lcd_print
  1348                           	FNCALL	_main,_led_init
  1349                           	FNCALL	_main,_led_monitorar
  1350                           	FNCALL	_main,_sensor_init
  1351                           	FNCALL	_main,_sensor_readAll
  1352                           	FNCALL	_main,_tecla_decrementar_descida
  1353                           	FNCALL	_main,_tecla_incrementar_subida
  1354                           	FNCALL	_main,_teclas_init
  1355                           	FNCALL	_sensor_readAll,_ADC_read
  1356                           	FNCALL	_sensor_readAll,___bmul
  1357                           	FNCALL	_sensor_readAll,___lmul
  1358                           	FNCALL	_sensor_init,___bmul
  1359                           	FNCALL	_led_monitorar,_sensor_alert
  1360                           	FNCALL	_led_monitorar,_sensor_danger
  1361                           	FNCALL	_sensor_danger,___awdiv
  1362                           	FNCALL	_sensor_danger,___wmul
  1363                           	FNCALL	_sensor_alert,___awdiv
  1364                           	FNCALL	_sensor_alert,___wmul
  1365                           	FNCALL	_lcd_print,_lcd_data
  1366                           	FNCALL	_lcd_print,_lcd_lincol
  1367                           	FNCALL	_lcd_num,___awdiv
  1368                           	FNCALL	_lcd_num,___awmod
  1369                           	FNCALL	_lcd_num,_lcd_data
  1370                           	FNCALL	_lcd_num,_lcd_lincol
  1371                           	FNCALL	_lcd_lincol,_lcd_inst
  1372                           	FNCALL	_lcd_init,_lcd_inst
  1373                           	FNCALL	_fmm_media3,___aldiv
  1374                           	FNCALL	_fmm_media2,___aldiv
  1375                           	FNCALL	_fmm_media1,___aldiv
  1376                           	FNCALL	_fmm_media,___aldiv
  1377                           	FNCALL	_fmm_add3,___awmod
  1378                           	FNCALL	_fmm_add2,___awmod
  1379                           	FNCALL	_fmm_add1,___awmod
  1380                           	FNCALL	_fmm_add,___awmod
  1381                           	FNROOT	_main
  1382                           	global	_acc_temp
  1383                           	global	_fmm_temp_indice
  1384                           	global	_canal
  1385                           	global	_decrementar_anterior
  1386                           	global	_incrementar_anterior
  1387                           	global	_fmm_temp
  1388                           	global	_sensor
  1389                           	global	_PORTCbits
  1390                           _PORTCbits	set	0x7
  1391  0007                     	global	_PORTBbits
  1392                           _PORTBbits	set	0x6
  1393  0006                     	global	_PORTD
  1394                           _PORTD	set	0x8
  1395  0008                     	global	_PORTDbits
  1396                           _PORTDbits	set	0x8
  1397  0008                     	global	_ADRESH
  1398                           _ADRESH	set	0x1E
  1399  001E                     	global	_ADCON0bits
  1400                           _ADCON0bits	set	0x1F
  1401  001F                     	global	_TRISCbits
  1402                           _TRISCbits	set	0x87
  1403  0087                     	global	_TRISBbits
  1404                           _TRISBbits	set	0x86
  1405  0086                     	global	_TRISDbits
  1406                           _TRISDbits	set	0x88
  1407  0088                     	global	_ADRESL
  1408                           _ADRESL	set	0x9E
  1409  009E                     	global	_ADCON1bits
  1410                           _ADCON1bits	set	0x9F
  1411  009F                     	global	_ANSEL
  1412                           _ANSEL	set	0x188
  1413  0188                     psect	strings,class=STRING,delta=2,noexec
  1414                           global __pstrings
  1415                           __pstrings:
  1416  0800                     stringtab:
  1417  0800                     	global    __stringtab
  1418                           __stringtab:
  1419  0800                     ;	String table - string pointers are 1 byte each
  1420                           stringcode:stringdir:
  1421  0800                     movlw high(stringdir)
      + 0800                     stringdir:	
  1422  0800  3008               movwf pclath
  1423  0801  008A               movf fsr,w
  1424  0802  0804               incf fsr
  1425  0803  0A84               	addwf pc
  1426  0804  0782               	global __stringbase
  1427                           __stringbase:
  1428  0805                     	retlw	0
  1429  0805  3400               psect	strings
  1430                           	global    __end_of__stringtab
  1431                           __end_of__stringtab:
  1432  0806                     	
  1433                           STR_1:	
  1434  0806                     	retlw	84	;'T'
  1435  0806  3454               	retlw	101	;'e'
  1436  0807  3465               	retlw	109	;'m'
  1437  0808  346D               	retlw	112	;'p'
  1438  0809  3470               	retlw	46	;'.'
  1439  080A  342E               	retlw	32	;' '
  1440  080B  3420               	retlw	83	;'S'
  1441  080C  3453               	retlw	101	;'e'
  1442  080D  3465               	retlw	110	;'n'
  1443  080E  346E               	retlw	115	;'s'
  1444  080F  3473               	retlw	111	;'o'
  1445  0810  346F               	retlw	114	;'r'
  1446  0811  3472               	retlw	58	;':'
  1447  0812  343A               	retlw	32	;' '
  1448  0813  3420               	retlw	32	;' '
  1449  0814  3420               	retlw	32	;' '
  1450  0815  3420               	retlw	0
  1451  0816  3400               psect	strings
  1452                           ; #config settings
  1453                           global __CFG_FOSC$HS
  1454                           __CFG_FOSC$HS equ 0x0
  1455  0000                     global __CFG_WDTE$OFF
  1456                           __CFG_WDTE$OFF equ 0x0
  1457  0000                     global __CFG_PWRTE$OFF
  1458                           __CFG_PWRTE$OFF equ 0x0
  1459  0000                     global __CFG_MCLRE$OFF
  1460                           __CFG_MCLRE$OFF equ 0x0
  1461  0000                     global __CFG_CP$OFF
  1462                           __CFG_CP$OFF equ 0x0
  1463  0000                     global __CFG_CPD$OFF
  1464                           __CFG_CPD$OFF equ 0x0
  1465  0000                     global __CFG_BOREN$OFF
  1466                           __CFG_BOREN$OFF equ 0x0
  1467  0000                     global __CFG_IESO$OFF
  1468                           __CFG_IESO$OFF equ 0x0
  1469  0000                     global __CFG_FCMEN$OFF
  1470                           __CFG_FCMEN$OFF equ 0x0
  1471  0000                     global __CFG_LVP$OFF
  1472                           __CFG_LVP$OFF equ 0x0
  1473  0000                     global __CFG_BOR4V$BOR40V
  1474                           __CFG_BOR4V$BOR40V equ 0x0
  1475  0000                     global __CFG_WRT$OFF
  1476                           __CFG_WRT$OFF equ 0x0
  1477  0000                     	file	"C:\Users\21193444\AppData\Local\Temp\s40k."
  1478                           	line	#
  1479                           psect cinit,class=CODE,delta=2
  1480                           global start_initialization
  1481                           start_initialization:
  1482  07EB                     
  1483                           global __initialization
  1484                           __initialization:
  1485  07EB                     psect	bssBANK0,class=BANK0,space=1,noexec
  1486                           global __pbssBANK0
  1487                           __pbssBANK0:
  1488  0052                     _acc_temp:
  1489  0052                            ds      4
  1490  0052                     
  1491                           _fmm_temp_indice:
  1492  0056                            ds      2
  1493  0056                     
  1494                           _canal:
  1495  0058                            ds      2
  1496  0058                     
  1497                           _decrementar_anterior:
  1498  005A                            ds      1
  1499  005A                     
  1500                           _incrementar_anterior:
  1501  005B                            ds      1
  1502  005B                     
  1503                           psect	bssBANK1,class=BANK1,space=1,noexec
  1504                           global __pbssBANK1
  1505                           __pbssBANK1:
  1506  00A0                     _fmm_temp:
  1507  00A0                            ds      22
  1508  00A0                     
  1509                           _sensor:
  1510  00B6                            ds      48
  1511  00B6                     
  1512                           	file	"C:\Users\21193444\AppData\Local\Temp\s40k."
  1513                           	line	#
  1514                           psect clrtext,class=CODE,delta=2
  1515                           global clear_ram0
  1516                           ;	Called with FSR containing the base address, and
  1517                           ;	W with the last address+1
  1518                           clear_ram0:
  1519  0C09                     	clrwdt			;clear the watchdog before getting into this loop
  1520  0C09  0064               clrloop0:
  1521  0C0A                     	clrf	indf		;clear RAM location pointed to by FSR
  1522  0C0A  0180               	incf	fsr,f		;increment pointer
  1523  0C0B  0A84               	xorwf	fsr,w		;XOR with final address
  1524  0C0C  0604               	btfsc	status,2	;have we reached the end yet?
  1525  0C0D  1903               	retlw	0		;all done for this memory range, return
  1526  0C0E  3400               	xorwf	fsr,w		;XOR again to restore value
  1527  0C0F  0604               	goto	clrloop0		;do the next byte
  1528  0C10  2C0A               
  1529                           ; Clear objects allocated to BANK0
  1530                           psect cinit,class=CODE,delta=2,merge=1
  1531                           	bcf	status, 7	;select IRP bank0
  1532  07EB  1383               	movlw	low(__pbssBANK0)
  1533  07EC  3052               	movwf	fsr
  1534  07ED  0084               	movlw	low((__pbssBANK0)+0Ah)
  1535  07EE  305C               	fcall	clear_ram0
  1536  07EF  120A  158A  2409  120A  118A  ; Clear objects allocated to BANK1
  1537                           psect cinit,class=CODE,delta=2,merge=1
  1538                           	movlw	low(__pbssBANK1)
  1539  07F4  30A0               	movwf	fsr
  1540  07F5  0084               	movlw	low((__pbssBANK1)+046h)
  1541  07F6  30E6               	fcall	clear_ram0
  1542  07F7  120A  158A  2409  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1543                           global end_of_initialization,__end_of__initialization
  1544                           
  1545                           ;End of C runtime variable initialization code
  1546                           
  1547                           end_of_initialization:
  1548  07FC                     __end_of__initialization:
  1549  07FC                     clrf status
  1550  07FC  0183               ljmp _main	;jump to C main() function
  1551  07FD  120A  118A  2E0D   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1552                           global __pcstackCOMMON
  1553                           __pcstackCOMMON:
  1554  0070                     ?_led_init:	; 1 bytes @ 0x0
  1555  0070                     ??_led_init:	; 1 bytes @ 0x0
  1556  0070                     ?_teclas_init:	; 1 bytes @ 0x0
  1557  0070                     ??_teclas_init:	; 1 bytes @ 0x0
  1558  0070                     ?_tecla_incrementar_subida:	; 1 bytes @ 0x0
  1559  0070                     ??_tecla_incrementar_subida:	; 1 bytes @ 0x0
  1560  0070                     ?_tecla_decrementar_descida:	; 1 bytes @ 0x0
  1561  0070                     ??_tecla_decrementar_descida:	; 1 bytes @ 0x0
  1562  0070                     ?_led_monitorar:	; 1 bytes @ 0x0
  1563  0070                     ?_analog_init:	; 1 bytes @ 0x0
  1564  0070                     ??_analog_init:	; 1 bytes @ 0x0
  1565  0070                     ?_lcd_inst:	; 1 bytes @ 0x0
  1566  0070                     ??_lcd_inst:	; 1 bytes @ 0x0
  1567  0070                     ?_lcd_data:	; 1 bytes @ 0x0
  1568  0070                     ??_lcd_data:	; 1 bytes @ 0x0
  1569  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1570  0070                     ?_sensor_alert:	; 1 bytes @ 0x0
  1571  0070                     ?_sensor_danger:	; 1 bytes @ 0x0
  1572  0070                     ?_main:	; 1 bytes @ 0x0
  1573  0070                     ?___bmul:	; 1 bytes @ 0x0
  1574  0070                     	global	?_ADC_read
  1575                           ?_ADC_read:	; 2 bytes @ 0x0
  1576  0070                     	global	?___wmul
  1577                           ?___wmul:	; 2 bytes @ 0x0
  1578  0070                     	global	?___awmod
  1579                           ?___awmod:	; 2 bytes @ 0x0
  1580  0070                     	global	?___aldiv
  1581                           ?___aldiv:	; 4 bytes @ 0x0
  1582  0070                     	global	___bmul@multiplicand
  1583                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  1584  0070                     	global	___wmul@multiplier
  1585                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1586  0070                     	global	___awmod@divisor
  1587                           ___awmod@divisor:	; 2 bytes @ 0x0
  1588  0070                     	global	___aldiv@divisor
  1589                           ___aldiv@divisor:	; 4 bytes @ 0x0
  1590  0070                     	ds	1
  1591  0070                     ??___bmul:	; 1 bytes @ 0x1
  1592  0071                     	ds	1
  1593  0071                     ??_ADC_read:	; 1 bytes @ 0x2
  1594  0072                     	global	lcd_inst@i
  1595                           lcd_inst@i:	; 1 bytes @ 0x2
  1596  0072                     	global	lcd_data@d
  1597                           lcd_data@d:	; 1 bytes @ 0x2
  1598  0072                     	global	___bmul@product
  1599                           ___bmul@product:	; 1 bytes @ 0x2
  1600  0072                     	global	___wmul@multiplicand
  1601                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1602  0072                     	global	___awmod@dividend
  1603                           ___awmod@dividend:	; 2 bytes @ 0x2
  1604  0072                     	ds	1
  1605  0072                     ?_lcd_lincol:	; 1 bytes @ 0x3
  1606  0073                     ??_lcd_init:	; 1 bytes @ 0x3
  1607  0073                     	global	lcd_lincol@col
  1608                           lcd_lincol@col:	; 1 bytes @ 0x3
  1609  0073                     	global	___bmul@multiplier
  1610                           ___bmul@multiplier:	; 1 bytes @ 0x3
  1611  0073                     	ds	1
  1612  0073                     ??_lcd_lincol:	; 1 bytes @ 0x4
  1613  0074                     ?_sensor_init:	; 1 bytes @ 0x4
  1614  0074                     ??___wmul:	; 1 bytes @ 0x4
  1615  0074                     ??___awmod:	; 1 bytes @ 0x4
  1616  0074                     	global	sensor_init@ch
  1617                           sensor_init@ch:	; 1 bytes @ 0x4
  1618  0074                     	global	_ADC_read$99
  1619                           _ADC_read$99:	; 2 bytes @ 0x4
  1620  0074                     	global	___wmul@product
  1621                           ___wmul@product:	; 2 bytes @ 0x4
  1622  0074                     	global	___aldiv@dividend
  1623                           ___aldiv@dividend:	; 4 bytes @ 0x4
  1624  0074                     	ds	1
  1625  0074                     	global	lcd_lincol@lin
  1626                           lcd_lincol@lin:	; 1 bytes @ 0x5
  1627  0075                     	global	___awmod@counter
  1628                           ___awmod@counter:	; 1 bytes @ 0x5
  1629  0075                     	global	sensor_init@tmin
  1630                           sensor_init@tmin:	; 2 bytes @ 0x5
  1631  0075                     	ds	1
  1632  0075                     ?_lcd_print:	; 1 bytes @ 0x6
  1633  0076                     	global	?___awdiv
  1634                           ?___awdiv:	; 2 bytes @ 0x6
  1635  0076                     	global	lcd_print@col
  1636                           lcd_print@col:	; 1 bytes @ 0x6
  1637  0076                     	global	___awmod@sign
  1638                           ___awmod@sign:	; 1 bytes @ 0x6
  1639  0076                     	global	ADC_read@Valor_ADC
  1640                           ADC_read@Valor_ADC:	; 2 bytes @ 0x6
  1641  0076                     	global	___awdiv@divisor
  1642                           ___awdiv@divisor:	; 2 bytes @ 0x6
  1643  0076                     	ds	1
  1644  0076                     ?_fmm_add:	; 2 bytes @ 0x7
  1645  0077                     ?_fmm_add1:	; 2 bytes @ 0x7
  1646  0077                     ?_fmm_add2:	; 2 bytes @ 0x7
  1647  0077                     ?_fmm_add3:	; 2 bytes @ 0x7
  1648  0077                     	global	lcd_print@str
  1649                           lcd_print@str:	; 1 bytes @ 0x7
  1650  0077                     	global	sensor_init@tmax
  1651                           sensor_init@tmax:	; 2 bytes @ 0x7
  1652  0077                     	global	fmm_add@valor
  1653                           fmm_add@valor:	; 2 bytes @ 0x7
  1654  0077                     	global	fmm_add1@valor
  1655                           fmm_add1@valor:	; 2 bytes @ 0x7
  1656  0077                     	global	fmm_add2@valor
  1657                           fmm_add2@valor:	; 2 bytes @ 0x7
  1658  0077                     	global	fmm_add3@valor
  1659                           fmm_add3@valor:	; 2 bytes @ 0x7
  1660  0077                     	ds	1
  1661  0077                     ??_lcd_print:	; 1 bytes @ 0x8
  1662  0078                     ??___aldiv:	; 1 bytes @ 0x8
  1663  0078                     	global	ADC_read@canais
  1664                           ADC_read@canais:	; 1 bytes @ 0x8
  1665  0078                     	global	___awdiv@dividend
  1666                           ___awdiv@dividend:	; 2 bytes @ 0x8
  1667  0078                     	ds	1
  1668  0078                     ??_fmm_media:	; 1 bytes @ 0x9
  1669  0079                     ??_fmm_media1:	; 1 bytes @ 0x9
  1670  0079                     ??_fmm_media2:	; 1 bytes @ 0x9
  1671  0079                     ??_fmm_media3:	; 1 bytes @ 0x9
  1672  0079                     ??___lmul:	; 1 bytes @ 0x9
  1673  0079                     	global	lcd_print@pos
  1674                           lcd_print@pos:	; 1 bytes @ 0x9
  1675  0079                     	global	sensor_init@alvo
  1676                           sensor_init@alvo:	; 2 bytes @ 0x9
  1677  0079                     	global	fmm_add@i
  1678                           fmm_add@i:	; 2 bytes @ 0x9
  1679  0079                     	global	fmm_add1@i
  1680                           fmm_add1@i:	; 2 bytes @ 0x9
  1681  0079                     	global	fmm_add2@i
  1682                           fmm_add2@i:	; 2 bytes @ 0x9
  1683  0079                     	global	fmm_add3@i
  1684                           fmm_add3@i:	; 2 bytes @ 0x9
  1685  0079                     	ds	1
  1686  0079                     ??___awdiv:	; 1 bytes @ 0xA
  1687  007A                     	global	lcd_print@lin
  1688                           lcd_print@lin:	; 1 bytes @ 0xA
  1689  007A                     	global	___lmul@product
  1690                           ___lmul@product:	; 4 bytes @ 0xA
  1691  007A                     	ds	1
  1692  007A                     ??_lcd_num:	; 1 bytes @ 0xB
  1693  007B                     ??_sensor_alert:	; 1 bytes @ 0xB
  1694  007B                     ??_sensor_danger:	; 1 bytes @ 0xB
  1695  007B                     	global	sensor_init@aceitavel
  1696                           sensor_init@aceitavel:	; 1 bytes @ 0xB
  1697  007B                     	ds	1
  1698  007B                     	global	sensor_init@toleravel
  1699                           sensor_init@toleravel:	; 1 bytes @ 0xC
  1700  007C                     	ds	1
  1701  007C                     	global	sensor_init@ptr
  1702                           sensor_init@ptr:	; 1 bytes @ 0xD
  1703  007D                     	ds	1
  1704  007D                     ??_led_monitorar:	; 1 bytes @ 0xE
  1705  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1706                           global __pcstackBANK0
  1707                           __pcstackBANK0:
  1708  0020                     ??_fmm_add:	; 1 bytes @ 0x0
  1709  0020                     ??_fmm_add1:	; 1 bytes @ 0x0
  1710  0020                     ??_fmm_add2:	; 1 bytes @ 0x0
  1711  0020                     ??_fmm_add3:	; 1 bytes @ 0x0
  1712  0020                     ??_sensor_init:	; 1 bytes @ 0x0
  1713  0020                     	global	?___lmul
  1714                           ?___lmul:	; 4 bytes @ 0x0
  1715  0020                     	global	___aldiv@counter
  1716                           ___aldiv@counter:	; 1 bytes @ 0x0
  1717  0020                     	global	___awdiv@counter
  1718                           ___awdiv@counter:	; 1 bytes @ 0x0
  1719  0020                     	global	___lmul@multiplier
  1720                           ___lmul@multiplier:	; 4 bytes @ 0x0
  1721  0020                     	ds	1
  1722  0020                     	global	___aldiv@sign
  1723                           ___aldiv@sign:	; 1 bytes @ 0x1
  1724  0021                     	global	___awdiv@sign
  1725                           ___awdiv@sign:	; 1 bytes @ 0x1
  1726  0021                     	ds	1
  1727  0021                     	global	___awdiv@quotient
  1728                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1729  0022                     	global	___aldiv@quotient
  1730                           ___aldiv@quotient:	; 4 bytes @ 0x2
  1731  0022                     	ds	2
  1732  0022                     	global	sensor_alert@min
  1733                           sensor_alert@min:	; 2 bytes @ 0x4
  1734  0024                     	global	sensor_danger@min
  1735                           sensor_danger@min:	; 2 bytes @ 0x4
  1736  0024                     	global	___lmul@multiplicand
  1737                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  1738  0024                     	ds	2
  1739  0024                     	global	?_fmm_media
  1740                           ?_fmm_media:	; 2 bytes @ 0x6
  1741  0026                     	global	?_fmm_media1
  1742                           ?_fmm_media1:	; 2 bytes @ 0x6
  1743  0026                     	global	?_fmm_media2
  1744                           ?_fmm_media2:	; 2 bytes @ 0x6
  1745  0026                     	global	?_fmm_media3
  1746                           ?_fmm_media3:	; 2 bytes @ 0x6
  1747  0026                     	global	sensor_alert@max
  1748                           sensor_alert@max:	; 2 bytes @ 0x6
  1749  0026                     	global	sensor_danger@max
  1750                           sensor_danger@max:	; 2 bytes @ 0x6
  1751  0026                     	ds	2
  1752  0026                     ?_lcd_num:	; 1 bytes @ 0x8
  1753  0028                     ?_sensor_readAll:	; 1 bytes @ 0x8
  1754  0028                     	global	lcd_num@col
  1755                           lcd_num@col:	; 1 bytes @ 0x8
  1756  0028                     	global	sensor_readAll@n
  1757                           sensor_readAll@n:	; 1 bytes @ 0x8
  1758  0028                     	global	sensor_alert@ptr
  1759                           sensor_alert@ptr:	; 1 bytes @ 0x8
  1760  0028                     	global	sensor_danger@ptr
  1761                           sensor_danger@ptr:	; 1 bytes @ 0x8
  1762  0028                     	ds	1
  1763  0028                     ??_sensor_readAll:	; 1 bytes @ 0x9
  1764  0029                     	global	led_monitorar@ptr
  1765                           led_monitorar@ptr:	; 1 bytes @ 0x9
  1766  0029                     	global	lcd_num@num
  1767                           lcd_num@num:	; 2 bytes @ 0x9
  1768  0029                     	ds	2
  1769  0029                     	global	lcd_num@tam
  1770                           lcd_num@tam:	; 1 bytes @ 0xB
  1771  002B                     	ds	1
  1772  002B                     	global	lcd_num@lin
  1773                           lcd_num@lin:	; 1 bytes @ 0xC
  1774  002C                     	ds	1
  1775  002C                     	global	lcd_num@size
  1776                           lcd_num@size:	; 1 bytes @ 0xD
  1777  002D                     	ds	1
  1778  002D                     	global	lcd_num@sinal
  1779                           lcd_num@sinal:	; 1 bytes @ 0xE
  1780  002E                     	ds	1
  1781  002E                     	global	lcd_num@div
  1782                           lcd_num@div:	; 2 bytes @ 0xF
  1783  002F                     	ds	25
  1784  002F                     	global	sensor_readAll@ptr
  1785                           sensor_readAll@ptr:	; 1 bytes @ 0x28
  1786  0048                     	ds	1
  1787  0048                     	global	sensor_readAll@i
  1788                           sensor_readAll@i:	; 1 bytes @ 0x29
  1789  0049                     	ds	1
  1790  0049                     ??_main:	; 1 bytes @ 0x2A
  1791  004A                     	ds	3
  1792  004A                     	global	main@refresh
  1793                           main@refresh:	; 4 bytes @ 0x2D
  1794  004D                     	ds	4
  1795  004D                     	global	main@i
  1796                           main@i:	; 1 bytes @ 0x31
  1797  0051                     	ds	1
  1798  0051                     ;!
  1799                           ;!Data Sizes:
  1800                           ;!    Strings     17
  1801                           ;!    Constant    0
  1802                           ;!    Data        0
  1803                           ;!    BSS         80
  1804                           ;!    Persistent  0
  1805                           ;!    Stack       0
  1806                           ;!
  1807                           ;!Auto Spaces:
  1808                           ;!    Space          Size  Autos    Used
  1809                           ;!    COMMON           14     14      14
  1810                           ;!    BANK0            80     50      60
  1811                           ;!    BANK1            80      0      70
  1812                           ;!    BANK3            96      0       0
  1813                           ;!    BANK2            96      0       0
  1814                           
  1815                           ;!
  1816                           ;!Pointer List with Targets:
  1817                           ;!
  1818                           ;!    main$1210	PTR struct sensor_t size(1) Largest target is 48
  1819                           ;!		 -> sensor(BANK1[48]), 
  1820                           ;!
  1821                           ;!    led_monitorar@ptr	PTR struct sensor_t size(1) Largest target is 48
  1822                           ;!		 -> sensor(BANK1[48]), 
  1823                           ;!
  1824                           ;!    sensor_danger@ptr	PTR struct sensor_t size(1) Largest target is 48
  1825                           ;!		 -> sensor(BANK1[48]), 
  1826                           ;!
  1827                           ;!    sensor_alert@ptr	PTR struct sensor_t size(1) Largest target is 48
  1828                           ;!		 -> sensor(BANK1[48]), 
  1829                           ;!
  1830                           ;!    sensor_readAll@ptr	PTR struct sensor_t size(1) Largest target is 48
  1831                           ;!		 -> sensor(BANK1[48]), 
  1832                           ;!
  1833                           ;!    sensor_init@ptr	PTR struct sensor_t size(1) Largest target is 48
  1834                           ;!		 -> sensor(BANK1[48]), 
  1835                           ;!
  1836                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  1837                           ;!		 -> STR_1(CODE[17]), 
  1838                           ;!
  1839                           
  1840                           
  1841                           ;!
  1842                           ;!Critical Paths under _main in COMMON
  1843                           ;!
  1844                           ;!    _main->_lcd_num
  1845                           ;!    _main->_sensor_init
  1846                           ;!    _sensor_readAll->___lmul
  1847                           ;!    ___lmul->_ADC_read
  1848                           ;!    _sensor_init->___bmul
  1849                           ;!    _led_monitorar->_sensor_alert
  1850                           ;!    _led_monitorar->_sensor_danger
  1851                           ;!    _sensor_danger->___awdiv
  1852                           ;!    _sensor_alert->___awdiv
  1853                           ;!    _lcd_print->_lcd_lincol
  1854                           ;!    _lcd_num->___awdiv
  1855                           ;!    _lcd_lincol->_lcd_inst
  1856                           ;!    ___awdiv->___wmul
  1857                           ;!    _lcd_init->_lcd_inst
  1858                           ;!    _fmm_media3->___aldiv
  1859                           ;!    _fmm_media2->___aldiv
  1860                           ;!    _fmm_media1->___aldiv
  1861                           ;!    _fmm_media->___aldiv
  1862                           ;!    _fmm_add3->___awmod
  1863                           ;!    _fmm_add2->___awmod
  1864                           ;!    _fmm_add1->___awmod
  1865                           ;!    _fmm_add->___awmod
  1866                           ;!
  1867                           ;!Critical Paths under _main in BANK0
  1868                           ;!
  1869                           ;!    _main->_sensor_readAll
  1870                           ;!    _sensor_readAll->___lmul
  1871                           ;!    _led_monitorar->_sensor_alert
  1872                           ;!    _led_monitorar->_sensor_danger
  1873                           ;!    _sensor_danger->___awdiv
  1874                           ;!    _sensor_alert->___awdiv
  1875                           ;!    _lcd_num->_fmm_media
  1876                           ;!    _lcd_num->_fmm_media1
  1877                           ;!    _lcd_num->_fmm_media2
  1878                           ;!    _lcd_num->_fmm_media3
  1879                           ;!    _fmm_media3->___aldiv
  1880                           ;!    _fmm_media2->___aldiv
  1881                           ;!    _fmm_media1->___aldiv
  1882                           ;!    _fmm_media->___aldiv
  1883                           ;!
  1884                           ;!Critical Paths under _main in BANK1
  1885                           ;!
  1886                           ;!    None.
  1887                           ;!
  1888                           ;!Critical Paths under _main in BANK3
  1889                           ;!
  1890                           ;!    None.
  1891                           ;!
  1892                           ;!Critical Paths under _main in BANK2
  1893                           ;!
  1894                           ;!    None.
  1895                           
  1896 ;;
  1897 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1898 ;;
  1899                           
  1900                           ;!
  1901                           ;!Call Graph Tables:
  1902                           ;!
  1903                           ;! ---------------------------------------------------------------------------------
  1904                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1905                           ;! ---------------------------------------------------------------------------------
  1906                           ;! (0) _main                                                 8     8      0   26931
  1907                           ;!                                             42 BANK0      8     8      0
  1908                           ;!                             ___bmul
  1909                           ;!                        _analog_init
  1910                           ;!                            _fmm_add
  1911                           ;!                           _fmm_add1
  1912                           ;!                           _fmm_add2
  1913                           ;!                           _fmm_add3
  1914                           ;!                          _fmm_media
  1915                           ;!                         _fmm_media1
  1916                           ;!                         _fmm_media2
  1917                           ;!                         _fmm_media3
  1918                           ;!                           _lcd_init
  1919                           ;!                            _lcd_num
  1920                           ;!                          _lcd_print
  1921                           ;!                           _led_init
  1922                           ;!                      _led_monitorar
  1923                           ;!                        _sensor_init
  1924                           ;!                     _sensor_readAll
  1925                           ;!          _tecla_decrementar_descida
  1926                           ;!           _tecla_incrementar_subida
  1927                           ;!                        _teclas_init
  1928                           ;! ---------------------------------------------------------------------------------
  1929                           ;! (1) _teclas_init                                          0     0      0       0
  1930                           ;! ---------------------------------------------------------------------------------
  1931                           ;! (1) _tecla_incrementar_subida                             0     0      0       0
  1932                           ;! ---------------------------------------------------------------------------------
  1933                           ;! (1) _tecla_decrementar_descida                            0     0      0       0
  1934                           ;! ---------------------------------------------------------------------------------
  1935                           ;! (1) _sensor_readAll                                      34    33      1    1670
  1936                           ;!                                              8 BANK0     34    33      1
  1937                           ;!                           _ADC_read
  1938                           ;!                             ___bmul
  1939                           ;!                             ___lmul
  1940                           ;! ---------------------------------------------------------------------------------
  1941                           ;! (2) ___lmul                                              13     5      8     396
  1942                           ;!                                              9 COMMON     5     5      0
  1943                           ;!                                              0 BANK0      8     0      8
  1944                           ;!                           _ADC_read (ARG)
  1945                           ;!                             ___bmul (ARG)
  1946                           ;! ---------------------------------------------------------------------------------
  1947                           ;! (2) _ADC_read                                             9     7      2      94
  1948                           ;!                                              0 COMMON     9     7      2
  1949                           ;! ---------------------------------------------------------------------------------
  1950                           ;! (1) _sensor_init                                         14     5      9    3157
  1951                           ;!                                              4 COMMON    10     1      9
  1952                           ;!                                              0 BANK0      4     4      0
  1953                           ;!                             ___bmul
  1954                           ;! ---------------------------------------------------------------------------------
  1955                           ;! (2) ___bmul                                               4     3      1     805
  1956                           ;!                                              0 COMMON     4     3      1
  1957                           ;! ---------------------------------------------------------------------------------
  1958                           ;! (1) _led_monitorar                                        1     1      0    7145
  1959                           ;!                                              9 BANK0      1     1      0
  1960                           ;!                       _sensor_alert
  1961                           ;!                      _sensor_danger
  1962                           ;! ---------------------------------------------------------------------------------
  1963                           ;! (2) _sensor_danger                                        8     8      0    3512
  1964                           ;!                                             11 COMMON     3     3      0
  1965                           ;!                                              4 BANK0      5     5      0
  1966                           ;!                            ___awdiv
  1967                           ;!                             ___wmul
  1968                           ;! ---------------------------------------------------------------------------------
  1969                           ;! (2) _sensor_alert                                         8     8      0    3512
  1970                           ;!                                             11 COMMON     3     3      0
  1971                           ;!                                              4 BANK0      5     5      0
  1972                           ;!                            ___awdiv
  1973                           ;!                             ___wmul
  1974                           ;! ---------------------------------------------------------------------------------
  1975                           ;! (3) ___wmul                                               6     2      4    1706
  1976                           ;!                                              0 COMMON     6     2      4
  1977                           ;! ---------------------------------------------------------------------------------
  1978                           ;! (1) _led_init                                             0     0      0       0
  1979                           ;! ---------------------------------------------------------------------------------
  1980                           ;! (1) _lcd_print                                            5     3      2     681
  1981                           ;!                                              6 COMMON     5     3      2
  1982                           ;!                           _lcd_data
  1983                           ;!                         _lcd_lincol
  1984                           ;! ---------------------------------------------------------------------------------
  1985                           ;! (1) _lcd_num                                             12     8      4    4577
  1986                           ;!                                             11 COMMON     3     3      0
  1987                           ;!                                              8 BANK0      9     5      4
  1988                           ;!                            ___awdiv
  1989                           ;!                            ___awmod
  1990                           ;!                          _fmm_media (ARG)
  1991                           ;!                         _fmm_media1 (ARG)
  1992                           ;!                         _fmm_media2 (ARG)
  1993                           ;!                         _fmm_media3 (ARG)
  1994                           ;!                           _lcd_data
  1995                           ;!                         _lcd_lincol
  1996                           ;! ---------------------------------------------------------------------------------
  1997                           ;! (2) _lcd_lincol                                           3     2      1     372
  1998                           ;!                                              3 COMMON     3     2      1
  1999                           ;!                           _lcd_inst
  2000                           ;! ---------------------------------------------------------------------------------
  2001                           ;! (2) _lcd_data                                             3     3      0      44
  2002                           ;!                                              0 COMMON     3     3      0
  2003                           ;! ---------------------------------------------------------------------------------
  2004                           ;! (3) ___awdiv                                              9     5      4    1516
  2005                           ;!                                              6 COMMON     5     1      4
  2006                           ;!                                              0 BANK0      4     4      0
  2007                           ;!                             ___wmul (ARG)
  2008                           ;! ---------------------------------------------------------------------------------
  2009                           ;! (1) _lcd_init                                             3     3      0     176
  2010                           ;!                                              3 COMMON     3     3      0
  2011                           ;!                           _lcd_inst
  2012                           ;! ---------------------------------------------------------------------------------
  2013                           ;! (3) _lcd_inst                                             3     3      0     176
  2014                           ;!                                              0 COMMON     3     3      0
  2015                           ;! ---------------------------------------------------------------------------------
  2016                           ;! (1) _fmm_media3                                           2     0      2     908
  2017                           ;!                                              6 BANK0      2     0      2
  2018                           ;!                            ___aldiv
  2019                           ;! ---------------------------------------------------------------------------------
  2020                           ;! (1) _fmm_media2                                           2     0      2     908
  2021                           ;!                                              6 BANK0      2     0      2
  2022                           ;!                            ___aldiv
  2023                           ;! ---------------------------------------------------------------------------------
  2024                           ;! (1) _fmm_media1                                           2     0      2     908
  2025                           ;!                                              6 BANK0      2     0      2
  2026                           ;!                            ___aldiv
  2027                           ;! ---------------------------------------------------------------------------------
  2028                           ;! (1) _fmm_media                                            2     0      2     908
  2029                           ;!                                              6 BANK0      2     0      2
  2030                           ;!                            ___aldiv
  2031                           ;! ---------------------------------------------------------------------------------
  2032                           ;! (2) ___aldiv                                             15     7      8     908
  2033                           ;!                                              0 COMMON     9     1      8
  2034                           ;!                                              0 BANK0      6     6      0
  2035                           ;! ---------------------------------------------------------------------------------
  2036                           ;! (1) _fmm_add3                                            11     9      2    1249
  2037                           ;!                                              7 COMMON     4     2      2
  2038                           ;!                                              0 BANK0      7     7      0
  2039                           ;!                            ___awmod
  2040                           ;! ---------------------------------------------------------------------------------
  2041                           ;! (1) _fmm_add2                                            11     9      2    1249
  2042                           ;!                                              7 COMMON     4     2      2
  2043                           ;!                                              0 BANK0      7     7      0
  2044                           ;!                            ___awmod
  2045                           ;! ---------------------------------------------------------------------------------
  2046                           ;! (1) _fmm_add1                                            11     9      2    1249
  2047                           ;!                                              7 COMMON     4     2      2
  2048                           ;!                                              0 BANK0      7     7      0
  2049                           ;!                            ___awmod
  2050                           ;! ---------------------------------------------------------------------------------
  2051                           ;! (1) _fmm_add                                             11     9      2    1249
  2052                           ;!                                              7 COMMON     4     2      2
  2053                           ;!                                              0 BANK0      7     7      0
  2054                           ;!                            ___awmod
  2055                           ;! ---------------------------------------------------------------------------------
  2056                           ;! (2) ___awmod                                              7     3      4    1056
  2057                           ;!                                              0 COMMON     7     3      4
  2058                           ;! ---------------------------------------------------------------------------------
  2059                           ;! (1) _analog_init                                          0     0      0       0
  2060                           ;! ---------------------------------------------------------------------------------
  2061                           ;! Estimated maximum stack depth 3
  2062                           ;! ---------------------------------------------------------------------------------
  2063                           ;!
  2064                           ;! Call Graph Graphs:
  2065                           ;!
  2066                           ;! _main (ROOT)
  2067                           ;!   ___bmul
  2068                           ;!   _analog_init
  2069                           ;!   _fmm_add
  2070                           ;!     ___awmod
  2071                           ;!   _fmm_add1
  2072                           ;!     ___awmod
  2073                           ;!   _fmm_add2
  2074                           ;!     ___awmod
  2075                           ;!   _fmm_add3
  2076                           ;!     ___awmod
  2077                           ;!   _fmm_media
  2078                           ;!     ___aldiv
  2079                           ;!   _fmm_media1
  2080                           ;!     ___aldiv
  2081                           ;!   _fmm_media2
  2082                           ;!     ___aldiv
  2083                           ;!   _fmm_media3
  2084                           ;!     ___aldiv
  2085                           ;!   _lcd_init
  2086                           ;!     _lcd_inst
  2087                           ;!   _lcd_num
  2088                           ;!     ___awdiv
  2089                           ;!       ___wmul (ARG)
  2090                           ;!     ___awmod
  2091                           ;!     _fmm_media (ARG)
  2092                           ;!       ___aldiv
  2093                           ;!     _fmm_media1 (ARG)
  2094                           ;!       ___aldiv
  2095                           ;!     _fmm_media2 (ARG)
  2096                           ;!       ___aldiv
  2097                           ;!     _fmm_media3 (ARG)
  2098                           ;!       ___aldiv
  2099                           ;!     _lcd_data (ARG)
  2100                           ;!     _lcd_lincol (ARG)
  2101                           ;!       _lcd_inst
  2102                           ;!   _lcd_print
  2103                           ;!     _lcd_data
  2104                           ;!     _lcd_lincol
  2105                           ;!       _lcd_inst
  2106                           ;!   _led_init
  2107                           ;!   _led_monitorar
  2108                           ;!     _sensor_alert
  2109                           ;!       ___awdiv
  2110                           ;!         ___wmul (ARG)
  2111                           ;!       ___wmul
  2112                           ;!     _sensor_danger
  2113                           ;!       ___awdiv
  2114                           ;!         ___wmul (ARG)
  2115                           ;!       ___wmul
  2116                           ;!   _sensor_init
  2117                           ;!     ___bmul
  2118                           ;!   _sensor_readAll
  2119                           ;!     _ADC_read
  2120                           ;!     ___bmul
  2121                           ;!     ___lmul
  2122                           ;!       _ADC_read (ARG)
  2123                           ;!       ___bmul (ARG)
  2124                           ;!   _tecla_decrementar_descida
  2125                           ;!   _tecla_incrementar_subida
  2126                           ;!   _teclas_init
  2127                           ;!
  2128                           
  2129                           ;! Address spaces:
  2130                           
  2131                           ;!Name               Size   Autos  Total    Cost      Usage
  2132                           ;!BITCOMMON            E      0       0       0        0.0%
  2133                           ;!EEDATA             100      0       0       0        0.0%
  2134                           ;!NULL                 0      0       0       0        0.0%
  2135                           ;!CODE                 0      0       0       0        0.0%
  2136                           ;!COMMON               E      E       E       1      100.0%
  2137                           ;!BITSFR0              0      0       0       1        0.0%
  2138                           ;!SFR0                 0      0       0       1        0.0%
  2139                           ;!BITSFR1              0      0       0       2        0.0%
  2140                           ;!SFR1                 0      0       0       2        0.0%
  2141                           ;!STACK                0      0       0       2        0.0%
  2142                           ;!ABS                  0      0      90       3        0.0%
  2143                           ;!BITBANK0            50      0       0       4        0.0%
  2144                           ;!BITSFR3              0      0       0       4        0.0%
  2145                           ;!SFR3                 0      0       0       4        0.0%
  2146                           ;!BANK0               50     32      3C       5       75.0%
  2147                           ;!BITSFR2              0      0       0       5        0.0%
  2148                           ;!SFR2                 0      0       0       5        0.0%
  2149                           ;!BITBANK1            50      0       0       6        0.0%
  2150                           ;!BANK1               50      0      46       7       87.5%
  2151                           ;!BITBANK3            60      0       0       8        0.0%
  2152                           ;!BANK3               60      0       0       9        0.0%
  2153                           ;!BITBANK2            60      0       0      10        0.0%
  2154                           ;!BANK2               60      0       0      11        0.0%
  2155                           ;!DATA                 0      0      90      12        0.0%
  2156                           
  2157                           	global	_main
  2158                           
  2159 ;; *************** function _main *****************
  2160 ;; Defined at:
  2161 ;;		line 21 in file "main.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  i               1   49[BANK0 ] unsigned char 
  2166 ;;  refresh         4   45[BANK0 ] long 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : B00/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         0       0       0       0       0
  2177 ;;      Locals:         0       5       0       0       0
  2178 ;;      Temps:          0       3       0       0       0
  2179 ;;      Totals:         0       8       0       0       0
  2180 ;;Total ram usage:        8 bytes
  2181 ;; Hardware stack levels required when called:    3
  2182 ;; This function calls:
  2183 ;;		___bmul
  2184 ;;		_analog_init
  2185 ;;		_fmm_add
  2186 ;;		_fmm_add1
  2187 ;;		_fmm_add2
  2188 ;;		_fmm_add3
  2189 ;;		_fmm_media
  2190 ;;		_fmm_media1
  2191 ;;		_fmm_media2
  2192 ;;		_fmm_media3
  2193 ;;		_lcd_init
  2194 ;;		_lcd_num
  2195 ;;		_lcd_print
  2196 ;;		_led_init
  2197 ;;		_led_monitorar
  2198 ;;		_sensor_init
  2199 ;;		_sensor_readAll
  2200 ;;		_tecla_decrementar_descida
  2201 ;;		_tecla_incrementar_subida
  2202 ;;		_teclas_init
  2203 ;; This function is called by:
  2204 ;;		Startup code after reset
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2208                           	file	"main.c"
  2209                           	line	21
  2210                           global __pmaintext
  2211                           __pmaintext:	;psect for function _main
  2212  060D                     psect	maintext
  2213                           	file	"main.c"
  2214                           	line	21
  2215                           	global	__size_of_main
  2216                           	__size_of_main	equ	__end_of_main-_main
  2217  01DE                     	
  2218                           _main:	
  2219  060D                     ;incstack = 0
  2220                           	opt	stack 5
  2221                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2222                           	line	23
  2223                           	
  2224                           l1920:	
  2225  060D                     ;main.c: 23:     long refresh = 1;
  2226                           	movlw	0
  2227  060D  3000               	bcf	status, 5	;RP0=0, select bank0
  2228  060E  1283               	bcf	status, 6	;RP1=0, select bank0
  2229  060F  1303               	movwf	(main@refresh+3)
  2230  0610  00D0               	movlw	0
  2231  0611  3000               	movwf	(main@refresh+2)
  2232  0612  00CF               	movlw	0
  2233  0613  3000               	movwf	(main@refresh+1)
  2234  0614  00CE               	movlw	01h
  2235  0615  3001               	movwf	(main@refresh)
  2236  0616  00CD               
  2237                           	line	24
  2238                           	
  2239                           l1922:	
  2240  0617                     ;main.c: 24:     analog_init();
  2241                           	fcall	_analog_init
  2242  0617  120A  158A  241C  120A  118A  	line	25
  2243                           	
  2244                           l1924:	
  2245  061C                     ;main.c: 25:     lcd_init();
  2246                           	fcall	_lcd_init
  2247  061C  120A  158A  266E  120A  118A  	line	26
  2248                           	
  2249                           l1926:	
  2250  0621                     ;main.c: 26:     led_init();
  2251                           	fcall	_led_init
  2252  0621  120A  158A  2411  120A  118A  	line	27
  2253                           	
  2254                           l1928:	
  2255  0626                     ;main.c: 27:     teclas_init();
  2256                           	fcall	_teclas_init
  2257  0626  120A  118A  2003  120A  118A  	line	29
  2258                           	
  2259                           l1930:	
  2260  062B                     ;main.c: 29:       sensor_init(sensor, 0, 0, 100, 25, 20, 40);
  2261                           	clrf	(sensor_init@ch)
  2262  062B  01F4               	movlw	0
  2263  062C  3000               	movwf	(sensor_init@tmin)
  2264  062D  00F5               	movwf	(sensor_init@tmin+1)
  2265  062E  00F6               	movlw	064h
  2266  062F  3064               	movwf	(sensor_init@tmax)
  2267  0630  00F7               	movlw	0
  2268  0631  3000               	movwf	((sensor_init@tmax))+1
  2269  0632  00F8               	movlw	019h
  2270  0633  3019               	movwf	(sensor_init@alvo)
  2271  0634  00F9               	movlw	0
  2272  0635  3000               	movwf	((sensor_init@alvo))+1
  2273  0636  00FA               	movlw	low(014h)
  2274  0637  3014               	bcf	status, 5	;RP0=0, select bank0
  2275  0638  1283               	bcf	status, 6	;RP1=0, select bank0
  2276  0639  1303               	movwf	(??_main+0)+0
  2277  063A  00CA               	movf	(??_main+0)+0,w
  2278  063B  084A               	movwf	(sensor_init@aceitavel)
  2279  063C  00FB               	movlw	low(028h)
  2280  063D  3028               	movwf	(??_main+1)+0
  2281  063E  00CB               	movf	(??_main+1)+0,w
  2282  063F  084B               	movwf	(sensor_init@toleravel)
  2283  0640  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  2284  0641  30B6               	fcall	_sensor_init
  2285  0642  120A  118A  21DC  120A  118A  	line	30
  2286                           	
  2287                           l1932:	
  2288  0647                     ;main.c: 30:         sensor_init(sensor, 1, 0, 100, 25, 20, 40);
  2289                           	clrf	(sensor_init@ch)
  2290  0647  01F4               	incf	(sensor_init@ch),f
  2291  0648  0AF4               	movlw	0
  2292  0649  3000               	movwf	(sensor_init@tmin)
  2293  064A  00F5               	movwf	(sensor_init@tmin+1)
  2294  064B  00F6               	movlw	064h
  2295  064C  3064               	movwf	(sensor_init@tmax)
  2296  064D  00F7               	movlw	0
  2297  064E  3000               	movwf	((sensor_init@tmax))+1
  2298  064F  00F8               	movlw	019h
  2299  0650  3019               	movwf	(sensor_init@alvo)
  2300  0651  00F9               	movlw	0
  2301  0652  3000               	movwf	((sensor_init@alvo))+1
  2302  0653  00FA               	movlw	low(014h)
  2303  0654  3014               	bcf	status, 5	;RP0=0, select bank0
  2304  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  2305  0656  1303               	movwf	(??_main+0)+0
  2306  0657  00CA               	movf	(??_main+0)+0,w
  2307  0658  084A               	movwf	(sensor_init@aceitavel)
  2308  0659  00FB               	movlw	low(028h)
  2309  065A  3028               	movwf	(??_main+1)+0
  2310  065B  00CB               	movf	(??_main+1)+0,w
  2311  065C  084B               	movwf	(sensor_init@toleravel)
  2312  065D  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  2313  065E  30B6               	fcall	_sensor_init
  2314  065F  120A  118A  21DC  120A  118A  	line	31
  2315                           	
  2316                           l1934:	
  2317  0664                     ;main.c: 31:         sensor_init(sensor, 2, 0, 100, 25, 20, 40);
  2318                           	movlw	low(02h)
  2319  0664  3002               	bcf	status, 5	;RP0=0, select bank0
  2320  0665  1283               	bcf	status, 6	;RP1=0, select bank0
  2321  0666  1303               	movwf	(??_main+0)+0
  2322  0667  00CA               	movf	(??_main+0)+0,w
  2323  0668  084A               	movwf	(sensor_init@ch)
  2324  0669  00F4               	movlw	0
  2325  066A  3000               	movwf	(sensor_init@tmin)
  2326  066B  00F5               	movwf	(sensor_init@tmin+1)
  2327  066C  00F6               	movlw	064h
  2328  066D  3064               	movwf	(sensor_init@tmax)
  2329  066E  00F7               	movlw	0
  2330  066F  3000               	movwf	((sensor_init@tmax))+1
  2331  0670  00F8               	movlw	019h
  2332  0671  3019               	movwf	(sensor_init@alvo)
  2333  0672  00F9               	movlw	0
  2334  0673  3000               	movwf	((sensor_init@alvo))+1
  2335  0674  00FA               	movlw	low(014h)
  2336  0675  3014               	movwf	(??_main+1)+0
  2337  0676  00CB               	movf	(??_main+1)+0,w
  2338  0677  084B               	movwf	(sensor_init@aceitavel)
  2339  0678  00FB               	movlw	low(028h)
  2340  0679  3028               	movwf	(??_main+2)+0
  2341  067A  00CC               	movf	(??_main+2)+0,w
  2342  067B  084C               	movwf	(sensor_init@toleravel)
  2343  067C  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  2344  067D  30B6               	fcall	_sensor_init
  2345  067E  120A  118A  21DC  120A  118A  	line	32
  2346                           	
  2347                           l1936:	
  2348  0683                     ;main.c: 32:         sensor_init(sensor, 3, 0, 100, 25, 20, 40);
  2349                           	movlw	low(03h)
  2350  0683  3003               	bcf	status, 5	;RP0=0, select bank0
  2351  0684  1283               	bcf	status, 6	;RP1=0, select bank0
  2352  0685  1303               	movwf	(??_main+0)+0
  2353  0686  00CA               	movf	(??_main+0)+0,w
  2354  0687  084A               	movwf	(sensor_init@ch)
  2355  0688  00F4               	movlw	0
  2356  0689  3000               	movwf	(sensor_init@tmin)
  2357  068A  00F5               	movwf	(sensor_init@tmin+1)
  2358  068B  00F6               	movlw	064h
  2359  068C  3064               	movwf	(sensor_init@tmax)
  2360  068D  00F7               	movlw	0
  2361  068E  3000               	movwf	((sensor_init@tmax))+1
  2362  068F  00F8               	movlw	019h
  2363  0690  3019               	movwf	(sensor_init@alvo)
  2364  0691  00F9               	movlw	0
  2365  0692  3000               	movwf	((sensor_init@alvo))+1
  2366  0693  00FA               	movlw	low(014h)
  2367  0694  3014               	movwf	(??_main+1)+0
  2368  0695  00CB               	movf	(??_main+1)+0,w
  2369  0696  084B               	movwf	(sensor_init@aceitavel)
  2370  0697  00FB               	movlw	low(028h)
  2371  0698  3028               	movwf	(??_main+2)+0
  2372  0699  00CC               	movf	(??_main+2)+0,w
  2373  069A  084C               	movwf	(sensor_init@toleravel)
  2374  069B  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  2375  069C  30B6               	fcall	_sensor_init
  2376  069D  120A  118A  21DC  120A  118A  	line	34
  2377                           ;main.c: 34:     while(1)
  2378                           	
  2379                           l167:	
  2380  06A2                     	line	36
  2381                           ;main.c: 35:     {;main.c: 36:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2382                           	opt asmopt_push
  2383                           opt asmopt_off
  2384                           movlw	33
  2385  06A2  3021               	bcf	status, 5	;RP0=0, select bank0
  2386  06A3  1283               	bcf	status, 6	;RP1=0, select bank0
  2387  06A4  1303               movwf	((??_main+0)+0+1),f
  2388  06A5  00CB               	movlw	117
  2389  06A6  3075               movwf	((??_main+0)+0),f
  2390  06A7  00CA               	u1897:
  2391  06A8                     decfsz	((??_main+0)+0),f
  2392  06A8  0BCA               	goto	u1897
  2393  06A9  2EA8               	decfsz	((??_main+0)+0+1),f
  2394  06AA  0BCB               	goto	u1897
  2395  06AB  2EA8               	nop2
  2396  06AC  2EAD               opt asmopt_pop
  2397                           
  2398                           	line	37
  2399                           	
  2400                           l1938:	
  2401  06AD                     ;main.c: 37:         lcd_print(0, 0, "Temp. Sensor:   ");
  2402                           	clrf	(lcd_print@col)
  2403  06AD  01F6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2404  06AE  3001               	bcf	status, 5	;RP0=0, select bank0
  2405  06AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2406  06B0  1303               	movwf	(??_main+0)+0
  2407  06B1  00CA               	movf	(??_main+0)+0,w
  2408  06B2  084A               	movwf	(lcd_print@str)
  2409  06B3  00F7               	movlw	low(0)
  2410  06B4  3000               	fcall	_lcd_print
  2411  06B5  120A  158A  2561  120A  118A  	line	39
  2412                           	
  2413                           l1940:	
  2414  06BA                     ;main.c: 39:         sensor_readAll(sensor, 4);
  2415                           	movlw	low(04h)
  2416  06BA  3004               	bcf	status, 5	;RP0=0, select bank0
  2417  06BB  1283               	bcf	status, 6	;RP1=0, select bank0
  2418  06BC  1303               	movwf	(??_main+0)+0
  2419  06BD  00CA               	movf	(??_main+0)+0,w
  2420  06BE  084A               	movwf	(sensor_readAll@n)
  2421  06BF  00A8               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  2422  06C0  30B6               	fcall	_sensor_readAll
  2423  06C1  120A  118A  244C  120A  118A  	line	41
  2424                           	
  2425                           l1942:	
  2426  06C6                     ;main.c: 41:         fmm_add (sensor[0].Valor);
  2427                           	bsf	status, 5	;RP0=1, select bank1
  2428  06C6  1683               	bcf	status, 6	;RP1=0, select bank1
  2429  06C7  1303               	movf	1+(_sensor)^080h+02h,w
  2430  06C8  0839               	movwf	(fmm_add@valor+1)
  2431  06C9  00F8               	movf	0+(_sensor)^080h+02h,w
  2432  06CA  0838               	movwf	(fmm_add@valor)
  2433  06CB  00F7               	fcall	_fmm_add
  2434  06CC  120A  158A  271E  120A  118A  	line	42
  2435                           	
  2436                           l1944:	
  2437  06D1                     ;main.c: 42:         fmm_add1(sensor[1].Valor);
  2438                           	bsf	status, 5	;RP0=1, select bank1
  2439  06D1  1683               	bcf	status, 6	;RP1=0, select bank1
  2440  06D2  1303               	movf	1+(_sensor)^080h+0Eh,w
  2441  06D3  0845               	movwf	(fmm_add1@valor+1)
  2442  06D4  00F8               	movf	0+(_sensor)^080h+0Eh,w
  2443  06D5  0844               	movwf	(fmm_add1@valor)
  2444  06D6  00F7               	fcall	_fmm_add1
  2445  06D7  120A  158A  278F  120A  118A  	line	43
  2446                           	
  2447                           l1946:	
  2448  06DC                     ;main.c: 43:         fmm_add2(sensor[2].Valor);
  2449                           	bsf	status, 5	;RP0=1, select bank1
  2450  06DC  1683               	bcf	status, 6	;RP1=0, select bank1
  2451  06DD  1303               	movf	1+(_sensor)^080h+01Ah,w
  2452  06DE  0851               	movwf	(fmm_add2@valor+1)
  2453  06DF  00F8               	movf	0+(_sensor)^080h+01Ah,w
  2454  06E0  0850               	movwf	(fmm_add2@valor)
  2455  06E1  00F7               	fcall	_fmm_add2
  2456  06E2  120A  118A  2008  120A  118A  	line	44
  2457                           	
  2458                           l1948:	
  2459  06E7                     ;main.c: 44:         fmm_add3(sensor[3].Valor);
  2460                           	bsf	status, 5	;RP0=1, select bank1
  2461  06E7  1683               	bcf	status, 6	;RP1=0, select bank1
  2462  06E8  1303               	movf	1+(_sensor)^080h+026h,w
  2463  06E9  085D               	movwf	(fmm_add3@valor+1)
  2464  06EA  00F8               	movf	0+(_sensor)^080h+026h,w
  2465  06EB  085C               	movwf	(fmm_add3@valor)
  2466  06EC  00F7               	fcall	_fmm_add3
  2467  06ED  120A  118A  2079  120A  118A  	line	46
  2468                           	
  2469                           l1950:	
  2470  06F2                     ;main.c: 46:         lcd_num(0,14, (int)canal, 1 );
  2471                           	movlw	low(0Eh)
  2472  06F2  300E               	bcf	status, 5	;RP0=0, select bank0
  2473  06F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2474  06F4  1303               	movwf	(??_main+0)+0
  2475  06F5  00CA               	movf	(??_main+0)+0,w
  2476  06F6  084A               	movwf	(lcd_num@col)
  2477  06F7  00A8               	movf	(_canal+1),w
  2478  06F8  0859               	movwf	(lcd_num@num+1)
  2479  06F9  00AA               	movf	(_canal),w
  2480  06FA  0858               	movwf	(lcd_num@num)
  2481  06FB  00A9               	clrf	(lcd_num@tam)
  2482  06FC  01AB               	incf	(lcd_num@tam),f
  2483  06FD  0AAB               	movlw	low(0)
  2484  06FE  3000               	fcall	_lcd_num
  2485  06FF  120A  118A  251F  120A  118A  	line	47
  2486                           	
  2487                           l1952:	
  2488  0704                     ;main.c: 47:         if( !--refresh )
  2489                           	movlw	0FFh
  2490  0704  30FF               	bcf	status, 5	;RP0=0, select bank0
  2491  0705  1283               	bcf	status, 6	;RP1=0, select bank0
  2492  0706  1303               	addwf	(main@refresh),f
  2493  0707  07CD               	movlw	0FFh
  2494  0708  30FF               	skipc
  2495  0709  1C03               	addwf	(main@refresh+1),f
  2496  070A  07CE               	movlw	0FFh
  2497  070B  30FF               	skipc
  2498  070C  1C03               	addwf	(main@refresh+2),f
  2499  070D  07CF               	movlw	0FFh
  2500  070E  30FF               	skipc
  2501  070F  1C03               	addwf	(main@refresh+3),f
  2502  0710  07D0               	movf	((main@refresh+3)),w
  2503  0711  0850               	iorwf	((main@refresh+2)),w
  2504  0712  044F               	iorwf	((main@refresh+1)),w
  2505  0713  044E               	iorwf	((main@refresh)),w
  2506  0714  044D               	skipz
  2507  0715  1D03               	goto	u1801
  2508  0716  2F18               	goto	u1800
  2509  0717  2F19               u1801:
  2510  0718                     	goto	l1964
  2511  0718  2F8C               u1800:
  2512  0719                     	line	49
  2513                           	
  2514                           l1954:	
  2515  0719                     ;main.c: 48:         {;main.c: 49:             refresh = 50;
  2516                           	movlw	0
  2517  0719  3000               	movwf	(main@refresh+3)
  2518  071A  00D0               	movlw	0
  2519  071B  3000               	movwf	(main@refresh+2)
  2520  071C  00CF               	movlw	0
  2521  071D  3000               	movwf	(main@refresh+1)
  2522  071E  00CE               	movlw	032h
  2523  071F  3032               	movwf	(main@refresh)
  2524  0720  00CD               
  2525                           	line	50
  2526                           	
  2527                           l1956:	
  2528  0721                     ;main.c: 50:             lcd_num(1, 8, fmm_media (), 3);
  2529                           	movlw	low(08h)
  2530  0721  3008               	movwf	(??_main+0)+0
  2531  0722  00CA               	movf	(??_main+0)+0,w
  2532  0723  084A               	movwf	(lcd_num@col)
  2533  0724  00A8               	fcall	_fmm_media
  2534  0725  120A  158A  248F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2535  072A  1283               	bcf	status, 6	;RP1=0, select bank0
  2536  072B  1303               	movf	(1+(?_fmm_media)),w
  2537  072C  0827               	movwf	(lcd_num@num+1)
  2538  072D  00AA               	movf	(0+(?_fmm_media)),w
  2539  072E  0826               	movwf	(lcd_num@num)
  2540  072F  00A9               	movlw	low(03h)
  2541  0730  3003               	movwf	(??_main+1)+0
  2542  0731  00CB               	movf	(??_main+1)+0,w
  2543  0732  084B               	movwf	(lcd_num@tam)
  2544  0733  00AB               	movlw	low(01h)
  2545  0734  3001               	fcall	_lcd_num
  2546  0735  120A  118A  251F  120A  118A  	line	51
  2547                           	
  2548                           l1958:	
  2549  073A                     ;main.c: 51:             lcd_num(1, 8, fmm_media1(), 3);
  2550                           	movlw	low(08h)
  2551  073A  3008               	bcf	status, 5	;RP0=0, select bank0
  2552  073B  1283               	bcf	status, 6	;RP1=0, select bank0
  2553  073C  1303               	movwf	(??_main+0)+0
  2554  073D  00CA               	movf	(??_main+0)+0,w
  2555  073E  084A               	movwf	(lcd_num@col)
  2556  073F  00A8               	fcall	_fmm_media1
  2557  0740  120A  158A  24AE  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2558  0745  1283               	bcf	status, 6	;RP1=0, select bank0
  2559  0746  1303               	movf	(1+(?_fmm_media1)),w
  2560  0747  0827               	movwf	(lcd_num@num+1)
  2561  0748  00AA               	movf	(0+(?_fmm_media1)),w
  2562  0749  0826               	movwf	(lcd_num@num)
  2563  074A  00A9               	movlw	low(03h)
  2564  074B  3003               	movwf	(??_main+1)+0
  2565  074C  00CB               	movf	(??_main+1)+0,w
  2566  074D  084B               	movwf	(lcd_num@tam)
  2567  074E  00AB               	movlw	low(01h)
  2568  074F  3001               	fcall	_lcd_num
  2569  0750  120A  118A  251F  120A  118A  	line	52
  2570                           	
  2571                           l1960:	
  2572  0755                     ;main.c: 52:             lcd_num(1, 8, fmm_media2(), 3);
  2573                           	movlw	low(08h)
  2574  0755  3008               	bcf	status, 5	;RP0=0, select bank0
  2575  0756  1283               	bcf	status, 6	;RP1=0, select bank0
  2576  0757  1303               	movwf	(??_main+0)+0
  2577  0758  00CA               	movf	(??_main+0)+0,w
  2578  0759  084A               	movwf	(lcd_num@col)
  2579  075A  00A8               	fcall	_fmm_media2
  2580  075B  120A  158A  24CD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2581  0760  1283               	bcf	status, 6	;RP1=0, select bank0
  2582  0761  1303               	movf	(1+(?_fmm_media2)),w
  2583  0762  0827               	movwf	(lcd_num@num+1)
  2584  0763  00AA               	movf	(0+(?_fmm_media2)),w
  2585  0764  0826               	movwf	(lcd_num@num)
  2586  0765  00A9               	movlw	low(03h)
  2587  0766  3003               	movwf	(??_main+1)+0
  2588  0767  00CB               	movf	(??_main+1)+0,w
  2589  0768  084B               	movwf	(lcd_num@tam)
  2590  0769  00AB               	movlw	low(01h)
  2591  076A  3001               	fcall	_lcd_num
  2592  076B  120A  118A  251F  120A  118A  	line	53
  2593                           	
  2594                           l1962:	
  2595  0770                     ;main.c: 53:             lcd_num(1, 8, fmm_media3(), 3);
  2596                           	movlw	low(08h)
  2597  0770  3008               	bcf	status, 5	;RP0=0, select bank0
  2598  0771  1283               	bcf	status, 6	;RP1=0, select bank0
  2599  0772  1303               	movwf	(??_main+0)+0
  2600  0773  00CA               	movf	(??_main+0)+0,w
  2601  0774  084A               	movwf	(lcd_num@col)
  2602  0775  00A8               	fcall	_fmm_media3
  2603  0776  120A  158A  24EC  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2604  077B  1283               	bcf	status, 6	;RP1=0, select bank0
  2605  077C  1303               	movf	(1+(?_fmm_media3)),w
  2606  077D  0827               	movwf	(lcd_num@num+1)
  2607  077E  00AA               	movf	(0+(?_fmm_media3)),w
  2608  077F  0826               	movwf	(lcd_num@num)
  2609  0780  00A9               	movlw	low(03h)
  2610  0781  3003               	movwf	(??_main+1)+0
  2611  0782  00CB               	movf	(??_main+1)+0,w
  2612  0783  084B               	movwf	(lcd_num@tam)
  2613  0784  00AB               	movlw	low(01h)
  2614  0785  3001               	fcall	_lcd_num
  2615  0786  120A  118A  251F  120A  118A  	goto	l1964
  2616  078B  2F8C               	line	54
  2617                           ;main.c: 54:         }
  2618                           	
  2619                           l168:	
  2620  078C                     	line	56
  2621                           	
  2622                           l1964:	
  2623  078C                     ;main.c: 56:         if (tecla_incrementar_subida() )
  2624                           	fcall	_tecla_incrementar_subida
  2625  078C  120A  158A  2474  120A  118A  	xorlw	0
  2626  0791  3A00               	skipnz
  2627  0792  1903               	goto	u1811
  2628  0793  2F95               	goto	u1810
  2629  0794  2F96               u1811:
  2630  0795                     	goto	l1968
  2631  0795  2FA5               u1810:
  2632  0796                     	line	58
  2633                           	
  2634                           l1966:	
  2635  0796                     ;main.c: 57:         {;main.c: 58:             canal = ++canal % 4;
  2636                           	movlw	01h
  2637  0796  3001               	bcf	status, 5	;RP0=0, select bank0
  2638  0797  1283               	bcf	status, 6	;RP1=0, select bank0
  2639  0798  1303               	addwf	(_canal),f
  2640  0799  07D8               	skipnc
  2641  079A  1803               	incf	(_canal+1),f
  2642  079B  0AD9               	movlw	0
  2643  079C  3000               	addwf	(_canal+1),f
  2644  079D  07D9               	movlw	03h
  2645  079E  3003               	andwf	((_canal)),w
  2646  079F  0558               	movwf	(_canal)
  2647  07A0  00D8               	movlw	0
  2648  07A1  3000               	andwf	((_canal+1)),w
  2649  07A2  0559               	movwf	1+(_canal)
  2650  07A3  00D9               	goto	l1968
  2651  07A4  2FA5               	line	59
  2652                           ;main.c: 59:         }
  2653                           	
  2654                           l169:	
  2655  07A5                     	line	60
  2656                           	
  2657                           l1968:	
  2658  07A5                     ;main.c: 60:         if (tecla_decrementar_descida() )
  2659                           	fcall	_tecla_decrementar_descida
  2660  07A5  120A  158A  2459  120A  118A  	xorlw	0
  2661  07AA  3A00               	skipnz
  2662  07AB  1903               	goto	u1821
  2663  07AC  2FAE               	goto	u1820
  2664  07AD  2FAF               u1821:
  2665  07AE                     	goto	l1972
  2666  07AE  2FBE               u1820:
  2667  07AF                     	line	62
  2668                           	
  2669                           l1970:	
  2670  07AF                     ;main.c: 61:         {;main.c: 62:             canal = --canal % 4;
  2671                           	movlw	0FFh
  2672  07AF  30FF               	bcf	status, 5	;RP0=0, select bank0
  2673  07B0  1283               	bcf	status, 6	;RP1=0, select bank0
  2674  07B1  1303               	addwf	(_canal),f
  2675  07B2  07D8               	skipnc
  2676  07B3  1803               	incf	(_canal+1),f
  2677  07B4  0AD9               	movlw	0FFh
  2678  07B5  30FF               	addwf	(_canal+1),f
  2679  07B6  07D9               	movlw	03h
  2680  07B7  3003               	andwf	((_canal)),w
  2681  07B8  0558               	movwf	(_canal)
  2682  07B9  00D8               	movlw	0
  2683  07BA  3000               	andwf	((_canal+1)),w
  2684  07BB  0559               	movwf	1+(_canal)
  2685  07BC  00D9               	goto	l1972
  2686  07BD  2FBE               	line	63
  2687                           ;main.c: 63:         }
  2688                           	
  2689                           l170:	
  2690  07BE                     	line	66
  2691                           	
  2692                           l1972:	
  2693  07BE                     ;main.c: 66:         for( char i=0; i<4; i++ )
  2694                           	bcf	status, 5	;RP0=0, select bank0
  2695  07BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2696  07BF  1303               	clrf	(main@i)
  2697  07C0  01D1               	
  2698                           l1974:	
  2699  07C1                     	movlw	low(04h)
  2700  07C1  3004               	subwf	(main@i),w
  2701  07C2  0251               	skipc
  2702  07C3  1C03               	goto	u1831
  2703  07C4  2FC6               	goto	u1830
  2704  07C5  2FC7               u1831:
  2705  07C6                     	goto	l1978
  2706  07C6  2FC9               u1830:
  2707  07C7                     	goto	l167
  2708  07C7  2EA2               	
  2709                           l1976:	
  2710  07C8                     	goto	l167
  2711  07C8  2EA2               	
  2712                           l171:	
  2713  07C9                     	line	67
  2714                           	
  2715                           l1978:	
  2716  07C9                     ;main.c: 67:             led_monitorar(&sensor[i]);
  2717                           	movlw	low(0Ch)
  2718  07C9  300C               	movwf	(??_main+0)+0
  2719  07CA  00CA               	movf	(??_main+0)+0,w
  2720  07CB  084A               	movwf	(___bmul@multiplicand)
  2721  07CC  00F0               	movf	(main@i),w
  2722  07CD  0851               	fcall	___bmul
  2723  07CE  120A  158A  2440  120A  118A  	addlw	low(_sensor|((0x0)<<8))&0ffh
  2724  07D3  3EB6               	fcall	_led_monitorar
  2725  07D4  120A  158A  25D9  120A  118A  	
  2726                           l1980:	
  2727  07D9                     	movlw	low(01h)
  2728  07D9  3001               	bcf	status, 5	;RP0=0, select bank0
  2729  07DA  1283               	bcf	status, 6	;RP1=0, select bank0
  2730  07DB  1303               	movwf	(??_main+0)+0
  2731  07DC  00CA               	movf	(??_main+0)+0,w
  2732  07DD  084A               	addwf	(main@i),f
  2733  07DE  07D1               	
  2734                           l1982:	
  2735  07DF                     	movlw	low(04h)
  2736  07DF  3004               	subwf	(main@i),w
  2737  07E0  0251               	skipc
  2738  07E1  1C03               	goto	u1841
  2739  07E2  2FE4               	goto	u1840
  2740  07E3  2FE5               u1841:
  2741  07E4                     	goto	l1978
  2742  07E4  2FC9               u1840:
  2743  07E5                     	goto	l167
  2744  07E5  2EA2               	
  2745                           l172:	
  2746  07E6                     	goto	l167
  2747  07E6  2EA2               	line	68
  2748                           ;main.c: 68:     }
  2749                           	
  2750                           l173:	
  2751  07E7                     	goto	l167
  2752  07E7  2EA2               	
  2753                           l174:	
  2754  07E8                     	line	69
  2755                           	
  2756                           l175:	
  2757  07E8                     	global	start
  2758                           	ljmp	start
  2759  07E8  120A  118A  2800   	opt stack 0
  2760                           GLOBAL	__end_of_main
  2761                           	__end_of_main:
  2762  07EB                     	signat	_main,89
  2763                           	global	_teclas_init
  2764                           
  2765 ;; *************** function _teclas_init *****************
  2766 ;; Defined at:
  2767 ;;		line 19 in file "teclas.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		None
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2781 ;;      Params:         0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2794                           	file	"teclas.c"
  2795                           	line	19
  2796                           global __ptext1
  2797                           __ptext1:	;psect for function _teclas_init
  2798  0003                     psect	text1
  2799                           	file	"teclas.c"
  2800                           	line	19
  2801                           	global	__size_of_teclas_init
  2802                           	__size_of_teclas_init	equ	__end_of_teclas_init-_teclas_init
  2803  0005                     	
  2804                           _teclas_init:	
  2805  0003                     ;incstack = 0
  2806                           	opt	stack 7
  2807                           ; Regs used in _teclas_init: []
  2808                           	line	21
  2809                           	
  2810                           l1810:	
  2811  0003                     ;teclas.c: 21:     TRISCbits.TRISC4 = 1;
  2812                           	bsf	status, 5	;RP0=1, select bank1
  2813  0003  1683               	bcf	status, 6	;RP1=0, select bank1
  2814  0004  1303               	bsf	(135)^080h,4	;volatile
  2815  0005  1607               	line	22
  2816                           ;teclas.c: 22:     TRISCbits.TRISC5 = 1;
  2817                           	bsf	(135)^080h,5	;volatile
  2818  0006  1687               	line	23
  2819                           	
  2820                           l203:	
  2821  0007                     	return
  2822  0007  0008               	opt stack 0
  2823                           GLOBAL	__end_of_teclas_init
  2824                           	__end_of_teclas_init:
  2825  0008                     	signat	_teclas_init,89
  2826                           	global	_tecla_incrementar_subida
  2827                           
  2828 ;; *************** function _tecla_incrementar_subida *****************
  2829 ;; Defined at:
  2830 ;;		line 31 in file "teclas.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      unsigned char 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2844 ;;      Params:         0       0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0
  2847 ;;      Totals:         0       0       0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2857                           	line	31
  2858                           global __ptext2
  2859                           __ptext2:	;psect for function _tecla_incrementar_subida
  2860  0C74                     psect	text2
  2861                           	file	"teclas.c"
  2862                           	line	31
  2863                           	global	__size_of_tecla_incrementar_subida
  2864                           	__size_of_tecla_incrementar_subida	equ	__end_of_tecla_incrementar_subida-_tecla_increme
                                 ntar_subida
  2865  001B                     	
  2866                           _tecla_incrementar_subida:	
  2867  0C74                     ;incstack = 0
  2868                           	opt	stack 7
  2869                           ; Regs used in _tecla_incrementar_subida: [wreg+status,2+status,0]
  2870                           	line	33
  2871                           	
  2872                           l1868:	
  2873  0C74                     ;teclas.c: 33:     if (!incrementar_anterior && PORTCbits.RC5)
  2874                           	bcf	status, 5	;RP0=0, select bank0
  2875  0C74  1283               	bcf	status, 6	;RP1=0, select bank0
  2876  0C75  1303               	movf	((_incrementar_anterior)),w
  2877  0C76  085B               	btfss	status,2
  2878  0C77  1D03               	goto	u1711
  2879  0C78  2C7A               	goto	u1710
  2880  0C79  2C7B               u1711:
  2881  0C7A                     	goto	l1880
  2882  0C7A  2C87               u1710:
  2883  0C7B                     	
  2884                           l1870:	
  2885  0C7B                     	btfss	(7),5	;volatile
  2886  0C7B  1E87               	goto	u1721
  2887  0C7C  2C7E               	goto	u1720
  2888  0C7D  2C7F               u1721:
  2889  0C7E                     	goto	l1880
  2890  0C7E  2C87               u1720:
  2891  0C7F                     	line	35
  2892                           	
  2893                           l1872:	
  2894  0C7F                     ;teclas.c: 34:     {;teclas.c: 35:         incrementar_anterior = PORTCbits.RC5;
  2895                           	movlw	0
  2896  0C7F  3000               	btfsc	(7),5	;volatile
  2897  0C80  1A87               	movlw	1
  2898  0C81  3001               	movwf	(_incrementar_anterior)
  2899  0C82  00DB               	line	36
  2900                           	
  2901                           l1874:	
  2902  0C83                     ;teclas.c: 36:         return (1);
  2903                           	movlw	low(01h)
  2904  0C83  3001               	goto	l212
  2905  0C84  2C8E               	
  2906                           l1876:	
  2907  0C85                     	goto	l212
  2908  0C85  2C8E               	line	37
  2909                           	
  2910                           l1878:	
  2911  0C86                     ;teclas.c: 37:     }
  2912                           	goto	l212
  2913  0C86  2C8E               	line	38
  2914                           ;teclas.c: 38:     else
  2915                           	
  2916                           l211:	
  2917  0C87                     	line	40
  2918                           	
  2919                           l1880:	
  2920  0C87                     ;teclas.c: 39:     {;teclas.c: 40:         incrementar_anterior = PORTCbits.RC5;
  2921                           	movlw	0
  2922  0C87  3000               	btfsc	(7),5	;volatile
  2923  0C88  1A87               	movlw	1
  2924  0C89  3001               	movwf	(_incrementar_anterior)
  2925  0C8A  00DB               	line	41
  2926                           	
  2927                           l1882:	
  2928  0C8B                     ;teclas.c: 41:         return (0);
  2929                           	movlw	low(0)
  2930  0C8B  3000               	goto	l212
  2931  0C8C  2C8E               	
  2932                           l1884:	
  2933  0C8D                     	goto	l212
  2934  0C8D  2C8E               	line	42
  2935                           ;teclas.c: 42:     }
  2936                           	
  2937                           l213:	
  2938  0C8E                     	line	43
  2939                           	
  2940                           l212:	
  2941  0C8E                     	return
  2942  0C8E  0008               	opt stack 0
  2943                           GLOBAL	__end_of_tecla_incrementar_subida
  2944                           	__end_of_tecla_incrementar_subida:
  2945  0C8F                     	signat	_tecla_incrementar_subida,89
  2946                           	global	_tecla_decrementar_descida
  2947                           
  2948 ;; *************** function _tecla_decrementar_descida *****************
  2949 ;; Defined at:
  2950 ;;		line 79 in file "teclas.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      unsigned char 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         0       0       0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2977                           	line	79
  2978                           global __ptext3
  2979                           __ptext3:	;psect for function _tecla_decrementar_descida
  2980  0C59                     psect	text3
  2981                           	file	"teclas.c"
  2982                           	line	79
  2983                           	global	__size_of_tecla_decrementar_descida
  2984                           	__size_of_tecla_decrementar_descida	equ	__end_of_tecla_decrementar_descida-_tecla_decre
                                 mentar_descida
  2985  001B                     	
  2986                           _tecla_decrementar_descida:	
  2987  0C59                     ;incstack = 0
  2988                           	opt	stack 7
  2989                           ; Regs used in _tecla_decrementar_descida: [wreg+status,2+status,0]
  2990                           	line	81
  2991                           	
  2992                           l1886:	
  2993  0C59                     ;teclas.c: 81:     if (decrementar_anterior && !PORTCbits.RC4)
  2994                           	bcf	status, 5	;RP0=0, select bank0
  2995  0C59  1283               	bcf	status, 6	;RP1=0, select bank0
  2996  0C5A  1303               	movf	((_decrementar_anterior)),w
  2997  0C5B  085A               	btfsc	status,2
  2998  0C5C  1903               	goto	u1731
  2999  0C5D  2C5F               	goto	u1730
  3000  0C5E  2C60               u1731:
  3001  0C5F                     	goto	l1898
  3002  0C5F  2C6C               u1730:
  3003  0C60                     	
  3004                           l1888:	
  3005  0C60                     	btfsc	(7),4	;volatile
  3006  0C60  1A07               	goto	u1741
  3007  0C61  2C63               	goto	u1740
  3008  0C62  2C64               u1741:
  3009  0C63                     	goto	l1898
  3010  0C63  2C6C               u1740:
  3011  0C64                     	line	83
  3012                           	
  3013                           l1890:	
  3014  0C64                     ;teclas.c: 82:     {;teclas.c: 83:         decrementar_anterior = PORTCbits.RC4;
  3015                           	movlw	0
  3016  0C64  3000               	btfsc	(7),4	;volatile
  3017  0C65  1A07               	movlw	1
  3018  0C66  3001               	movwf	(_decrementar_anterior)
  3019  0C67  00DA               	line	84
  3020                           	
  3021                           l1892:	
  3022  0C68                     ;teclas.c: 84:         return (1);
  3023                           	movlw	low(01h)
  3024  0C68  3001               	goto	l232
  3025  0C69  2C73               	
  3026                           l1894:	
  3027  0C6A                     	goto	l232
  3028  0C6A  2C73               	line	85
  3029                           	
  3030                           l1896:	
  3031  0C6B                     ;teclas.c: 85:     }
  3032                           	goto	l232
  3033  0C6B  2C73               	line	86
  3034                           ;teclas.c: 86:     else
  3035                           	
  3036                           l231:	
  3037  0C6C                     	line	88
  3038                           	
  3039                           l1898:	
  3040  0C6C                     ;teclas.c: 87:     {;teclas.c: 88:         decrementar_anterior = PORTCbits.RC4;
  3041                           	movlw	0
  3042  0C6C  3000               	btfsc	(7),4	;volatile
  3043  0C6D  1A07               	movlw	1
  3044  0C6E  3001               	movwf	(_decrementar_anterior)
  3045  0C6F  00DA               	line	89
  3046                           	
  3047                           l1900:	
  3048  0C70                     ;teclas.c: 89:         return (0);
  3049                           	movlw	low(0)
  3050  0C70  3000               	goto	l232
  3051  0C71  2C73               	
  3052                           l1902:	
  3053  0C72                     	goto	l232
  3054  0C72  2C73               	line	90
  3055                           ;teclas.c: 90:     }
  3056                           	
  3057                           l233:	
  3058  0C73                     	line	91
  3059                           	
  3060                           l232:	
  3061  0C73                     	return
  3062  0C73  0008               	opt stack 0
  3063                           GLOBAL	__end_of_tecla_decrementar_descida
  3064                           	__end_of_tecla_decrementar_descida:
  3065  0C74                     	signat	_tecla_decrementar_descida,89
  3066                           	global	_sensor_readAll
  3067                           
  3068 ;; *************** function _sensor_readAll *****************
  3069 ;; Defined at:
  3070 ;;		line 25 in file "sensor.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  ptr             1    wreg     PTR struct sensor_t
  3073 ;;		 -> sensor(48), 
  3074 ;;  n               1    8[BANK0 ] unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  ptr             1   40[BANK0 ] PTR struct sensor_t
  3077 ;;		 -> sensor(48), 
  3078 ;;  i               1   41[BANK0 ] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       1       0       0       0
  3089 ;;      Locals:         0       2       0       0       0
  3090 ;;      Temps:          0      31       0       0       0
  3091 ;;      Totals:         0      34       0       0       0
  3092 ;;Total ram usage:       34 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    1
  3095 ;; This function calls:
  3096 ;;		_ADC_read
  3097 ;;		___bmul
  3098 ;;		___lmul
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3104                           	file	"sensor.c"
  3105                           	line	25
  3106                           global __ptext4
  3107                           __ptext4:	;psect for function _sensor_readAll
  3108  044C                     psect	text4
  3109                           	file	"sensor.c"
  3110                           	line	25
  3111                           	global	__size_of_sensor_readAll
  3112                           	__size_of_sensor_readAll	equ	__end_of_sensor_readAll-_sensor_readAll
  3113  00D3                     	
  3114                           _sensor_readAll:	
  3115  044C                     ;incstack = 0
  3116                           	opt	stack 6
  3117                           ; Regs used in _sensor_readAll: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3118                           ;sensor_readAll@ptr stored from wreg
  3119                           	bcf	status, 5	;RP0=0, select bank0
  3120  044C  1283               	bcf	status, 6	;RP1=0, select bank0
  3121  044D  1303               	movwf	(sensor_readAll@ptr)
  3122  044E  00C8               	line	28
  3123                           	
  3124                           l1800:	
  3125  044F                     ;sensor.c: 25: void sensor_readAll(struct sensor_t *ptr, char n );sensor.c: 26: {;sensor
                                 .c: 27:     char i;;sensor.c: 28:     for( i=0; i<n; i++ )
  3126                           	clrf	(sensor_readAll@i)
  3127  044F  01C9               	goto	l1806
  3128  0450  2D17               	
  3129                           l90:	
  3130  0451                     	line	29
  3131                           	
  3132                           l1802:	
  3133  0451                     ;sensor.c: 29:         (ptr+i)->Valor = ( ( (ADC_read((ptr+i)->CH) + 1) * (long)( (ptr+i
                                 )->Tmax - (ptr+i)->Tmin)>>10 ) + (ptr+i)->Tmin);
  3134                           	movlw	low(0Ch)
  3135  0451  300C               	movwf	(??_sensor_readAll+0)+0
  3136  0452  00A9               	movf	(??_sensor_readAll+0)+0,w
  3137  0453  0829               	movwf	(___bmul@multiplicand)
  3138  0454  00F0               	movf	(sensor_readAll@i),w
  3139  0455  0849               	fcall	___bmul
  3140  0456  120A  158A  2440  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3141  045B  1283               	bcf	status, 6	;RP1=0, select bank0
  3142  045C  1303               	addwf	(sensor_readAll@ptr),w
  3143  045D  0748               	movwf	(??_sensor_readAll+1)+0
  3144  045E  00AA               	movf	0+(??_sensor_readAll+1)+0,w
  3145  045F  082A               	addlw	06h
  3146  0460  3E06               	movwf	fsr0
  3147  0461  0084               	bcf	status, 7	;select IRP bank0
  3148  0462  1383               	movf	indf,w
  3149  0463  0800               	movwf	(??_sensor_readAll+2)+0+0
  3150  0464  00AB               	incf	fsr0,f
  3151  0465  0A84               	movf	indf,w
  3152  0466  0800               	movwf	(??_sensor_readAll+2)+0+1
  3153  0467  00AC               	movlw	low(0Ch)
  3154  0468  300C               	movwf	(??_sensor_readAll+4)+0
  3155  0469  00AD               	movf	(??_sensor_readAll+4)+0,w
  3156  046A  082D               	movwf	(___bmul@multiplicand)
  3157  046B  00F0               	movf	(sensor_readAll@i),w
  3158  046C  0849               	fcall	___bmul
  3159  046D  120A  158A  2440  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3160  0472  1283               	bcf	status, 6	;RP1=0, select bank0
  3161  0473  1303               	addwf	(sensor_readAll@ptr),w
  3162  0474  0748               	movwf	(??_sensor_readAll+5)+0
  3163  0475  00AE               	movf	0+(??_sensor_readAll+5)+0,w
  3164  0476  082E               	movwf	fsr0
  3165  0477  0084               	bcf	status, 7	;select IRP bank0
  3166  0478  1383               	movf	indf,w
  3167  0479  0800               	fcall	_ADC_read
  3168  047A  120A  158A  2594  120A  118A  	movf	(0+(?_ADC_read)),w
  3169  047F  0870               	addlw	low(01h)
  3170  0480  3E01               	bcf	status, 5	;RP0=0, select bank0
  3171  0481  1283               	bcf	status, 6	;RP1=0, select bank0
  3172  0482  1303               	movwf	(??_sensor_readAll+6)+0
  3173  0483  00AF               	movf	(1+(?_ADC_read)),w
  3174  0484  0871               	skipnc
  3175  0485  1803               	addlw	1
  3176  0486  3E01               	addlw	high(01h)
  3177  0487  3E00               	movwf	1+(??_sensor_readAll+6)+0
  3178  0488  00B0               	movf	0+(??_sensor_readAll+6)+0,w
  3179  0489  082F               	movwf	((??_sensor_readAll+8)+0)
  3180  048A  00B1               	movf	1+(??_sensor_readAll+6)+0,w
  3181  048B  0830               	movwf	((??_sensor_readAll+8)+0+1)
  3182  048C  00B2               	clrf	((??_sensor_readAll+8)+0+2)
  3183  048D  01B3               	clrf	((??_sensor_readAll+8)+0+3)
  3184  048E  01B4               	movf	3+(??_sensor_readAll+8)+0,w
  3185  048F  0834               	movwf	(___lmul@multiplier+3)
  3186  0490  00A3               	movf	2+(??_sensor_readAll+8)+0,w
  3187  0491  0833               	movwf	(___lmul@multiplier+2)
  3188  0492  00A2               	movf	1+(??_sensor_readAll+8)+0,w
  3189  0493  0832               	movwf	(___lmul@multiplier+1)
  3190  0494  00A1               	movf	0+(??_sensor_readAll+8)+0,w
  3191  0495  0831               	movwf	(___lmul@multiplier)
  3192  0496  00A0               
  3193                           	movlw	low(0Ch)
  3194  0497  300C               	movwf	(??_sensor_readAll+12)+0
  3195  0498  00B5               	movf	(??_sensor_readAll+12)+0,w
  3196  0499  0835               	movwf	(___bmul@multiplicand)
  3197  049A  00F0               	movf	(sensor_readAll@i),w
  3198  049B  0849               	fcall	___bmul
  3199  049C  120A  158A  2440  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3200  04A1  1283               	bcf	status, 6	;RP1=0, select bank0
  3201  04A2  1303               	addwf	(sensor_readAll@ptr),w
  3202  04A3  0748               	movwf	(??_sensor_readAll+13)+0
  3203  04A4  00B6               	movf	0+(??_sensor_readAll+13)+0,w
  3204  04A5  0836               	addlw	08h
  3205  04A6  3E08               	movwf	fsr0
  3206  04A7  0084               	bcf	status, 7	;select IRP bank0
  3207  04A8  1383               	movf	indf,w
  3208  04A9  0800               	movwf	(??_sensor_readAll+14)+0+0
  3209  04AA  00B7               	incf	fsr0,f
  3210  04AB  0A84               	movf	indf,w
  3211  04AC  0800               	movwf	(??_sensor_readAll+14)+0+1
  3212  04AD  00B8               	movlw	low(0Ch)
  3213  04AE  300C               	movwf	(??_sensor_readAll+16)+0
  3214  04AF  00B9               	movf	(??_sensor_readAll+16)+0,w
  3215  04B0  0839               	movwf	(___bmul@multiplicand)
  3216  04B1  00F0               	movf	(sensor_readAll@i),w
  3217  04B2  0849               	fcall	___bmul
  3218  04B3  120A  158A  2440  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3219  04B8  1283               	bcf	status, 6	;RP1=0, select bank0
  3220  04B9  1303               	addwf	(sensor_readAll@ptr),w
  3221  04BA  0748               	movwf	(??_sensor_readAll+17)+0
  3222  04BB  00BA               	movf	0+(??_sensor_readAll+17)+0,w
  3223  04BC  083A               	addlw	06h
  3224  04BD  3E06               	movwf	fsr0
  3225  04BE  0084               	bcf	status, 7	;select IRP bank0
  3226  04BF  1383               	movf	indf,w
  3227  04C0  0800               	movwf	(??_sensor_readAll+18)+0+0
  3228  04C1  00BB               	incf	fsr0,f
  3229  04C2  0A84               	movf	indf,w
  3230  04C3  0800               	movwf	(??_sensor_readAll+18)+0+1
  3231  04C4  00BC               	comf	(??_sensor_readAll+18)+0,f
  3232  04C5  09BB               	comf	(??_sensor_readAll+18)+1,f
  3233  04C6  09BC               	incf	(??_sensor_readAll+18)+0,f
  3234  04C7  0ABB               	skipnz
  3235  04C8  1903               	incf	(??_sensor_readAll+18)+1,f
  3236  04C9  0ABC               	movf	0+(??_sensor_readAll+14)+0,w
  3237  04CA  0837               	addwf	0+(??_sensor_readAll+18)+0,w
  3238  04CB  073B               	movwf	(??_sensor_readAll+20)+0
  3239  04CC  00BD               	movf	1+(??_sensor_readAll+14)+0,w
  3240  04CD  0838               	skipnc
  3241  04CE  1803               	incf	1+(??_sensor_readAll+14)+0,w
  3242  04CF  0A38               	addwf	1+(??_sensor_readAll+18)+0,w
  3243  04D0  073C               	movwf	1+(??_sensor_readAll+20)+0
  3244  04D1  00BE               	movf	0+(??_sensor_readAll+20)+0,w
  3245  04D2  083D               	movwf	(___lmul@multiplicand)
  3246  04D3  00A4               	movf	1+(??_sensor_readAll+20)+0,w
  3247  04D4  083E               	movwf	(___lmul@multiplicand+1)
  3248  04D5  00A5               	movlw	0
  3249  04D6  3000               	btfsc	(___lmul@multiplicand+1),7
  3250  04D7  1BA5               	movlw	255
  3251  04D8  30FF               	movwf	(___lmul@multiplicand+2)
  3252  04D9  00A6               	movwf	(___lmul@multiplicand+3)
  3253  04DA  00A7               	fcall	___lmul
  3254  04DB  120A  158A  2622  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3255  04E0  1283               	bcf	status, 6	;RP1=0, select bank0
  3256  04E1  1303               	movf	(0+?___lmul),w
  3257  04E2  0820               	movwf	(??_sensor_readAll+22)+0
  3258  04E3  00BF               	movf	(1+?___lmul),w
  3259  04E4  0821               	movwf	((??_sensor_readAll+22)+0+1)
  3260  04E5  00C0               	movf	(2+?___lmul),w
  3261  04E6  0822               	movwf	((??_sensor_readAll+22)+0+2)
  3262  04E7  00C1               	movf	(3+?___lmul),w
  3263  04E8  0823               	movwf	((??_sensor_readAll+22)+0+3)
  3264  04E9  00C2               	movlw	0Ah
  3265  04EA  300A               	movwf	(??_sensor_readAll+26)+0
  3266  04EB  00C3               u1615:
  3267  04EC                     	rlf	(??_sensor_readAll+22)+3,w
  3268  04EC  0D42               	rrf	(??_sensor_readAll+22)+3,f
  3269  04ED  0CC2               	rrf	(??_sensor_readAll+22)+2,f
  3270  04EE  0CC1               	rrf	(??_sensor_readAll+22)+1,f
  3271  04EF  0CC0               	rrf	(??_sensor_readAll+22)+0,f
  3272  04F0  0CBF               u1610:
  3273  04F1                     	decfsz	(??_sensor_readAll+26)+0,f
  3274  04F1  0BC3               	goto	u1615
  3275  04F2  2CEC               	movf	0+(??_sensor_readAll+2)+0,w
  3276  04F3  082B               	addwf	0+(??_sensor_readAll+22)+0,w
  3277  04F4  073F               	movwf	(??_sensor_readAll+27)+0
  3278  04F5  00C4               	movf	1+(??_sensor_readAll+2)+0,w
  3279  04F6  082C               	skipnc
  3280  04F7  1803               	incf	1+(??_sensor_readAll+2)+0,w
  3281  04F8  0A2C               	addwf	1+(??_sensor_readAll+22)+0,w
  3282  04F9  0740               	movwf	1+(??_sensor_readAll+27)+0
  3283  04FA  00C5               	movlw	low(0Ch)
  3284  04FB  300C               	movwf	(??_sensor_readAll+29)+0
  3285  04FC  00C6               	movf	(??_sensor_readAll+29)+0,w
  3286  04FD  0846               	movwf	(___bmul@multiplicand)
  3287  04FE  00F0               	movf	(sensor_readAll@i),w
  3288  04FF  0849               	fcall	___bmul
  3289  0500  120A  158A  2440  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3290  0505  1283               	bcf	status, 6	;RP1=0, select bank0
  3291  0506  1303               	addwf	(sensor_readAll@ptr),w
  3292  0507  0748               	movwf	(??_sensor_readAll+30)+0
  3293  0508  00C7               	movf	0+(??_sensor_readAll+30)+0,w
  3294  0509  0847               	addlw	02h
  3295  050A  3E02               	movwf	fsr0
  3296  050B  0084               	movf	0+(??_sensor_readAll+27)+0,w
  3297  050C  0844               	bcf	status, 7	;select IRP bank0
  3298  050D  1383               	movwf	indf
  3299  050E  0080               	incf	fsr0,f
  3300  050F  0A84               	movf	1+(??_sensor_readAll+27)+0,w
  3301  0510  0845               	movwf	indf
  3302  0511  0080               	
  3303                           l1804:	
  3304  0512                     	movlw	low(01h)
  3305  0512  3001               	movwf	(??_sensor_readAll+0)+0
  3306  0513  00A9               	movf	(??_sensor_readAll+0)+0,w
  3307  0514  0829               	addwf	(sensor_readAll@i),f
  3308  0515  07C9               	goto	l1806
  3309  0516  2D17               	
  3310                           l89:	
  3311  0517                     	
  3312                           l1806:	
  3313  0517                     	movf	(sensor_readAll@n),w
  3314  0517  0828               	subwf	(sensor_readAll@i),w
  3315  0518  0249               	skipc
  3316  0519  1C03               	goto	u1621
  3317  051A  2D1C               	goto	u1620
  3318  051B  2D1D               u1621:
  3319  051C                     	goto	l1802
  3320  051C  2C51               u1620:
  3321  051D                     	goto	l92
  3322  051D  2D1E               	
  3323                           l91:	
  3324  051E                     	line	30
  3325                           	
  3326                           l92:	
  3327  051E                     	return
  3328  051E  0008               	opt stack 0
  3329                           GLOBAL	__end_of_sensor_readAll
  3330                           	__end_of_sensor_readAll:
  3331  051F                     	signat	_sensor_readAll,8313
  3332                           	global	___lmul
  3333                           
  3334 ;; *************** function ___lmul *****************
  3335 ;; Defined at:
  3336 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3339 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  product         4   10[COMMON] unsigned long 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  4    0[BANK0 ] unsigned long 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         0       8       0       0       0
  3352 ;;      Locals:         4       0       0       0       0
  3353 ;;      Temps:          1       0       0       0       0
  3354 ;;      Totals:         5       8       0       0       0
  3355 ;;Total ram usage:       13 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_sensor_readAll
  3361 ;;		_sensor_read
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3365                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3366                           	line	15
  3367                           global __ptext5
  3368                           __ptext5:	;psect for function ___lmul
  3369  0E22                     psect	text5
  3370                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3371                           	line	15
  3372                           	global	__size_of___lmul
  3373                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3374  004C                     	
  3375                           ___lmul:	
  3376  0E22                     ;incstack = 0
  3377                           	opt	stack 6
  3378                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3379                           	line	119
  3380                           	
  3381                           l1606:	
  3382  0E22                     	movlw	high highword(0)
  3383  0E22  3000               	movwf	(___lmul@product+3)
  3384  0E23  00FD               	movlw	low highword(0)
  3385  0E24  3000               	movwf	(___lmul@product+2)
  3386  0E25  00FC               	movlw	high(0)
  3387  0E26  3000               	movwf	(___lmul@product+1)
  3388  0E27  00FB               	movlw	low(0)
  3389  0E28  3000               	movwf	(___lmul@product)
  3390  0E29  00FA               
  3391                           	goto	l1608
  3392  0E2A  2E2B               	line	120
  3393                           	
  3394                           l360:	
  3395  0E2B                     	line	121
  3396                           	
  3397                           l1608:	
  3398  0E2B                     	bcf	status, 5	;RP0=0, select bank0
  3399  0E2B  1283               	bcf	status, 6	;RP1=0, select bank0
  3400  0E2C  1303               	btfss	(___lmul@multiplier),(0)&7
  3401  0E2D  1C20               	goto	u1251
  3402  0E2E  2E30               	goto	u1250
  3403  0E2F  2E31               u1251:
  3404  0E30                     	goto	l1612
  3405  0E30  2E49               u1250:
  3406  0E31                     	line	122
  3407                           	
  3408                           l1610:	
  3409  0E31                     	movf	(___lmul@multiplicand),w
  3410  0E31  0824               	addwf	(___lmul@product),f
  3411  0E32  07FA               	movf	(___lmul@multiplicand+1),w
  3412  0E33  0825               	clrz
  3413  0E34  1103               	skipnc
  3414  0E35  1803               	addlw	1
  3415  0E36  3E01               	skipnz
  3416  0E37  1903               	goto	u1261
  3417  0E38  2E3A               	addwf	(___lmul@product+1),f
  3418  0E39  07FB               u1261:
  3419  0E3A                     	movf	(___lmul@multiplicand+2),w
  3420  0E3A  0826               	clrz
  3421  0E3B  1103               	skipnc
  3422  0E3C  1803               	addlw	1
  3423  0E3D  3E01               	skipnz
  3424  0E3E  1903               	goto	u1262
  3425  0E3F  2E41               	addwf	(___lmul@product+2),f
  3426  0E40  07FC               u1262:
  3427  0E41                     	movf	(___lmul@multiplicand+3),w
  3428  0E41  0827               	clrz
  3429  0E42  1103               	skipnc
  3430  0E43  1803               	addlw	1
  3431  0E44  3E01               	skipnz
  3432  0E45  1903               	goto	u1263
  3433  0E46  2E48               	addwf	(___lmul@product+3),f
  3434  0E47  07FD               u1263:
  3435  0E48                     
  3436                           	goto	l1612
  3437  0E48  2E49               	
  3438                           l361:	
  3439  0E49                     	line	123
  3440                           	
  3441                           l1612:	
  3442  0E49                     	movlw	01h
  3443  0E49  3001               	movwf	(??___lmul+0)+0
  3444  0E4A  00F9               u1275:
  3445  0E4B                     	clrc
  3446  0E4B  1003               	rlf	(___lmul@multiplicand),f
  3447  0E4C  0DA4               	rlf	(___lmul@multiplicand+1),f
  3448  0E4D  0DA5               	rlf	(___lmul@multiplicand+2),f
  3449  0E4E  0DA6               	rlf	(___lmul@multiplicand+3),f
  3450  0E4F  0DA7               	decfsz	(??___lmul+0)+0
  3451  0E50  0BF9               	goto	u1275
  3452  0E51  2E4B               	line	124
  3453                           	
  3454                           l1614:	
  3455  0E52                     	movlw	01h
  3456  0E52  3001               u1285:
  3457  0E53                     	clrc
  3458  0E53  1003               	rrf	(___lmul@multiplier+3),f
  3459  0E54  0CA3               	rrf	(___lmul@multiplier+2),f
  3460  0E55  0CA2               	rrf	(___lmul@multiplier+1),f
  3461  0E56  0CA1               	rrf	(___lmul@multiplier),f
  3462  0E57  0CA0               	addlw	-1
  3463  0E58  3EFF               	skipz
  3464  0E59  1D03               	goto	u1285
  3465  0E5A  2E53               
  3466                           	line	125
  3467                           	movf	(___lmul@multiplier+3),w
  3468  0E5B  0823               	iorwf	(___lmul@multiplier+2),w
  3469  0E5C  0422               	iorwf	(___lmul@multiplier+1),w
  3470  0E5D  0421               	iorwf	(___lmul@multiplier),w
  3471  0E5E  0420               	skipz
  3472  0E5F  1D03               	goto	u1291
  3473  0E60  2E62               	goto	u1290
  3474  0E61  2E63               u1291:
  3475  0E62                     	goto	l1608
  3476  0E62  2E2B               u1290:
  3477  0E63                     	goto	l1616
  3478  0E63  2E64               	
  3479                           l362:	
  3480  0E64                     	line	128
  3481                           	
  3482                           l1616:	
  3483  0E64                     	movf	(___lmul@product+3),w
  3484  0E64  087D               	movwf	(?___lmul+3)
  3485  0E65  00A3               	movf	(___lmul@product+2),w
  3486  0E66  087C               	movwf	(?___lmul+2)
  3487  0E67  00A2               	movf	(___lmul@product+1),w
  3488  0E68  087B               	movwf	(?___lmul+1)
  3489  0E69  00A1               	movf	(___lmul@product),w
  3490  0E6A  087A               	movwf	(?___lmul)
  3491  0E6B  00A0               
  3492                           	goto	l363
  3493  0E6C  2E6D               	
  3494                           l1618:	
  3495  0E6D                     	line	129
  3496                           	
  3497                           l363:	
  3498  0E6D                     	return
  3499  0E6D  0008               	opt stack 0
  3500                           GLOBAL	__end_of___lmul
  3501                           	__end_of___lmul:
  3502  0E6E                     	signat	___lmul,8316
  3503                           	global	_ADC_read
  3504                           
  3505 ;; *************** function _ADC_read *****************
  3506 ;; Defined at:
  3507 ;;		line 16 in file "analog.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  canais          1    wreg     unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  canais          1    8[COMMON] unsigned char 
  3512 ;;  Valor_ADC       2    6[COMMON] unsigned int 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2    0[COMMON] unsigned int 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         2       0       0       0       0
  3523 ;;      Locals:         5       0       0       0       0
  3524 ;;      Temps:          2       0       0       0       0
  3525 ;;      Totals:         9       0       0       0       0
  3526 ;;Total ram usage:        9 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_sensor_readAll
  3532 ;;		_sensor_read
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3536                           	file	"analog.c"
  3537                           	line	16
  3538                           global __ptext6
  3539                           __ptext6:	;psect for function _ADC_read
  3540  0D94                     psect	text6
  3541                           	file	"analog.c"
  3542                           	line	16
  3543                           	global	__size_of_ADC_read
  3544                           	__size_of_ADC_read	equ	__end_of_ADC_read-_ADC_read
  3545  0045                     	
  3546                           _ADC_read:	
  3547  0D94                     ;incstack = 0
  3548                           	opt	stack 6
  3549                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  3550                           ;ADC_read@canais stored from wreg
  3551                           	movwf	(ADC_read@canais)
  3552  0D94  00F8               	line	18
  3553                           	
  3554                           l1530:	
  3555  0D95                     ;analog.c: 16: unsigned int ADC_read (unsigned char canais);analog.c: 17: {;analog.c: 18
                                 :     unsigned int Valor_ADC = 0;
  3556                           	clrf	(ADC_read@Valor_ADC)
  3557  0D95  01F6               	clrf	(ADC_read@Valor_ADC+1)
  3558  0D96  01F7               	line	19
  3559                           	
  3560                           l1532:	
  3561  0D97                     ;analog.c: 19:     ADCON0bits.CHS = canais < 4 ? canais : 0;
  3562                           	movlw	low(04h)
  3563  0D97  3004               	subwf	(ADC_read@canais),w
  3564  0D98  0278               	skipc
  3565  0D99  1C03               	goto	u1161
  3566  0D9A  2D9C               	goto	u1160
  3567  0D9B  2D9D               u1161:
  3568  0D9C                     	goto	l1536
  3569  0D9C  2DA0               u1160:
  3570  0D9D                     	
  3571                           l1534:	
  3572  0D9D                     	clrf	(_ADC_read$99)
  3573  0D9D  01F4               	clrf	(_ADC_read$99+1)
  3574  0D9E  01F5               	goto	l1538
  3575  0D9F  2DA8               	
  3576                           l17:	
  3577  0DA0                     	
  3578                           l1536:	
  3579  0DA0                     	movf	(ADC_read@canais),w
  3580  0DA0  0878               	movwf	(??_ADC_read+0)+0
  3581  0DA1  00F2               	clrf	(??_ADC_read+0)+0+1
  3582  0DA2  01F3               	movf	0+(??_ADC_read+0)+0,w
  3583  0DA3  0872               	movwf	(_ADC_read$99)
  3584  0DA4  00F4               	movf	1+(??_ADC_read+0)+0,w
  3585  0DA5  0873               	movwf	(_ADC_read$99+1)
  3586  0DA6  00F5               	goto	l1538
  3587  0DA7  2DA8               	
  3588                           l19:	
  3589  0DA8                     	
  3590                           l1538:	
  3591  0DA8                     	movf	(_ADC_read$99),w
  3592  0DA8  0874               	movwf	(??_ADC_read+0)+0
  3593  0DA9  00F2               	rlf	(??_ADC_read+0)+0,f
  3594  0DAA  0DF2               	rlf	(??_ADC_read+0)+0,f
  3595  0DAB  0DF2               	bcf	status, 5	;RP0=0, select bank0
  3596  0DAC  1283               	bcf	status, 6	;RP1=0, select bank0
  3597  0DAD  1303               	movf	(31),w	;volatile
  3598  0DAE  081F               	xorwf	(??_ADC_read+0)+0,w
  3599  0DAF  0672               	andlw	not (((1<<4)-1)<<2)
  3600  0DB0  39C3               	xorwf	(??_ADC_read+0)+0,w
  3601  0DB1  0672               	movwf	(31)	;volatile
  3602  0DB2  009F               	line	20
  3603                           	
  3604                           l1540:	
  3605  0DB3                     ;analog.c: 20:     ADCON0bits.GO = 1;
  3606                           	bsf	(31),1	;volatile
  3607  0DB3  149F               	line	23
  3608                           ;analog.c: 23:     while (ADCON0bits.GO);
  3609                           	goto	l20
  3610  0DB4  2DB5               	
  3611                           l21:	
  3612  0DB5                     	
  3613                           l20:	
  3614  0DB5                     	btfsc	(31),1	;volatile
  3615  0DB5  189F               	goto	u1171
  3616  0DB6  2DB8               	goto	u1170
  3617  0DB7  2DB9               u1171:
  3618  0DB8                     	goto	l20
  3619  0DB8  2DB5               u1170:
  3620  0DB9                     	goto	l1542
  3621  0DB9  2DBA               	
  3622                           l22:	
  3623  0DBA                     	line	24
  3624                           	
  3625                           l1542:	
  3626  0DBA                     ;analog.c: 24:     Valor_ADC = ADRESH;
  3627                           	movf	(30),w	;volatile
  3628  0DBA  081E               	movwf	(??_ADC_read+0)+0
  3629  0DBB  00F2               	clrf	(??_ADC_read+0)+0+1
  3630  0DBC  01F3               	movf	0+(??_ADC_read+0)+0,w
  3631  0DBD  0872               	movwf	(ADC_read@Valor_ADC)
  3632  0DBE  00F6               	movf	1+(??_ADC_read+0)+0,w
  3633  0DBF  0873               	movwf	(ADC_read@Valor_ADC+1)
  3634  0DC0  00F7               	line	25
  3635                           ;analog.c: 25:     Valor_ADC <<=8;
  3636                           	movlw	08h
  3637  0DC1  3008               	
  3638                           u1185:
  3639  0DC2                     	clrc
  3640  0DC2  1003               	rlf	(ADC_read@Valor_ADC),f
  3641  0DC3  0DF6               	rlf	(ADC_read@Valor_ADC+1),f
  3642  0DC4  0DF7               	addlw	-1
  3643  0DC5  3EFF               	skipz
  3644  0DC6  1D03               	goto	u1185
  3645  0DC7  2DC2               	line	26
  3646                           ;analog.c: 26:     Valor_ADC += ADRESL;
  3647                           	bsf	status, 5	;RP0=1, select bank1
  3648  0DC8  1683               	bcf	status, 6	;RP1=0, select bank1
  3649  0DC9  1303               	movf	(158)^080h,w	;volatile
  3650  0DCA  081E               	movwf	(??_ADC_read+0)+0
  3651  0DCB  00F2               	clrf	(??_ADC_read+0)+0+1
  3652  0DCC  01F3               	movf	0+(??_ADC_read+0)+0,w
  3653  0DCD  0872               	addwf	(ADC_read@Valor_ADC),f
  3654  0DCE  07F6               	skipnc
  3655  0DCF  1803               	incf	(ADC_read@Valor_ADC+1),f
  3656  0DD0  0AF7               	movf	1+(??_ADC_read+0)+0,w
  3657  0DD1  0873               	addwf	(ADC_read@Valor_ADC+1),f
  3658  0DD2  07F7               	line	27
  3659                           ;analog.c: 27:     return (Valor_ADC);
  3660                           	movf	(ADC_read@Valor_ADC+1),w
  3661  0DD3  0877               	movwf	(?_ADC_read+1)
  3662  0DD4  00F1               	movf	(ADC_read@Valor_ADC),w
  3663  0DD5  0876               	movwf	(?_ADC_read)
  3664  0DD6  00F0               	goto	l23
  3665  0DD7  2DD8               	
  3666                           l1544:	
  3667  0DD8                     	line	28
  3668                           	
  3669                           l23:	
  3670  0DD8                     	return
  3671  0DD8  0008               	opt stack 0
  3672                           GLOBAL	__end_of_ADC_read
  3673                           	__end_of_ADC_read:
  3674  0DD9                     	signat	_ADC_read,4218
  3675                           	global	_sensor_init
  3676                           
  3677 ;; *************** function _sensor_init *****************
  3678 ;; Defined at:
  3679 ;;		line 9 in file "sensor.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  ptr             1    wreg     PTR struct sensor_t
  3682 ;;		 -> sensor(48), 
  3683 ;;  ch              1    4[COMMON] unsigned char 
  3684 ;;  tmin            2    5[COMMON] int 
  3685 ;;  tmax            2    7[COMMON] int 
  3686 ;;  alvo            2    9[COMMON] int 
  3687 ;;  aceitavel       1   11[COMMON] unsigned char 
  3688 ;;  toleravel       1   12[COMMON] unsigned char 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  ptr             1   13[COMMON] PTR struct sensor_t
  3691 ;;		 -> sensor(48), 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         9       0       0       0       0
  3702 ;;      Locals:         1       0       0       0       0
  3703 ;;      Temps:          0       4       0       0       0
  3704 ;;      Totals:        10       4       0       0       0
  3705 ;;Total ram usage:       14 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    1
  3708 ;; This function calls:
  3709 ;;		___bmul
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3715                           	file	"sensor.c"
  3716                           	line	9
  3717                           global __ptext7
  3718                           __ptext7:	;psect for function _sensor_init
  3719  01DC                     psect	text7
  3720                           	file	"sensor.c"
  3721                           	line	9
  3722                           	global	__size_of_sensor_init
  3723                           	__size_of_sensor_init	equ	__end_of_sensor_init-_sensor_init
  3724  008E                     	
  3725                           _sensor_init:	
  3726  01DC                     ;incstack = 0
  3727                           	opt	stack 6
  3728                           ; Regs used in _sensor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3729                           ;sensor_init@ptr stored from wreg
  3730                           	movwf	(sensor_init@ptr)
  3731  01DC  00FD               	line	11
  3732                           	
  3733                           l1798:	
  3734  01DD                     ;sensor.c: 9: void sensor_init(struct sensor_t * ptr, char ch, int tmin, int tmax, int a
                                 lvo, char aceitavel, char toleravel);sensor.c: 10: {;sensor.c: 11:     (ptr+ch)->CH = ch
                                 ;
  3735                           	movf	(sensor_init@ch),w
  3736  01DD  0874               	bcf	status, 5	;RP0=0, select bank0
  3737  01DE  1283               	bcf	status, 6	;RP1=0, select bank0
  3738  01DF  1303               	movwf	(??_sensor_init+0)+0
  3739  01E0  00A0               	clrf	(??_sensor_init+0)+0+1
  3740  01E1  01A1               	movlw	low(0Ch)
  3741  01E2  300C               	movwf	(??_sensor_init+2)+0
  3742  01E3  00A2               	movf	(??_sensor_init+2)+0,w
  3743  01E4  0822               	movwf	(___bmul@multiplicand)
  3744  01E5  00F0               	movf	(sensor_init@ch),w
  3745  01E6  0874               	fcall	___bmul
  3746  01E7  120A  158A  2440  120A  118A  	addwf	(sensor_init@ptr),w
  3747  01EC  077D               	bcf	status, 5	;RP0=0, select bank0
  3748  01ED  1283               	bcf	status, 6	;RP1=0, select bank0
  3749  01EE  1303               	movwf	(??_sensor_init+3)+0
  3750  01EF  00A3               	movf	0+(??_sensor_init+3)+0,w
  3751  01F0  0823               	movwf	fsr0
  3752  01F1  0084               	movf	0+(??_sensor_init+0)+0,w
  3753  01F2  0820               	bcf	status, 7	;select IRP bank0
  3754  01F3  1383               	movwf	indf
  3755  01F4  0080               	incf	fsr0,f
  3756  01F5  0A84               	movf	1+(??_sensor_init+0)+0,w
  3757  01F6  0821               	movwf	indf
  3758  01F7  0080               	line	12
  3759                           ;sensor.c: 12:     (ptr+ch)->Tmin = tmin;
  3760                           	movlw	low(0Ch)
  3761  01F8  300C               	movwf	(??_sensor_init+0)+0
  3762  01F9  00A0               	movf	(??_sensor_init+0)+0,w
  3763  01FA  0820               	movwf	(___bmul@multiplicand)
  3764  01FB  00F0               	movf	(sensor_init@ch),w
  3765  01FC  0874               	fcall	___bmul
  3766  01FD  120A  158A  2440  120A  118A  	addwf	(sensor_init@ptr),w
  3767  0202  077D               	bcf	status, 5	;RP0=0, select bank0
  3768  0203  1283               	bcf	status, 6	;RP1=0, select bank0
  3769  0204  1303               	movwf	(??_sensor_init+1)+0
  3770  0205  00A1               	movf	0+(??_sensor_init+1)+0,w
  3771  0206  0821               	addlw	06h
  3772  0207  3E06               	movwf	fsr0
  3773  0208  0084               	movf	(sensor_init@tmin),w
  3774  0209  0875               	bcf	status, 7	;select IRP bank0
  3775  020A  1383               	movwf	indf
  3776  020B  0080               	incf	fsr0,f
  3777  020C  0A84               	movf	(sensor_init@tmin+1),w
  3778  020D  0876               	movwf	indf
  3779  020E  0080               	line	13
  3780                           ;sensor.c: 13:     (ptr+ch)->Tmax = tmax;
  3781                           	movlw	low(0Ch)
  3782  020F  300C               	movwf	(??_sensor_init+0)+0
  3783  0210  00A0               	movf	(??_sensor_init+0)+0,w
  3784  0211  0820               	movwf	(___bmul@multiplicand)
  3785  0212  00F0               	movf	(sensor_init@ch),w
  3786  0213  0874               	fcall	___bmul
  3787  0214  120A  158A  2440  120A  118A  	addwf	(sensor_init@ptr),w
  3788  0219  077D               	bcf	status, 5	;RP0=0, select bank0
  3789  021A  1283               	bcf	status, 6	;RP1=0, select bank0
  3790  021B  1303               	movwf	(??_sensor_init+1)+0
  3791  021C  00A1               	movf	0+(??_sensor_init+1)+0,w
  3792  021D  0821               	addlw	08h
  3793  021E  3E08               	movwf	fsr0
  3794  021F  0084               	movf	(sensor_init@tmax),w
  3795  0220  0877               	bcf	status, 7	;select IRP bank0
  3796  0221  1383               	movwf	indf
  3797  0222  0080               	incf	fsr0,f
  3798  0223  0A84               	movf	(sensor_init@tmax+1),w
  3799  0224  0878               	movwf	indf
  3800  0225  0080               	line	14
  3801                           ;sensor.c: 14:     (ptr+ch)->Alvo = alvo;
  3802                           	movlw	low(0Ch)
  3803  0226  300C               	movwf	(??_sensor_init+0)+0
  3804  0227  00A0               	movf	(??_sensor_init+0)+0,w
  3805  0228  0820               	movwf	(___bmul@multiplicand)
  3806  0229  00F0               	movf	(sensor_init@ch),w
  3807  022A  0874               	fcall	___bmul
  3808  022B  120A  158A  2440  120A  118A  	addwf	(sensor_init@ptr),w
  3809  0230  077D               	bcf	status, 5	;RP0=0, select bank0
  3810  0231  1283               	bcf	status, 6	;RP1=0, select bank0
  3811  0232  1303               	movwf	(??_sensor_init+1)+0
  3812  0233  00A1               	movf	0+(??_sensor_init+1)+0,w
  3813  0234  0821               	addlw	04h
  3814  0235  3E04               	movwf	fsr0
  3815  0236  0084               	movf	(sensor_init@alvo),w
  3816  0237  0879               	bcf	status, 7	;select IRP bank0
  3817  0238  1383               	movwf	indf
  3818  0239  0080               	incf	fsr0,f
  3819  023A  0A84               	movf	(sensor_init@alvo+1),w
  3820  023B  087A               	movwf	indf
  3821  023C  0080               	line	15
  3822                           ;sensor.c: 15:     (ptr+ch)->aceitavel = aceitavel;
  3823                           	movf	(sensor_init@aceitavel),w
  3824  023D  087B               	movwf	(??_sensor_init+0)+0
  3825  023E  00A0               	movlw	low(0Ch)
  3826  023F  300C               	movwf	(??_sensor_init+1)+0
  3827  0240  00A1               	movf	(??_sensor_init+1)+0,w
  3828  0241  0821               	movwf	(___bmul@multiplicand)
  3829  0242  00F0               	movf	(sensor_init@ch),w
  3830  0243  0874               	fcall	___bmul
  3831  0244  120A  158A  2440  120A  118A  	addwf	(sensor_init@ptr),w
  3832  0249  077D               	bcf	status, 5	;RP0=0, select bank0
  3833  024A  1283               	bcf	status, 6	;RP1=0, select bank0
  3834  024B  1303               	movwf	(??_sensor_init+2)+0
  3835  024C  00A2               	movf	0+(??_sensor_init+2)+0,w
  3836  024D  0822               	addlw	0Ah
  3837  024E  3E0A               	movwf	fsr0
  3838  024F  0084               	movf	(??_sensor_init+0)+0,w
  3839  0250  0820               	bcf	status, 7	;select IRP bank0
  3840  0251  1383               	movwf	indf
  3841  0252  0080               	line	16
  3842                           ;sensor.c: 16:     (ptr+ch)->toleravel = toleravel;
  3843                           	movf	(sensor_init@toleravel),w
  3844  0253  087C               	movwf	(??_sensor_init+0)+0
  3845  0254  00A0               	movlw	low(0Ch)
  3846  0255  300C               	movwf	(??_sensor_init+1)+0
  3847  0256  00A1               	movf	(??_sensor_init+1)+0,w
  3848  0257  0821               	movwf	(___bmul@multiplicand)
  3849  0258  00F0               	movf	(sensor_init@ch),w
  3850  0259  0874               	fcall	___bmul
  3851  025A  120A  158A  2440  120A  118A  	addwf	(sensor_init@ptr),w
  3852  025F  077D               	bcf	status, 5	;RP0=0, select bank0
  3853  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  3854  0261  1303               	movwf	(??_sensor_init+2)+0
  3855  0262  00A2               	movf	0+(??_sensor_init+2)+0,w
  3856  0263  0822               	addlw	0Bh
  3857  0264  3E0B               	movwf	fsr0
  3858  0265  0084               	movf	(??_sensor_init+0)+0,w
  3859  0266  0820               	bcf	status, 7	;select IRP bank0
  3860  0267  1383               	movwf	indf
  3861  0268  0080               	line	17
  3862                           	
  3863                           l83:	
  3864  0269                     	return
  3865  0269  0008               	opt stack 0
  3866                           GLOBAL	__end_of_sensor_init
  3867                           	__end_of_sensor_init:
  3868  026A                     	signat	_sensor_init,28793
  3869                           	global	___bmul
  3870                           
  3871 ;; *************** function ___bmul *****************
  3872 ;; Defined at:
  3873 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  multiplier      1    wreg     unsigned char 
  3876 ;;  multiplicand    1    0[COMMON] unsigned char 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  multiplier      1    3[COMMON] unsigned char 
  3879 ;;  product         1    2[COMMON] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      unsigned char 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3889 ;;      Params:         1       0       0       0       0
  3890 ;;      Locals:         2       0       0       0       0
  3891 ;;      Temps:          1       0       0       0       0
  3892 ;;      Totals:         4       0       0       0       0
  3893 ;;Total ram usage:        4 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_sensor_init
  3899 ;;		_sensor_readAll
  3900 ;;		_main
  3901 ;;		_sensor_read
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3905                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3906                           	line	4
  3907                           global __ptext8
  3908                           __ptext8:	;psect for function ___bmul
  3909  0C40                     psect	text8
  3910                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3911                           	line	4
  3912                           	global	__size_of___bmul
  3913                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  3914  0019                     	
  3915                           ___bmul:	
  3916  0C40                     ;incstack = 0
  3917                           	opt	stack 6
  3918                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3919                           ;___bmul@multiplier stored from wreg
  3920                           	movwf	(___bmul@multiplier)
  3921  0C40  00F3               	line	6
  3922                           	
  3923                           l1620:	
  3924  0C41                     	clrf	(___bmul@product)
  3925  0C41  01F2               	goto	l1622
  3926  0C42  2C43               	line	42
  3927                           	
  3928                           l372:	
  3929  0C43                     	line	43
  3930                           	
  3931                           l1622:	
  3932  0C43                     	btfss	(___bmul@multiplier),(0)&7
  3933  0C43  1C73               	goto	u1301
  3934  0C44  2C46               	goto	u1300
  3935  0C45  2C47               u1301:
  3936  0C46                     	goto	l1626
  3937  0C46  2C4C               u1300:
  3938  0C47                     	line	44
  3939                           	
  3940                           l1624:	
  3941  0C47                     	movf	(___bmul@multiplicand),w
  3942  0C47  0870               	movwf	(??___bmul+0)+0
  3943  0C48  00F1               	movf	(??___bmul+0)+0,w
  3944  0C49  0871               	addwf	(___bmul@product),f
  3945  0C4A  07F2               	goto	l1626
  3946  0C4B  2C4C               	
  3947                           l373:	
  3948  0C4C                     	line	45
  3949                           	
  3950                           l1626:	
  3951  0C4C                     	clrc
  3952  0C4C  1003               	rlf	(___bmul@multiplicand),f
  3953  0C4D  0DF0               
  3954                           	line	46
  3955                           	
  3956                           l1628:	
  3957  0C4E                     	clrc
  3958  0C4E  1003               	rrf	(___bmul@multiplier),f
  3959  0C4F  0CF3               
  3960                           	line	47
  3961                           	movf	((___bmul@multiplier)),w
  3962  0C50  0873               	btfss	status,2
  3963  0C51  1D03               	goto	u1311
  3964  0C52  2C54               	goto	u1310
  3965  0C53  2C55               u1311:
  3966  0C54                     	goto	l1622
  3967  0C54  2C43               u1310:
  3968  0C55                     	goto	l1630
  3969  0C55  2C56               	
  3970                           l374:	
  3971  0C56                     	line	50
  3972                           	
  3973                           l1630:	
  3974  0C56                     	movf	(___bmul@product),w
  3975  0C56  0872               	goto	l375
  3976  0C57  2C58               	
  3977                           l1632:	
  3978  0C58                     	line	51
  3979                           	
  3980                           l375:	
  3981  0C58                     	return
  3982  0C58  0008               	opt stack 0
  3983                           GLOBAL	__end_of___bmul
  3984                           	__end_of___bmul:
  3985  0C59                     	signat	___bmul,8313
  3986                           	global	_led_monitorar
  3987                           
  3988 ;; *************** function _led_monitorar *****************
  3989 ;; Defined at:
  3990 ;;		line 28 in file "led.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  ptr             1    wreg     PTR struct sensor_t
  3993 ;;		 -> sensor(48), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  ptr             1    9[BANK0 ] PTR struct sensor_t
  3996 ;;		 -> sensor(48), 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0       0       0       0       0
  4007 ;;      Locals:         0       1       0       0       0
  4008 ;;      Temps:          0       0       0       0       0
  4009 ;;      Totals:         0       1       0       0       0
  4010 ;;Total ram usage:        1 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    2
  4013 ;; This function calls:
  4014 ;;		_sensor_alert
  4015 ;;		_sensor_danger
  4016 ;; This function is called by:
  4017 ;;		_main
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4021                           	file	"led.c"
  4022                           	line	28
  4023                           global __ptext9
  4024                           __ptext9:	;psect for function _led_monitorar
  4025  0DD9                     psect	text9
  4026                           	file	"led.c"
  4027                           	line	28
  4028                           	global	__size_of_led_monitorar
  4029                           	__size_of_led_monitorar	equ	__end_of_led_monitorar-_led_monitorar
  4030  0049                     	
  4031                           _led_monitorar:	
  4032  0DD9                     ;incstack = 0
  4033                           	opt	stack 5
  4034                           ; Regs used in _led_monitorar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4035                           ;led_monitorar@ptr stored from wreg
  4036                           	bcf	status, 5	;RP0=0, select bank0
  4037  0DD9  1283               	bcf	status, 6	;RP1=0, select bank0
  4038  0DDA  1303               	movwf	(led_monitorar@ptr)
  4039  0DDB  00A9               	line	30
  4040                           	
  4041                           l1904:	
  4042  0DDC                     ;led.c: 28: void led_monitorar(struct sensor_t * ptr );led.c: 29: {;led.c: 30:         i
                                 f( sensor_danger ( ptr ) && sensor_alert (ptr) )
  4043                           	movf	(led_monitorar@ptr),w
  4044  0DDC  0829               	fcall	_sensor_danger
  4045  0DDD  120A  118A  2308  120A  158A  	xorlw	0
  4046  0DE2  3A00               	skipnz
  4047  0DE3  1903               	goto	u1751
  4048  0DE4  2DE6               	goto	u1750
  4049  0DE5  2DE7               u1751:
  4050  0DE6                     	goto	l1910
  4051  0DE6  2DFA               u1750:
  4052  0DE7                     	
  4053                           l1906:	
  4054  0DE7                     	bcf	status, 5	;RP0=0, select bank0
  4055  0DE7  1283               	bcf	status, 6	;RP1=0, select bank0
  4056  0DE8  1303               	movf	(led_monitorar@ptr),w
  4057  0DE9  0829               	fcall	_sensor_alert
  4058  0DEA  120A  118A  226A  120A  158A  	xorlw	0
  4059  0DEF  3A00               	skipnz
  4060  0DF0  1903               	goto	u1761
  4061  0DF1  2DF3               	goto	u1760
  4062  0DF2  2DF4               u1761:
  4063  0DF3                     	goto	l1910
  4064  0DF3  2DFA               u1760:
  4065  0DF4                     	line	32
  4066                           	
  4067                           l1908:	
  4068  0DF4                     ;led.c: 31:         {;led.c: 32:             PORTBbits.RB0 = 0;
  4069                           	bcf	status, 5	;RP0=0, select bank0
  4070  0DF4  1283               	bcf	status, 6	;RP1=0, select bank0
  4071  0DF5  1303               	bcf	(6),0	;volatile
  4072  0DF6  1006               	line	33
  4073                           ;led.c: 33:             PORTBbits.RB1 = 0;
  4074                           	bcf	(6),1	;volatile
  4075  0DF7  1086               	line	34
  4076                           ;led.c: 34:             PORTBbits.RB2 = 1;
  4077                           	bsf	(6),2	;volatile
  4078  0DF8  1506               	line	36
  4079                           ;led.c: 36:         }
  4080                           	goto	l196
  4081  0DF9  2E21               	line	37
  4082                           ;led.c: 37:         else if(sensor_alert( ptr) && !sensor_danger (ptr))
  4083                           	
  4084                           l192:	
  4085  0DFA                     	
  4086                           l1910:	
  4087  0DFA                     	bcf	status, 5	;RP0=0, select bank0
  4088  0DFA  1283               	bcf	status, 6	;RP1=0, select bank0
  4089  0DFB  1303               	movf	(led_monitorar@ptr),w
  4090  0DFC  0829               	fcall	_sensor_alert
  4091  0DFD  120A  118A  226A  120A  158A  	xorlw	0
  4092  0E02  3A00               	skipnz
  4093  0E03  1903               	goto	u1771
  4094  0E04  2E06               	goto	u1770
  4095  0E05  2E07               u1771:
  4096  0E06                     	goto	l194
  4097  0E06  2E1A               u1770:
  4098  0E07                     	
  4099                           l1912:	
  4100  0E07                     	bcf	status, 5	;RP0=0, select bank0
  4101  0E07  1283               	bcf	status, 6	;RP1=0, select bank0
  4102  0E08  1303               	movf	(led_monitorar@ptr),w
  4103  0E09  0829               	fcall	_sensor_danger
  4104  0E0A  120A  118A  2308  120A  158A  	xorlw	0
  4105  0E0F  3A00               	skipz
  4106  0E10  1D03               	goto	u1781
  4107  0E11  2E13               	goto	u1780
  4108  0E12  2E14               u1781:
  4109  0E13                     	goto	l194
  4110  0E13  2E1A               u1780:
  4111  0E14                     	line	39
  4112                           	
  4113                           l1914:	
  4114  0E14                     ;led.c: 38:         {;led.c: 39:             PORTBbits.RB0 = 0;
  4115                           	bcf	status, 5	;RP0=0, select bank0
  4116  0E14  1283               	bcf	status, 6	;RP1=0, select bank0
  4117  0E15  1303               	bcf	(6),0	;volatile
  4118  0E16  1006               	line	40
  4119                           ;led.c: 40:             PORTBbits.RB2 = 0;
  4120                           	bcf	(6),2	;volatile
  4121  0E17  1106               	line	41
  4122                           ;led.c: 41:             PORTBbits.RB1 = 1;
  4123                           	bsf	(6),1	;volatile
  4124  0E18  1486               	line	42
  4125                           ;led.c: 42:         }
  4126                           	goto	l196
  4127  0E19  2E21               	line	43
  4128                           ;led.c: 43:         else
  4129                           	
  4130                           l194:	
  4131  0E1A                     	line	45
  4132                           ;led.c: 44:         {;led.c: 45:             PORTBbits.RB0 = 1;
  4133                           	bcf	status, 5	;RP0=0, select bank0
  4134  0E1A  1283               	bcf	status, 6	;RP1=0, select bank0
  4135  0E1B  1303               	bsf	(6),0	;volatile
  4136  0E1C  1406               	line	46
  4137                           ;led.c: 46:             PORTBbits.RB1 = 0;
  4138                           	bcf	(6),1	;volatile
  4139  0E1D  1086               	line	47
  4140                           ;led.c: 47:             PORTBbits.RB2 = 0;
  4141                           	bcf	(6),2	;volatile
  4142  0E1E  1106               	goto	l196
  4143  0E1F  2E21               	line	48
  4144                           ;led.c: 48:         }
  4145                           	
  4146                           l195:	
  4147  0E20                     	goto	l196
  4148  0E20  2E21               	
  4149                           l193:	
  4150  0E21                     	line	50
  4151                           	
  4152                           l196:	
  4153  0E21                     	return
  4154  0E21  0008               	opt stack 0
  4155                           GLOBAL	__end_of_led_monitorar
  4156                           	__end_of_led_monitorar:
  4157  0E22                     	signat	_led_monitorar,4217
  4158                           	global	_sensor_danger
  4159                           
  4160 ;; *************** function _sensor_danger *****************
  4161 ;; Defined at:
  4162 ;;		line 58 in file "sensor.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  ptr             1    wreg     PTR struct sensor_t
  4165 ;;		 -> sensor(48), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  ptr             1    8[BANK0 ] PTR struct sensor_t
  4168 ;;		 -> sensor(48), 
  4169 ;;  max             2    6[BANK0 ] int 
  4170 ;;  min             2    4[BANK0 ] int 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      unsigned char 
  4173 ;; Registers used:
  4174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4180 ;;      Params:         0       0       0       0       0
  4181 ;;      Locals:         0       5       0       0       0
  4182 ;;      Temps:          3       0       0       0       0
  4183 ;;      Totals:         3       5       0       0       0
  4184 ;;Total ram usage:        8 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    1
  4187 ;; This function calls:
  4188 ;;		___awdiv
  4189 ;;		___wmul
  4190 ;; This function is called by:
  4191 ;;		_led_monitorar
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4195                           	file	"sensor.c"
  4196                           	line	58
  4197                           global __ptext10
  4198                           __ptext10:	;psect for function _sensor_danger
  4199  0308                     psect	text10
  4200                           	file	"sensor.c"
  4201                           	line	58
  4202                           	global	__size_of_sensor_danger
  4203                           	__size_of_sensor_danger	equ	__end_of_sensor_danger-_sensor_danger
  4204  009E                     	
  4205                           _sensor_danger:	
  4206  0308                     ;incstack = 0
  4207                           	opt	stack 5
  4208                           ; Regs used in _sensor_danger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4209                           ;sensor_danger@ptr stored from wreg
  4210                           	bcf	status, 5	;RP0=0, select bank0
  4211  0308  1283               	bcf	status, 6	;RP1=0, select bank0
  4212  0309  1303               	movwf	(sensor_danger@ptr)
  4213  030A  00A8               	line	62
  4214                           	
  4215                           l1586:	
  4216  030B                     ;sensor.c: 58: char sensor_danger( struct sensor_t * ptr );sensor.c: 59: {;sensor.c: 60:
                                      int min, max;;sensor.c: 62:     min = ptr->Alvo;
  4217                           	movf	(sensor_danger@ptr),w
  4218  030B  0828               	addlw	04h
  4219  030C  3E04               	movwf	fsr0
  4220  030D  0084               	bcf	status, 7	;select IRP bank0
  4221  030E  1383               	movf	indf,w
  4222  030F  0800               	movwf	(sensor_danger@min)
  4223  0310  00A4               	incf	fsr0,f
  4224  0311  0A84               	movf	indf,w
  4225  0312  0800               	movwf	(sensor_danger@min+1)
  4226  0313  00A5               	line	63
  4227                           	
  4228                           l1588:	
  4229  0314                     ;sensor.c: 63:     min -= (min*ptr->toleravel)/100;
  4230                           	movlw	064h
  4231  0314  3064               	movwf	(___awdiv@divisor)
  4232  0315  00F6               	movlw	0
  4233  0316  3000               	movwf	((___awdiv@divisor))+1
  4234  0317  00F7               	movf	(sensor_danger@ptr),w
  4235  0318  0828               	addlw	0Bh
  4236  0319  3E0B               	movwf	fsr0
  4237  031A  0084               	movf	indf,w
  4238  031B  0800               	movwf	(??_sensor_danger+0)+0
  4239  031C  00FB               	clrf	(??_sensor_danger+0)+0+1
  4240  031D  01FC               	movf	0+(??_sensor_danger+0)+0,w
  4241  031E  087B               	movwf	(___wmul@multiplier)
  4242  031F  00F0               	movf	1+(??_sensor_danger+0)+0,w
  4243  0320  087C               	movwf	(___wmul@multiplier+1)
  4244  0321  00F1               	movf	(sensor_danger@min+1),w
  4245  0322  0825               	movwf	(___wmul@multiplicand+1)
  4246  0323  00F3               	movf	(sensor_danger@min),w
  4247  0324  0824               	movwf	(___wmul@multiplicand)
  4248  0325  00F2               	fcall	___wmul
  4249  0326  120A  158A  250B  120A  118A  	movf	(1+(?___wmul)),w
  4250  032B  0871               	movwf	(___awdiv@dividend+1)
  4251  032C  00F9               	movf	(0+(?___wmul)),w
  4252  032D  0870               	movwf	(___awdiv@dividend)
  4253  032E  00F8               	fcall	___awdiv
  4254  032F  120A  118A  20EA  120A  118A  	movf	(0+(?___awdiv)),w
  4255  0334  0876               	bcf	status, 5	;RP0=0, select bank0
  4256  0335  1283               	bcf	status, 6	;RP1=0, select bank0
  4257  0336  1303               	subwf	(sensor_danger@min),f
  4258  0337  02A4               	movf	(1+(?___awdiv)),w
  4259  0338  0877               	skipc
  4260  0339  1C03               	decf	(sensor_danger@min+1),f
  4261  033A  03A5               	subwf	(sensor_danger@min+1),f
  4262  033B  02A5               	line	64
  4263                           	
  4264                           l1590:	
  4265  033C                     ;sensor.c: 64:     max = ptr->Alvo;
  4266                           	movf	(sensor_danger@ptr),w
  4267  033C  0828               	addlw	04h
  4268  033D  3E04               	movwf	fsr0
  4269  033E  0084               	bcf	status, 7	;select IRP bank0
  4270  033F  1383               	movf	indf,w
  4271  0340  0800               	movwf	(sensor_danger@max)
  4272  0341  00A6               	incf	fsr0,f
  4273  0342  0A84               	movf	indf,w
  4274  0343  0800               	movwf	(sensor_danger@max+1)
  4275  0344  00A7               	line	65
  4276                           ;sensor.c: 65:     max += (max*ptr->toleravel)/100;
  4277                           	movlw	064h
  4278  0345  3064               	movwf	(___awdiv@divisor)
  4279  0346  00F6               	movlw	0
  4280  0347  3000               	movwf	((___awdiv@divisor))+1
  4281  0348  00F7               	movf	(sensor_danger@ptr),w
  4282  0349  0828               	addlw	0Bh
  4283  034A  3E0B               	movwf	fsr0
  4284  034B  0084               	movf	indf,w
  4285  034C  0800               	movwf	(??_sensor_danger+0)+0
  4286  034D  00FB               	clrf	(??_sensor_danger+0)+0+1
  4287  034E  01FC               	movf	0+(??_sensor_danger+0)+0,w
  4288  034F  087B               	movwf	(___wmul@multiplier)
  4289  0350  00F0               	movf	1+(??_sensor_danger+0)+0,w
  4290  0351  087C               	movwf	(___wmul@multiplier+1)
  4291  0352  00F1               	movf	(sensor_danger@max+1),w
  4292  0353  0827               	movwf	(___wmul@multiplicand+1)
  4293  0354  00F3               	movf	(sensor_danger@max),w
  4294  0355  0826               	movwf	(___wmul@multiplicand)
  4295  0356  00F2               	fcall	___wmul
  4296  0357  120A  158A  250B  120A  118A  	movf	(1+(?___wmul)),w
  4297  035C  0871               	movwf	(___awdiv@dividend+1)
  4298  035D  00F9               	movf	(0+(?___wmul)),w
  4299  035E  0870               	movwf	(___awdiv@dividend)
  4300  035F  00F8               	fcall	___awdiv
  4301  0360  120A  118A  20EA  120A  118A  	movf	(0+(?___awdiv)),w
  4302  0365  0876               	bcf	status, 5	;RP0=0, select bank0
  4303  0366  1283               	bcf	status, 6	;RP1=0, select bank0
  4304  0367  1303               	addwf	(sensor_danger@max),f
  4305  0368  07A6               	skipnc
  4306  0369  1803               	incf	(sensor_danger@max+1),f
  4307  036A  0AA7               	movf	(1+(?___awdiv)),w
  4308  036B  0877               	addwf	(sensor_danger@max+1),f
  4309  036C  07A7               	line	67
  4310                           	
  4311                           l1592:	
  4312  036D                     ;sensor.c: 67:     if( ptr->Valor <= min || ptr->Valor >= max )
  4313                           	movf	(sensor_danger@ptr),w
  4314  036D  0828               	addlw	02h
  4315  036E  3E02               	movwf	fsr0
  4316  036F  0084               	bcf	status, 7	;select IRP bank0
  4317  0370  1383               	movf	indf,w
  4318  0371  0800               	movwf	(??_sensor_danger+0)+0+0
  4319  0372  00FB               	incf	fsr0,f
  4320  0373  0A84               	movf	indf,w
  4321  0374  0800               	movwf	(??_sensor_danger+0)+0+1
  4322  0375  00FC               	movf	(sensor_danger@min+1),w
  4323  0376  0825               	xorlw	80h
  4324  0377  3A80               	movwf	(??_sensor_danger+2)+0
  4325  0378  00FD               	movf	1+(??_sensor_danger+0)+0,w
  4326  0379  087C               	xorlw	80h
  4327  037A  3A80               	subwf	(??_sensor_danger+2)+0,w
  4328  037B  027D               	skipz
  4329  037C  1D03               	goto	u1235
  4330  037D  2B80               	movf	0+(??_sensor_danger+0)+0,w
  4331  037E  087B               	subwf	(sensor_danger@min),w
  4332  037F  0224               u1235:
  4333  0380                     
  4334                           	skipnc
  4335  0380  1803               	goto	u1231
  4336  0381  2B83               	goto	u1230
  4337  0382  2B84               u1231:
  4338  0383                     	goto	l1596
  4339  0383  2B9E               u1230:
  4340  0384                     	
  4341                           l1594:	
  4342  0384                     	bcf	status, 5	;RP0=0, select bank0
  4343  0384  1283               	bcf	status, 6	;RP1=0, select bank0
  4344  0385  1303               	movf	(sensor_danger@ptr),w
  4345  0386  0828               	addlw	02h
  4346  0387  3E02               	movwf	fsr0
  4347  0388  0084               	bcf	status, 7	;select IRP bank0
  4348  0389  1383               	movf	indf,w
  4349  038A  0800               	movwf	(??_sensor_danger+0)+0+0
  4350  038B  00FB               	incf	fsr0,f
  4351  038C  0A84               	movf	indf,w
  4352  038D  0800               	movwf	(??_sensor_danger+0)+0+1
  4353  038E  00FC               	movf	1+(??_sensor_danger+0)+0,w
  4354  038F  087C               	xorlw	80h
  4355  0390  3A80               	movwf	(??_sensor_danger+2)+0
  4356  0391  00FD               	movf	(sensor_danger@max+1),w
  4357  0392  0827               	xorlw	80h
  4358  0393  3A80               	subwf	(??_sensor_danger+2)+0,w
  4359  0394  027D               	skipz
  4360  0395  1D03               	goto	u1245
  4361  0396  2B99               	movf	(sensor_danger@max),w
  4362  0397  0826               	subwf	0+(??_sensor_danger+0)+0,w
  4363  0398  027B               u1245:
  4364  0399                     
  4365                           	skipc
  4366  0399  1C03               	goto	u1241
  4367  039A  2B9C               	goto	u1240
  4368  039B  2B9D               u1241:
  4369  039C                     	goto	l1602
  4370  039C  2BA2               u1240:
  4371  039D                     	goto	l1596
  4372  039D  2B9E               	
  4373                           l113:	
  4374  039E                     	line	68
  4375                           	
  4376                           l1596:	
  4377  039E                     ;sensor.c: 68:         return( 1 );
  4378                           	movlw	low(01h)
  4379  039E  3001               	goto	l114
  4380  039F  2BA5               	
  4381                           l1598:	
  4382  03A0                     	goto	l114
  4383  03A0  2BA5               	
  4384                           l1600:	
  4385  03A1                     	goto	l114
  4386  03A1  2BA5               	line	69
  4387                           ;sensor.c: 69:     else
  4388                           	
  4389                           l111:	
  4390  03A2                     	line	70
  4391                           	
  4392                           l1602:	
  4393  03A2                     ;sensor.c: 70:         return( 0 );
  4394                           	movlw	low(0)
  4395  03A2  3000               	goto	l114
  4396  03A3  2BA5               	
  4397                           l1604:	
  4398  03A4                     	goto	l114
  4399  03A4  2BA5               	
  4400                           l115:	
  4401  03A5                     	line	71
  4402                           	
  4403                           l114:	
  4404  03A5                     	return
  4405  03A5  0008               	opt stack 0
  4406                           GLOBAL	__end_of_sensor_danger
  4407                           	__end_of_sensor_danger:
  4408  03A6                     	signat	_sensor_danger,4217
  4409                           	global	_sensor_alert
  4410                           
  4411 ;; *************** function _sensor_alert *****************
  4412 ;; Defined at:
  4413 ;;		line 44 in file "sensor.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  ptr             1    wreg     PTR struct sensor_t
  4416 ;;		 -> sensor(48), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  ptr             1    8[BANK0 ] PTR struct sensor_t
  4419 ;;		 -> sensor(48), 
  4420 ;;  max             2    6[BANK0 ] int 
  4421 ;;  min             2    4[BANK0 ] int 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       0       0       0       0
  4432 ;;      Locals:         0       5       0       0       0
  4433 ;;      Temps:          3       0       0       0       0
  4434 ;;      Totals:         3       5       0       0       0
  4435 ;;Total ram usage:        8 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    1
  4438 ;; This function calls:
  4439 ;;		___awdiv
  4440 ;;		___wmul
  4441 ;; This function is called by:
  4442 ;;		_led_monitorar
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4446                           	line	44
  4447                           global __ptext11
  4448                           __ptext11:	;psect for function _sensor_alert
  4449  026A                     psect	text11
  4450                           	file	"sensor.c"
  4451                           	line	44
  4452                           	global	__size_of_sensor_alert
  4453                           	__size_of_sensor_alert	equ	__end_of_sensor_alert-_sensor_alert
  4454  009E                     	
  4455                           _sensor_alert:	
  4456  026A                     ;incstack = 0
  4457                           	opt	stack 5
  4458                           ; Regs used in _sensor_alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4459                           ;sensor_alert@ptr stored from wreg
  4460                           	bcf	status, 5	;RP0=0, select bank0
  4461  026A  1283               	bcf	status, 6	;RP1=0, select bank0
  4462  026B  1303               	movwf	(sensor_alert@ptr)
  4463  026C  00A8               	line	48
  4464                           	
  4465                           l1566:	
  4466  026D                     ;sensor.c: 44: char sensor_alert( struct sensor_t * ptr );sensor.c: 45: {;sensor.c: 46: 
                                     int min, max;;sensor.c: 48:     min = ptr->Alvo;
  4467                           	movf	(sensor_alert@ptr),w
  4468  026D  0828               	addlw	04h
  4469  026E  3E04               	movwf	fsr0
  4470  026F  0084               	bcf	status, 7	;select IRP bank0
  4471  0270  1383               	movf	indf,w
  4472  0271  0800               	movwf	(sensor_alert@min)
  4473  0272  00A4               	incf	fsr0,f
  4474  0273  0A84               	movf	indf,w
  4475  0274  0800               	movwf	(sensor_alert@min+1)
  4476  0275  00A5               	line	49
  4477                           	
  4478                           l1568:	
  4479  0276                     ;sensor.c: 49:     min -= (min*ptr->aceitavel)/100;
  4480                           	movlw	064h
  4481  0276  3064               	movwf	(___awdiv@divisor)
  4482  0277  00F6               	movlw	0
  4483  0278  3000               	movwf	((___awdiv@divisor))+1
  4484  0279  00F7               	movf	(sensor_alert@ptr),w
  4485  027A  0828               	addlw	0Ah
  4486  027B  3E0A               	movwf	fsr0
  4487  027C  0084               	movf	indf,w
  4488  027D  0800               	movwf	(??_sensor_alert+0)+0
  4489  027E  00FB               	clrf	(??_sensor_alert+0)+0+1
  4490  027F  01FC               	movf	0+(??_sensor_alert+0)+0,w
  4491  0280  087B               	movwf	(___wmul@multiplier)
  4492  0281  00F0               	movf	1+(??_sensor_alert+0)+0,w
  4493  0282  087C               	movwf	(___wmul@multiplier+1)
  4494  0283  00F1               	movf	(sensor_alert@min+1),w
  4495  0284  0825               	movwf	(___wmul@multiplicand+1)
  4496  0285  00F3               	movf	(sensor_alert@min),w
  4497  0286  0824               	movwf	(___wmul@multiplicand)
  4498  0287  00F2               	fcall	___wmul
  4499  0288  120A  158A  250B  120A  118A  	movf	(1+(?___wmul)),w
  4500  028D  0871               	movwf	(___awdiv@dividend+1)
  4501  028E  00F9               	movf	(0+(?___wmul)),w
  4502  028F  0870               	movwf	(___awdiv@dividend)
  4503  0290  00F8               	fcall	___awdiv
  4504  0291  120A  118A  20EA  120A  118A  	movf	(0+(?___awdiv)),w
  4505  0296  0876               	bcf	status, 5	;RP0=0, select bank0
  4506  0297  1283               	bcf	status, 6	;RP1=0, select bank0
  4507  0298  1303               	subwf	(sensor_alert@min),f
  4508  0299  02A4               	movf	(1+(?___awdiv)),w
  4509  029A  0877               	skipc
  4510  029B  1C03               	decf	(sensor_alert@min+1),f
  4511  029C  03A5               	subwf	(sensor_alert@min+1),f
  4512  029D  02A5               	line	50
  4513                           	
  4514                           l1570:	
  4515  029E                     ;sensor.c: 50:     max = ptr->Alvo;
  4516                           	movf	(sensor_alert@ptr),w
  4517  029E  0828               	addlw	04h
  4518  029F  3E04               	movwf	fsr0
  4519  02A0  0084               	bcf	status, 7	;select IRP bank0
  4520  02A1  1383               	movf	indf,w
  4521  02A2  0800               	movwf	(sensor_alert@max)
  4522  02A3  00A6               	incf	fsr0,f
  4523  02A4  0A84               	movf	indf,w
  4524  02A5  0800               	movwf	(sensor_alert@max+1)
  4525  02A6  00A7               	line	51
  4526                           ;sensor.c: 51:     max += (max*ptr->aceitavel)/100;
  4527                           	movlw	064h
  4528  02A7  3064               	movwf	(___awdiv@divisor)
  4529  02A8  00F6               	movlw	0
  4530  02A9  3000               	movwf	((___awdiv@divisor))+1
  4531  02AA  00F7               	movf	(sensor_alert@ptr),w
  4532  02AB  0828               	addlw	0Ah
  4533  02AC  3E0A               	movwf	fsr0
  4534  02AD  0084               	movf	indf,w
  4535  02AE  0800               	movwf	(??_sensor_alert+0)+0
  4536  02AF  00FB               	clrf	(??_sensor_alert+0)+0+1
  4537  02B0  01FC               	movf	0+(??_sensor_alert+0)+0,w
  4538  02B1  087B               	movwf	(___wmul@multiplier)
  4539  02B2  00F0               	movf	1+(??_sensor_alert+0)+0,w
  4540  02B3  087C               	movwf	(___wmul@multiplier+1)
  4541  02B4  00F1               	movf	(sensor_alert@max+1),w
  4542  02B5  0827               	movwf	(___wmul@multiplicand+1)
  4543  02B6  00F3               	movf	(sensor_alert@max),w
  4544  02B7  0826               	movwf	(___wmul@multiplicand)
  4545  02B8  00F2               	fcall	___wmul
  4546  02B9  120A  158A  250B  120A  118A  	movf	(1+(?___wmul)),w
  4547  02BE  0871               	movwf	(___awdiv@dividend+1)
  4548  02BF  00F9               	movf	(0+(?___wmul)),w
  4549  02C0  0870               	movwf	(___awdiv@dividend)
  4550  02C1  00F8               	fcall	___awdiv
  4551  02C2  120A  118A  20EA  120A  118A  	movf	(0+(?___awdiv)),w
  4552  02C7  0876               	bcf	status, 5	;RP0=0, select bank0
  4553  02C8  1283               	bcf	status, 6	;RP1=0, select bank0
  4554  02C9  1303               	addwf	(sensor_alert@max),f
  4555  02CA  07A6               	skipnc
  4556  02CB  1803               	incf	(sensor_alert@max+1),f
  4557  02CC  0AA7               	movf	(1+(?___awdiv)),w
  4558  02CD  0877               	addwf	(sensor_alert@max+1),f
  4559  02CE  07A7               	line	53
  4560                           	
  4561                           l1572:	
  4562  02CF                     ;sensor.c: 53:     if( ptr->Valor <= min || ptr->Valor >= max )
  4563                           	movf	(sensor_alert@ptr),w
  4564  02CF  0828               	addlw	02h
  4565  02D0  3E02               	movwf	fsr0
  4566  02D1  0084               	bcf	status, 7	;select IRP bank0
  4567  02D2  1383               	movf	indf,w
  4568  02D3  0800               	movwf	(??_sensor_alert+0)+0+0
  4569  02D4  00FB               	incf	fsr0,f
  4570  02D5  0A84               	movf	indf,w
  4571  02D6  0800               	movwf	(??_sensor_alert+0)+0+1
  4572  02D7  00FC               	movf	(sensor_alert@min+1),w
  4573  02D8  0825               	xorlw	80h
  4574  02D9  3A80               	movwf	(??_sensor_alert+2)+0
  4575  02DA  00FD               	movf	1+(??_sensor_alert+0)+0,w
  4576  02DB  087C               	xorlw	80h
  4577  02DC  3A80               	subwf	(??_sensor_alert+2)+0,w
  4578  02DD  027D               	skipz
  4579  02DE  1D03               	goto	u1215
  4580  02DF  2AE2               	movf	0+(??_sensor_alert+0)+0,w
  4581  02E0  087B               	subwf	(sensor_alert@min),w
  4582  02E1  0224               u1215:
  4583  02E2                     
  4584                           	skipnc
  4585  02E2  1803               	goto	u1211
  4586  02E3  2AE5               	goto	u1210
  4587  02E4  2AE6               u1211:
  4588  02E5                     	goto	l1576
  4589  02E5  2B00               u1210:
  4590  02E6                     	
  4591                           l1574:	
  4592  02E6                     	bcf	status, 5	;RP0=0, select bank0
  4593  02E6  1283               	bcf	status, 6	;RP1=0, select bank0
  4594  02E7  1303               	movf	(sensor_alert@ptr),w
  4595  02E8  0828               	addlw	02h
  4596  02E9  3E02               	movwf	fsr0
  4597  02EA  0084               	bcf	status, 7	;select IRP bank0
  4598  02EB  1383               	movf	indf,w
  4599  02EC  0800               	movwf	(??_sensor_alert+0)+0+0
  4600  02ED  00FB               	incf	fsr0,f
  4601  02EE  0A84               	movf	indf,w
  4602  02EF  0800               	movwf	(??_sensor_alert+0)+0+1
  4603  02F0  00FC               	movf	1+(??_sensor_alert+0)+0,w
  4604  02F1  087C               	xorlw	80h
  4605  02F2  3A80               	movwf	(??_sensor_alert+2)+0
  4606  02F3  00FD               	movf	(sensor_alert@max+1),w
  4607  02F4  0827               	xorlw	80h
  4608  02F5  3A80               	subwf	(??_sensor_alert+2)+0,w
  4609  02F6  027D               	skipz
  4610  02F7  1D03               	goto	u1225
  4611  02F8  2AFB               	movf	(sensor_alert@max),w
  4612  02F9  0826               	subwf	0+(??_sensor_alert+0)+0,w
  4613  02FA  027B               u1225:
  4614  02FB                     
  4615                           	skipc
  4616  02FB  1C03               	goto	u1221
  4617  02FC  2AFE               	goto	u1220
  4618  02FD  2AFF               u1221:
  4619  02FE                     	goto	l1582
  4620  02FE  2B04               u1220:
  4621  02FF                     	goto	l1576
  4622  02FF  2B00               	
  4623                           l106:	
  4624  0300                     	line	54
  4625                           	
  4626                           l1576:	
  4627  0300                     ;sensor.c: 54:         return( 1 );
  4628                           	movlw	low(01h)
  4629  0300  3001               	goto	l107
  4630  0301  2B07               	
  4631                           l1578:	
  4632  0302                     	goto	l107
  4633  0302  2B07               	
  4634                           l1580:	
  4635  0303                     	goto	l107
  4636  0303  2B07               	line	55
  4637                           ;sensor.c: 55:     else
  4638                           	
  4639                           l104:	
  4640  0304                     	line	56
  4641                           	
  4642                           l1582:	
  4643  0304                     ;sensor.c: 56:         return( 0 );
  4644                           	movlw	low(0)
  4645  0304  3000               	goto	l107
  4646  0305  2B07               	
  4647                           l1584:	
  4648  0306                     	goto	l107
  4649  0306  2B07               	
  4650                           l108:	
  4651  0307                     	line	57
  4652                           	
  4653                           l107:	
  4654  0307                     	return
  4655  0307  0008               	opt stack 0
  4656                           GLOBAL	__end_of_sensor_alert
  4657                           	__end_of_sensor_alert:
  4658  0308                     	signat	_sensor_alert,4217
  4659                           	global	___wmul
  4660                           
  4661 ;; *************** function ___wmul *****************
  4662 ;; Defined at:
  4663 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  multiplier      2    0[COMMON] unsigned int 
  4666 ;;  multiplicand    2    2[COMMON] unsigned int 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  product         2    4[COMMON] unsigned int 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2    0[COMMON] unsigned int 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4678 ;;      Params:         4       0       0       0       0
  4679 ;;      Locals:         2       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0
  4681 ;;      Totals:         6       0       0       0       0
  4682 ;;Total ram usage:        6 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_sensor_alert
  4688 ;;		_sensor_danger
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  4692                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4693                           	line	15
  4694                           global __ptext12
  4695                           __ptext12:	;psect for function ___wmul
  4696  0D0B                     psect	text12
  4697                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4698                           	line	15
  4699                           	global	__size_of___wmul
  4700                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4701  0028                     	
  4702                           ___wmul:	
  4703  0D0B                     ;incstack = 0
  4704                           	opt	stack 5
  4705                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4706                           	line	43
  4707                           	
  4708                           l1472:	
  4709  0D0B                     	clrf	(___wmul@product)
  4710  0D0B  01F4               	clrf	(___wmul@product+1)
  4711  0D0C  01F5               	goto	l1474
  4712  0D0D  2D0E               	line	44
  4713                           	
  4714                           l348:	
  4715  0D0E                     	line	45
  4716                           	
  4717                           l1474:	
  4718  0D0E                     	btfss	(___wmul@multiplier),(0)&7
  4719  0D0E  1C70               	goto	u1021
  4720  0D0F  2D11               	goto	u1020
  4721  0D10  2D12               u1021:
  4722  0D11                     	goto	l349
  4723  0D11  2D18               u1020:
  4724  0D12                     	line	46
  4725                           	
  4726                           l1476:	
  4727  0D12                     	movf	(___wmul@multiplicand),w
  4728  0D12  0872               	addwf	(___wmul@product),f
  4729  0D13  07F4               	skipnc
  4730  0D14  1803               	incf	(___wmul@product+1),f
  4731  0D15  0AF5               	movf	(___wmul@multiplicand+1),w
  4732  0D16  0873               	addwf	(___wmul@product+1),f
  4733  0D17  07F5               	
  4734                           l349:	
  4735  0D18                     	line	47
  4736                           	movlw	01h
  4737  0D18  3001               	
  4738                           u1035:
  4739  0D19                     	clrc
  4740  0D19  1003               	rlf	(___wmul@multiplicand),f
  4741  0D1A  0DF2               	rlf	(___wmul@multiplicand+1),f
  4742  0D1B  0DF3               	addlw	-1
  4743  0D1C  3EFF               	skipz
  4744  0D1D  1D03               	goto	u1035
  4745  0D1E  2D19               	line	48
  4746                           	
  4747                           l1478:	
  4748  0D1F                     	movlw	01h
  4749  0D1F  3001               	
  4750                           u1045:
  4751  0D20                     	clrc
  4752  0D20  1003               	rrf	(___wmul@multiplier+1),f
  4753  0D21  0CF1               	rrf	(___wmul@multiplier),f
  4754  0D22  0CF0               	addlw	-1
  4755  0D23  3EFF               	skipz
  4756  0D24  1D03               	goto	u1045
  4757  0D25  2D20               	line	49
  4758                           	
  4759                           l1480:	
  4760  0D26                     	movf	((___wmul@multiplier)),w
  4761  0D26  0870               iorwf	((___wmul@multiplier+1)),w
  4762  0D27  0471               	btfss	status,2
  4763  0D28  1D03               	goto	u1051
  4764  0D29  2D2B               	goto	u1050
  4765  0D2A  2D2C               u1051:
  4766  0D2B                     	goto	l1474
  4767  0D2B  2D0E               u1050:
  4768  0D2C                     	goto	l1482
  4769  0D2C  2D2D               	
  4770                           l350:	
  4771  0D2D                     	line	52
  4772                           	
  4773                           l1482:	
  4774  0D2D                     	movf	(___wmul@product+1),w
  4775  0D2D  0875               	movwf	(?___wmul+1)
  4776  0D2E  00F1               	movf	(___wmul@product),w
  4777  0D2F  0874               	movwf	(?___wmul)
  4778  0D30  00F0               	goto	l351
  4779  0D31  2D32               	
  4780                           l1484:	
  4781  0D32                     	line	53
  4782                           	
  4783                           l351:	
  4784  0D32                     	return
  4785  0D32  0008               	opt stack 0
  4786                           GLOBAL	__end_of___wmul
  4787                           	__end_of___wmul:
  4788  0D33                     	signat	___wmul,8314
  4789                           	global	_led_init
  4790                           
  4791 ;; *************** function _led_init *****************
  4792 ;; Defined at:
  4793 ;;		line 9 in file "led.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		None
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4807 ;;      Params:         0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4820                           	file	"led.c"
  4821                           	line	9
  4822                           global __ptext13
  4823                           __ptext13:	;psect for function _led_init
  4824  0C11                     psect	text13
  4825                           	file	"led.c"
  4826                           	line	9
  4827                           	global	__size_of_led_init
  4828                           	__size_of_led_init	equ	__end_of_led_init-_led_init
  4829  000B                     	
  4830                           _led_init:	
  4831  0C11                     ;incstack = 0
  4832                           	opt	stack 7
  4833                           ; Regs used in _led_init: []
  4834                           	line	12
  4835                           	
  4836                           l1808:	
  4837  0C11                     ;led.c: 12:     PORTBbits.RB0 = 0;
  4838                           	bcf	status, 5	;RP0=0, select bank0
  4839  0C11  1283               	bcf	status, 6	;RP1=0, select bank0
  4840  0C12  1303               	bcf	(6),0	;volatile
  4841  0C13  1006               	line	13
  4842                           ;led.c: 13:     PORTBbits.RB1 = 0;
  4843                           	bcf	(6),1	;volatile
  4844  0C14  1086               	line	14
  4845                           ;led.c: 14:     PORTBbits.RB2 = 0;
  4846                           	bcf	(6),2	;volatile
  4847  0C15  1106               	line	16
  4848                           ;led.c: 16:     TRISBbits.TRISB0 = 0;
  4849                           	bsf	status, 5	;RP0=1, select bank1
  4850  0C16  1683               	bcf	status, 6	;RP1=0, select bank1
  4851  0C17  1303               	bcf	(134)^080h,0	;volatile
  4852  0C18  1006               	line	17
  4853                           ;led.c: 17:     TRISBbits.TRISB1 = 0;
  4854                           	bcf	(134)^080h,1	;volatile
  4855  0C19  1086               	line	18
  4856                           ;led.c: 18:     TRISBbits.TRISB2 = 0;
  4857                           	bcf	(134)^080h,2	;volatile
  4858  0C1A  1106               	line	19
  4859                           	
  4860                           l186:	
  4861  0C1B                     	return
  4862  0C1B  0008               	opt stack 0
  4863                           GLOBAL	__end_of_led_init
  4864                           	__end_of_led_init:
  4865  0C1C                     	signat	_led_init,89
  4866                           	global	_lcd_print
  4867                           
  4868 ;; *************** function _lcd_print *****************
  4869 ;; Defined at:
  4870 ;;		line 168 in file "lcd.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  lin             1    wreg     unsigned char 
  4873 ;;  col             1    6[COMMON] unsigned char 
  4874 ;;  str             1    7[COMMON] PTR const unsigned char 
  4875 ;;		 -> STR_1(17), 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  lin             1   10[COMMON] unsigned char 
  4878 ;;  pos             1    9[COMMON] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4888 ;;      Params:         2       0       0       0       0
  4889 ;;      Locals:         2       0       0       0       0
  4890 ;;      Temps:          1       0       0       0       0
  4891 ;;      Totals:         5       0       0       0       0
  4892 ;;Total ram usage:        5 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    2
  4895 ;; This function calls:
  4896 ;;		_lcd_data
  4897 ;;		_lcd_lincol
  4898 ;; This function is called by:
  4899 ;;		_main
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4903                           	file	"lcd.c"
  4904                           	line	168
  4905                           global __ptext14
  4906                           __ptext14:	;psect for function _lcd_print
  4907  0D61                     psect	text14
  4908                           	file	"lcd.c"
  4909                           	line	168
  4910                           	global	__size_of_lcd_print
  4911                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  4912  0033                     	
  4913                           _lcd_print:	
  4914  0D61                     ;incstack = 0
  4915                           	opt	stack 5
  4916                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4917                           ;lcd_print@lin stored from wreg
  4918                           	movwf	(lcd_print@lin)
  4919  0D61  00FA               	line	170
  4920                           	
  4921                           l1752:	
  4922  0D62                     ;lcd.c: 168: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 169: {;lcd.c: 170:     char pos = col;
  4923                           	movf	(lcd_print@col),w
  4924  0D62  0876               	movwf	(??_lcd_print+0)+0
  4925  0D63  00F8               	movf	(??_lcd_print+0)+0,w
  4926  0D64  0878               	movwf	(lcd_print@pos)
  4927  0D65  00F9               	line	171
  4928                           	
  4929                           l1754:	
  4930  0D66                     ;lcd.c: 171:     lcd_lincol( lin, col );
  4931                           	movf	(lcd_print@col),w
  4932  0D66  0876               	movwf	(??_lcd_print+0)+0
  4933  0D67  00F8               	movf	(??_lcd_print+0)+0,w
  4934  0D68  0878               	movwf	(lcd_lincol@col)
  4935  0D69  00F3               	movf	(lcd_print@lin),w
  4936  0D6A  087A               	fcall	_lcd_lincol
  4937  0D6B  120A  158A  242D  120A  158A  	line	173
  4938                           ;lcd.c: 173:     while( *str )
  4939                           	goto	l1762
  4940  0D70  2D86               	
  4941                           l59:	
  4942  0D71                     	line	175
  4943                           	
  4944                           l1756:	
  4945  0D71                     ;lcd.c: 174:     {;lcd.c: 175:         lcd_data( *str );
  4946                           	movf	(lcd_print@str),w
  4947  0D71  0877               	movwf	fsr0
  4948  0D72  0084               	fcall	stringdir
  4949  0D73  120A  158A  2000  120A  158A  	fcall	_lcd_data
  4950  0D78  120A  158A  2533  120A  158A  	line	176
  4951                           	
  4952                           l1758:	
  4953  0D7D                     ;lcd.c: 176:         ++str;
  4954                           	movlw	low(01h)
  4955  0D7D  3001               	movwf	(??_lcd_print+0)+0
  4956  0D7E  00F8               	movf	(??_lcd_print+0)+0,w
  4957  0D7F  0878               	addwf	(lcd_print@str),f
  4958  0D80  07F7               	line	177
  4959                           	
  4960                           l1760:	
  4961  0D81                     ;lcd.c: 177:         ++pos;
  4962                           	movlw	low(01h)
  4963  0D81  3001               	movwf	(??_lcd_print+0)+0
  4964  0D82  00F8               	movf	(??_lcd_print+0)+0,w
  4965  0D83  0878               	addwf	(lcd_print@pos),f
  4966  0D84  07F9               	goto	l1762
  4967  0D85  2D86               	line	178
  4968                           ;lcd.c: 178:     }
  4969                           	
  4970                           l58:	
  4971  0D86                     	line	173
  4972                           	
  4973                           l1762:	
  4974  0D86                     ;lcd.c: 173:     while( *str )
  4975                           	movf	(lcd_print@str),w
  4976  0D86  0877               	movwf	fsr0
  4977  0D87  0084               	fcall	stringdir
  4978  0D88  120A  158A  2000  120A  158A  	xorlw	0
  4979  0D8D  3A00               	skipz
  4980  0D8E  1D03               	goto	u1511
  4981  0D8F  2D91               	goto	u1510
  4982  0D90  2D92               u1511:
  4983  0D91                     	goto	l1756
  4984  0D91  2D71               u1510:
  4985  0D92                     	goto	l61
  4986  0D92  2D93               	
  4987                           l60:	
  4988  0D93                     	line	179
  4989                           	
  4990                           l61:	
  4991  0D93                     	return
  4992  0D93  0008               	opt stack 0
  4993                           GLOBAL	__end_of_lcd_print
  4994                           	__end_of_lcd_print:
  4995  0D94                     	signat	_lcd_print,12409
  4996                           	global	_lcd_num
  4997                           
  4998 ;; *************** function _lcd_num *****************
  4999 ;; Defined at:
  5000 ;;		line 182 in file "lcd.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  lin             1    wreg     unsigned char 
  5003 ;;  col             1    8[BANK0 ] unsigned char 
  5004 ;;  num             2    9[BANK0 ] int 
  5005 ;;  tam             1   11[BANK0 ] unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  lin             1   12[BANK0 ] unsigned char 
  5008 ;;  div             2   15[BANK0 ] int 
  5009 ;;  sinal           1   14[BANK0 ] unsigned char 
  5010 ;;  size            1   13[BANK0 ] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         0       4       0       0       0
  5021 ;;      Locals:         0       5       0       0       0
  5022 ;;      Temps:          3       0       0       0       0
  5023 ;;      Totals:         3       9       0       0       0
  5024 ;;Total ram usage:       12 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		___awdiv
  5029 ;;		___awmod
  5030 ;;		_lcd_data
  5031 ;;		_lcd_lincol
  5032 ;; This function is called by:
  5033 ;;		_main
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5037                           	line	182
  5038                           global __ptext15
  5039                           __ptext15:	;psect for function _lcd_num
  5040  051F                     psect	text15
  5041                           	file	"lcd.c"
  5042                           	line	182
  5043                           	global	__size_of_lcd_num
  5044                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  5045  00EE                     	
  5046                           _lcd_num:	
  5047  051F                     ;incstack = 0
  5048                           	opt	stack 5
  5049                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5050                           ;lcd_num@lin stored from wreg
  5051                           	bcf	status, 5	;RP0=0, select bank0
  5052  051F  1283               	bcf	status, 6	;RP1=0, select bank0
  5053  0520  1303               	movwf	(lcd_num@lin)
  5054  0521  00AC               	line	189
  5055                           	
  5056                           l1764:	
  5057  0522                     ;lcd.c: 182: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 183:            
                                          int num, unsigned char tam );lcd.c: 184: {;lcd.c: 185:     int div;;lcd.c: 186:
                                      unsigned char size;;lcd.c: 187:     char sinal;;lcd.c: 189:     sinal = num < 0;
  5058                           	btfsc	(lcd_num@num+1),7
  5059  0522  1BAA               	goto	u1521
  5060  0523  2D25               	goto	u1520
  5061  0524  2D27               u1521:
  5062  0525                     	movlw	1
  5063  0525  3001               	goto	u1530
  5064  0526  2D28               u1520:
  5065  0527                     	movlw	0
  5066  0527  3000               u1530:
  5067  0528                     	movwf	(??_lcd_num+0)+0
  5068  0528  00FB               	movf	(??_lcd_num+0)+0,w
  5069  0529  087B               	movwf	(lcd_num@sinal)
  5070  052A  00AE               	line	190
  5071                           	
  5072                           l1766:	
  5073  052B                     ;lcd.c: 190:     if( sinal )
  5074                           	movf	((lcd_num@sinal)),w
  5075  052B  082E               	btfsc	status,2
  5076  052C  1903               	goto	u1541
  5077  052D  2D2F               	goto	u1540
  5078  052E  2D30               u1541:
  5079  052F                     	goto	l1770
  5080  052F  2D36               u1540:
  5081  0530                     	line	191
  5082                           	
  5083                           l1768:	
  5084  0530                     ;lcd.c: 191:         num = (~num) + 1;
  5085                           	comf	(lcd_num@num),f
  5086  0530  09A9               	comf	(lcd_num@num+1),f
  5087  0531  09AA               	incf	(lcd_num@num),f
  5088  0532  0AA9               	skipnz
  5089  0533  1903               	incf	(lcd_num@num+1),f
  5090  0534  0AAA               	goto	l1770
  5091  0535  2D36               	
  5092                           l64:	
  5093  0536                     	line	193
  5094                           	
  5095                           l1770:	
  5096  0536                     ;lcd.c: 193:     lcd_lincol(lin, col);
  5097                           	movf	(lcd_num@col),w
  5098  0536  0828               	movwf	(??_lcd_num+0)+0
  5099  0537  00FB               	movf	(??_lcd_num+0)+0,w
  5100  0538  087B               	movwf	(lcd_lincol@col)
  5101  0539  00F3               	movf	(lcd_num@lin),w
  5102  053A  082C               	fcall	_lcd_lincol
  5103  053B  120A  158A  242D  120A  118A  	line	195
  5104                           	
  5105                           l1772:	
  5106  0540                     ;lcd.c: 195:     div=10000;
  5107                           	movlw	010h
  5108  0540  3010               	bcf	status, 5	;RP0=0, select bank0
  5109  0541  1283               	bcf	status, 6	;RP1=0, select bank0
  5110  0542  1303               	movwf	(lcd_num@div)
  5111  0543  00AF               	movlw	027h
  5112  0544  3027               	movwf	((lcd_num@div))+1
  5113  0545  00B0               	line	196
  5114                           	
  5115                           l1774:	
  5116  0546                     ;lcd.c: 196:     size = 5;
  5117                           	movlw	low(05h)
  5118  0546  3005               	movwf	(??_lcd_num+0)+0
  5119  0547  00FB               	movf	(??_lcd_num+0)+0,w
  5120  0548  087B               	movwf	(lcd_num@size)
  5121  0549  00AD               	line	197
  5122                           ;lcd.c: 197:     while( div >= 1 )
  5123                           	goto	l1782
  5124  054A  2D7A               	
  5125                           l66:	
  5126  054B                     	line	199
  5127                           	
  5128                           l1776:	
  5129  054B                     ;lcd.c: 198:     {;lcd.c: 199:         if( num/div == 0 )
  5130                           	bcf	status, 5	;RP0=0, select bank0
  5131  054B  1283               	bcf	status, 6	;RP1=0, select bank0
  5132  054C  1303               	movf	(lcd_num@div+1),w
  5133  054D  0830               	movwf	(___awdiv@divisor+1)
  5134  054E  00F7               	movf	(lcd_num@div),w
  5135  054F  082F               	movwf	(___awdiv@divisor)
  5136  0550  00F6               	movf	(lcd_num@num+1),w
  5137  0551  082A               	movwf	(___awdiv@dividend+1)
  5138  0552  00F9               	movf	(lcd_num@num),w
  5139  0553  0829               	movwf	(___awdiv@dividend)
  5140  0554  00F8               	fcall	___awdiv
  5141  0555  120A  118A  20EA  120A  118A  	movf	((0+(?___awdiv))),w
  5142  055A  0876               iorwf	((1+(?___awdiv))),w
  5143  055B  0477               	btfss	status,2
  5144  055C  1D03               	goto	u1551
  5145  055D  2D5F               	goto	u1550
  5146  055E  2D60               u1551:
  5147  055F                     	goto	l1788
  5148  055F  2D94               u1550:
  5149  0560                     	line	200
  5150                           	
  5151                           l1778:	
  5152  0560                     ;lcd.c: 200:             --size;
  5153                           	movlw	01h
  5154  0560  3001               	bcf	status, 5	;RP0=0, select bank0
  5155  0561  1283               	bcf	status, 6	;RP1=0, select bank0
  5156  0562  1303               	subwf	(lcd_num@size),f
  5157  0563  02AD               	goto	l1780
  5158  0564  2D66               	line	201
  5159                           ;lcd.c: 201:         else
  5160                           	
  5161                           l67:	
  5162  0565                     	line	202
  5163                           ;lcd.c: 202:             break;
  5164                           	goto	l1788
  5165  0565  2D94               	
  5166                           l68:	
  5167  0566                     	line	203
  5168                           	
  5169                           l1780:	
  5170  0566                     ;lcd.c: 203:         div/=10;
  5171                           	movlw	0Ah
  5172  0566  300A               	movwf	(___awdiv@divisor)
  5173  0567  00F6               	movlw	0
  5174  0568  3000               	movwf	((___awdiv@divisor))+1
  5175  0569  00F7               	movf	(lcd_num@div+1),w
  5176  056A  0830               	movwf	(___awdiv@dividend+1)
  5177  056B  00F9               	movf	(lcd_num@div),w
  5178  056C  082F               	movwf	(___awdiv@dividend)
  5179  056D  00F8               	fcall	___awdiv
  5180  056E  120A  118A  20EA  120A  118A  	movf	(1+(?___awdiv)),w
  5181  0573  0877               	bcf	status, 5	;RP0=0, select bank0
  5182  0574  1283               	bcf	status, 6	;RP1=0, select bank0
  5183  0575  1303               	movwf	(lcd_num@div+1)
  5184  0576  00B0               	movf	(0+(?___awdiv)),w
  5185  0577  0876               	movwf	(lcd_num@div)
  5186  0578  00AF               	goto	l1782
  5187  0579  2D7A               	line	204
  5188                           ;lcd.c: 204:     }
  5189                           	
  5190                           l65:	
  5191  057A                     	line	197
  5192                           	
  5193                           l1782:	
  5194  057A                     ;lcd.c: 197:     while( div >= 1 )
  5195                           	movf	(lcd_num@div+1),w
  5196  057A  0830               	xorlw	80h
  5197  057B  3A80               	movwf	btemp+1
  5198  057C  00FF               	movlw	(0)^80h
  5199  057D  3080               	subwf	btemp+1,w
  5200  057E  027F               	skipz
  5201  057F  1D03               	goto	u1565
  5202  0580  2D83               	movlw	01h
  5203  0581  3001               	subwf	(lcd_num@div),w
  5204  0582  022F               u1565:
  5205  0583                     
  5206                           	skipnc
  5207  0583  1803               	goto	u1561
  5208  0584  2D86               	goto	u1560
  5209  0585  2D87               u1561:
  5210  0586                     	goto	l1776
  5211  0586  2D4B               u1560:
  5212  0587                     	goto	l1788
  5213  0587  2D94               	
  5214                           l69:	
  5215  0588                     	line	206
  5216                           ;lcd.c: 206:     while( tam > (size+sinal) && tam > 1 )
  5217                           	goto	l1788
  5218  0588  2D94               	
  5219                           l71:	
  5220  0589                     	line	208
  5221                           	
  5222                           l1784:	
  5223  0589                     ;lcd.c: 207:     {;lcd.c: 208:         lcd_data(' ');
  5224                           	movlw	low(020h)
  5225  0589  3020               	fcall	_lcd_data
  5226  058A  120A  158A  2533  120A  118A  	line	209
  5227                           	
  5228                           l1786:	
  5229  058F                     ;lcd.c: 209:         --tam;
  5230                           	movlw	01h
  5231  058F  3001               	bcf	status, 5	;RP0=0, select bank0
  5232  0590  1283               	bcf	status, 6	;RP1=0, select bank0
  5233  0591  1303               	subwf	(lcd_num@tam),f
  5234  0592  02AB               	goto	l1788
  5235  0593  2D94               	line	210
  5236                           ;lcd.c: 210:     }
  5237                           	
  5238                           l70:	
  5239  0594                     	line	206
  5240                           	
  5241                           l1788:	
  5242  0594                     ;lcd.c: 206:     while( tam > (size+sinal) && tam > 1 )
  5243                           	bcf	status, 5	;RP0=0, select bank0
  5244  0594  1283               	bcf	status, 6	;RP1=0, select bank0
  5245  0595  1303               	movf	(lcd_num@size),w
  5246  0596  082D               	addwf	(lcd_num@sinal),w
  5247  0597  072E               	movwf	(??_lcd_num+0)+0
  5248  0598  00FB               	clrf	(??_lcd_num+0)+0+1
  5249  0599  01FC               	rlf	1+(??_lcd_num+0)+0,f
  5250  059A  0DFC               	
  5251                           	movf	1+(??_lcd_num+0)+0,w
  5252  059B  087C               	xorlw	80h
  5253  059C  3A80               	movwf	(??_lcd_num+2)+0
  5254  059D  00FD               	movlw	80h
  5255  059E  3080               	subwf	(??_lcd_num+2)+0,w
  5256  059F  027D               	skipz
  5257  05A0  1D03               	goto	u1575
  5258  05A1  2DA4               	movf	(lcd_num@tam),w
  5259  05A2  082B               	subwf	0+(??_lcd_num+0)+0,w
  5260  05A3  027B               u1575:
  5261  05A4                     
  5262                           	skipnc
  5263  05A4  1803               	goto	u1571
  5264  05A5  2DA7               	goto	u1570
  5265  05A6  2DA8               u1571:
  5266  05A7                     	goto	l1792
  5267  05A7  2DB2               u1570:
  5268  05A8                     	
  5269                           l1790:	
  5270  05A8                     	movlw	low(02h)
  5271  05A8  3002               	bcf	status, 5	;RP0=0, select bank0
  5272  05A9  1283               	bcf	status, 6	;RP1=0, select bank0
  5273  05AA  1303               	subwf	(lcd_num@tam),w
  5274  05AB  022B               	skipnc
  5275  05AC  1803               	goto	u1581
  5276  05AD  2DAF               	goto	u1580
  5277  05AE  2DB0               u1581:
  5278  05AF                     	goto	l1784
  5279  05AF  2D89               u1580:
  5280  05B0                     	goto	l1792
  5281  05B0  2DB2               	
  5282                           l73:	
  5283  05B1                     	goto	l1792
  5284  05B1  2DB2               	
  5285                           l74:	
  5286  05B2                     	line	212
  5287                           	
  5288                           l1792:	
  5289  05B2                     ;lcd.c: 212:     if( sinal )
  5290                           	bcf	status, 5	;RP0=0, select bank0
  5291  05B2  1283               	bcf	status, 6	;RP1=0, select bank0
  5292  05B3  1303               	movf	((lcd_num@sinal)),w
  5293  05B4  082E               	btfsc	status,2
  5294  05B5  1903               	goto	u1591
  5295  05B6  2DB8               	goto	u1590
  5296  05B7  2DB9               u1591:
  5297  05B8                     	goto	l76
  5298  05B8  2DC0               u1590:
  5299  05B9                     	line	213
  5300                           	
  5301                           l1794:	
  5302  05B9                     ;lcd.c: 213:         lcd_data('-');
  5303                           	movlw	low(02Dh)
  5304  05B9  302D               	fcall	_lcd_data
  5305  05BA  120A  158A  2533  120A  118A  	goto	l76
  5306  05BF  2DC0               	
  5307                           l75:	
  5308  05C0                     	line	215
  5309                           ;lcd.c: 215:     do
  5310                           	
  5311                           l76:	
  5312  05C0                     	line	217
  5313                           ;lcd.c: 216:     {;lcd.c: 217:         lcd_data( (unsigned char)(num / div) + '0' );
  5314                           	bcf	status, 5	;RP0=0, select bank0
  5315  05C0  1283               	bcf	status, 6	;RP1=0, select bank0
  5316  05C1  1303               	movf	(lcd_num@div+1),w
  5317  05C2  0830               	movwf	(___awdiv@divisor+1)
  5318  05C3  00F7               	movf	(lcd_num@div),w
  5319  05C4  082F               	movwf	(___awdiv@divisor)
  5320  05C5  00F6               	movf	(lcd_num@num+1),w
  5321  05C6  082A               	movwf	(___awdiv@dividend+1)
  5322  05C7  00F9               	movf	(lcd_num@num),w
  5323  05C8  0829               	movwf	(___awdiv@dividend)
  5324  05C9  00F8               	fcall	___awdiv
  5325  05CA  120A  118A  20EA  120A  118A  	movf	(0+(?___awdiv)),w
  5326  05CF  0876               	addlw	030h
  5327  05D0  3E30               	fcall	_lcd_data
  5328  05D1  120A  158A  2533  120A  118A  	line	218
  5329                           ;lcd.c: 218:         num = num % div;
  5330                           	bcf	status, 5	;RP0=0, select bank0
  5331  05D6  1283               	bcf	status, 6	;RP1=0, select bank0
  5332  05D7  1303               	movf	(lcd_num@div+1),w
  5333  05D8  0830               	movwf	(___awmod@divisor+1)
  5334  05D9  00F1               	movf	(lcd_num@div),w
  5335  05DA  082F               	movwf	(___awmod@divisor)
  5336  05DB  00F0               	movf	(lcd_num@num+1),w
  5337  05DC  082A               	movwf	(___awmod@dividend+1)
  5338  05DD  00F3               	movf	(lcd_num@num),w
  5339  05DE  0829               	movwf	(___awmod@dividend)
  5340  05DF  00F2               	fcall	___awmod
  5341  05E0  120A  158A  26BB  120A  118A  	movf	(1+(?___awmod)),w
  5342  05E5  0871               	bcf	status, 5	;RP0=0, select bank0
  5343  05E6  1283               	bcf	status, 6	;RP1=0, select bank0
  5344  05E7  1303               	movwf	(lcd_num@num+1)
  5345  05E8  00AA               	movf	(0+(?___awmod)),w
  5346  05E9  0870               	movwf	(lcd_num@num)
  5347  05EA  00A9               	line	219
  5348                           ;lcd.c: 219:         div/=10;
  5349                           	movlw	0Ah
  5350  05EB  300A               	movwf	(___awdiv@divisor)
  5351  05EC  00F6               	movlw	0
  5352  05ED  3000               	movwf	((___awdiv@divisor))+1
  5353  05EE  00F7               	movf	(lcd_num@div+1),w
  5354  05EF  0830               	movwf	(___awdiv@dividend+1)
  5355  05F0  00F9               	movf	(lcd_num@div),w
  5356  05F1  082F               	movwf	(___awdiv@dividend)
  5357  05F2  00F8               	fcall	___awdiv
  5358  05F3  120A  118A  20EA  120A  118A  	movf	(1+(?___awdiv)),w
  5359  05F8  0877               	bcf	status, 5	;RP0=0, select bank0
  5360  05F9  1283               	bcf	status, 6	;RP1=0, select bank0
  5361  05FA  1303               	movwf	(lcd_num@div+1)
  5362  05FB  00B0               	movf	(0+(?___awdiv)),w
  5363  05FC  0876               	movwf	(lcd_num@div)
  5364  05FD  00AF               	line	220
  5365                           	
  5366                           l1796:	
  5367  05FE                     ;lcd.c: 220:     }
  5368                           	movf	(lcd_num@div+1),w
  5369  05FE  0830               	xorlw	80h
  5370  05FF  3A80               	movwf	btemp+1
  5371  0600  00FF               	movlw	(0)^80h
  5372  0601  3080               	subwf	btemp+1,w
  5373  0602  027F               	skipz
  5374  0603  1D03               	goto	u1605
  5375  0604  2E07               	movlw	01h
  5376  0605  3001               	subwf	(lcd_num@div),w
  5377  0606  022F               u1605:
  5378  0607                     
  5379                           	skipnc
  5380  0607  1803               	goto	u1601
  5381  0608  2E0A               	goto	u1600
  5382  0609  2E0B               u1601:
  5383  060A                     	goto	l76
  5384  060A  2DC0               u1600:
  5385  060B                     	goto	l78
  5386  060B  2E0C               	
  5387                           l77:	
  5388  060C                     	line	222
  5389                           	
  5390                           l78:	
  5391  060C                     	return
  5392  060C  0008               	opt stack 0
  5393                           GLOBAL	__end_of_lcd_num
  5394                           	__end_of_lcd_num:
  5395  060D                     	signat	_lcd_num,16505
  5396                           	global	_lcd_lincol
  5397                           
  5398 ;; *************** function _lcd_lincol *****************
  5399 ;; Defined at:
  5400 ;;		line 116 in file "lcd.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  lin             1    wreg     unsigned char 
  5403 ;;  col             1    3[COMMON] unsigned char 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  lin             1    5[COMMON] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0, pclath, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5415 ;;      Params:         1       0       0       0       0
  5416 ;;      Locals:         1       0       0       0       0
  5417 ;;      Temps:          1       0       0       0       0
  5418 ;;      Totals:         3       0       0       0       0
  5419 ;;Total ram usage:        3 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    1
  5422 ;; This function calls:
  5423 ;;		_lcd_inst
  5424 ;; This function is called by:
  5425 ;;		_lcd_print
  5426 ;;		_lcd_num
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5430                           	line	116
  5431                           global __ptext16
  5432                           __ptext16:	;psect for function _lcd_lincol
  5433  0C2D                     psect	text16
  5434                           	file	"lcd.c"
  5435                           	line	116
  5436                           	global	__size_of_lcd_lincol
  5437                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  5438  0013                     	
  5439                           _lcd_lincol:	
  5440  0C2D                     ;incstack = 0
  5441                           	opt	stack 5
  5442                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  5443                           ;lcd_lincol@lin stored from wreg
  5444                           	movwf	(lcd_lincol@lin)
  5445  0C2D  00F5               	line	118
  5446                           	
  5447                           l1564:	
  5448  0C2E                     ;lcd.c: 116: void lcd_lincol ( unsigned char lin, unsigned char col);lcd.c: 117: {;lcd.c
                                 : 118:     lcd_inst ( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  5449                           	movf	(lcd_lincol@lin),w
  5450  0C2E  0875               	movwf	(??_lcd_lincol+0)+0
  5451  0C2F  00F4               	movlw	06h
  5452  0C30  3006               u1205:
  5453  0C31                     	clrc
  5454  0C31  1003               	rlf	(??_lcd_lincol+0)+0,f
  5455  0C32  0DF4               	addlw	-1
  5456  0C33  3EFF               	skipz
  5457  0C34  1D03               	goto	u1205
  5458  0C35  2C31               	movf	(lcd_lincol@col),w
  5459  0C36  0873               	addwf	0+(??_lcd_lincol+0)+0,w
  5460  0C37  0774               	andlw	07Fh
  5461  0C38  397F               	addlw	080h
  5462  0C39  3E80               	fcall	_lcd_inst
  5463  0C3A  120A  118A  215D  120A  158A  	line	119
  5464                           	
  5465                           l49:	
  5466  0C3F                     	return
  5467  0C3F  0008               	opt stack 0
  5468                           GLOBAL	__end_of_lcd_lincol
  5469                           	__end_of_lcd_lincol:
  5470  0C40                     	signat	_lcd_lincol,8313
  5471                           	global	_lcd_data
  5472                           
  5473 ;; *************** function _lcd_data *****************
  5474 ;; Defined at:
  5475 ;;		line 100 in file "lcd.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  d               1    wreg     unsigned char 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  d               1    2[COMMON] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         0       0       0       0       0
  5490 ;;      Locals:         1       0       0       0       0
  5491 ;;      Temps:          2       0       0       0       0
  5492 ;;      Totals:         3       0       0       0       0
  5493 ;;Total ram usage:        3 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_lcd_print
  5499 ;;		_lcd_num
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5503                           	line	100
  5504                           global __ptext17
  5505                           __ptext17:	;psect for function _lcd_data
  5506  0D33                     psect	text17
  5507                           	file	"lcd.c"
  5508                           	line	100
  5509                           	global	__size_of_lcd_data
  5510                           	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  5511  002E                     	
  5512                           _lcd_data:	
  5513  0D33                     ;incstack = 0
  5514                           	opt	stack 6
  5515                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  5516                           ;lcd_data@d stored from wreg
  5517                           	movwf	(lcd_data@d)
  5518  0D33  00F2               	line	102
  5519                           	
  5520                           l1546:	
  5521  0D34                     ;lcd.c: 100: void lcd_data (unsigned char d);lcd.c: 101: {;lcd.c: 102:     PORTDbits.RD4
                                  = 1;
  5522                           	bcf	status, 5	;RP0=0, select bank0
  5523  0D34  1283               	bcf	status, 6	;RP1=0, select bank0
  5524  0D35  1303               	bsf	(8),4	;volatile
  5525  0D36  1608               	line	103
  5526                           	
  5527                           l1548:	
  5528  0D37                     ;lcd.c: 103:     PORTD = ((PORTD & 0xF0)|(d>>4 & 0x0F));
  5529                           	movf	(lcd_data@d),w
  5530  0D37  0872               	movwf	(??_lcd_data+0)+0
  5531  0D38  00F0               	movlw	04h
  5532  0D39  3004               u1195:
  5533  0D3A                     	clrc
  5534  0D3A  1003               	rrf	(??_lcd_data+0)+0,f
  5535  0D3B  0CF0               	addlw	-1
  5536  0D3C  3EFF               	skipz
  5537  0D3D  1D03               	goto	u1195
  5538  0D3E  2D3A               	movlw	low(0Fh)
  5539  0D3F  300F               	andwf	0+(??_lcd_data+0)+0,w
  5540  0D40  0570               	movwf	(??_lcd_data+1)+0
  5541  0D41  00F1               	movf	(8),w	;volatile
  5542  0D42  0808               	andlw	0F0h
  5543  0D43  39F0               	iorwf	0+(??_lcd_data+1)+0,w
  5544  0D44  0471               	movwf	(8)	;volatile
  5545  0D45  0088               	line	104
  5546                           	
  5547                           l1550:	
  5548  0D46                     ;lcd.c: 104:     PORTDbits.RD5 = 0;
  5549                           	bcf	(8),5	;volatile
  5550  0D46  1288               	line	105
  5551                           	
  5552                           l1552:	
  5553  0D47                     ;lcd.c: 105:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  5554                           	opt asmopt_push
  5555                           opt asmopt_off
  5556                           	movlw	66
  5557  0D47  3042               movwf	((??_lcd_data+0)+0),f
  5558  0D48  00F0               	u1907:
  5559  0D49                     decfsz	(??_lcd_data+0)+0,f
  5560  0D49  0BF0               	goto	u1907
  5561  0D4A  2D49               	nop
  5562  0D4B  0000               opt asmopt_pop
  5563                           
  5564                           	line	106
  5565                           	
  5566                           l1554:	
  5567  0D4C                     ;lcd.c: 106:     PORTDbits.RD5 = 1;
  5568                           	bcf	status, 5	;RP0=0, select bank0
  5569  0D4C  1283               	bcf	status, 6	;RP1=0, select bank0
  5570  0D4D  1303               	bsf	(8),5	;volatile
  5571  0D4E  1688               	line	108
  5572                           	
  5573                           l1556:	
  5574  0D4F                     ;lcd.c: 108:     PORTDbits.RD4 = 1;
  5575                           	bsf	(8),4	;volatile
  5576  0D4F  1608               	line	109
  5577                           	
  5578                           l1558:	
  5579  0D50                     ;lcd.c: 109:     PORTD = ((PORTD & 0xF0)|(d & 0x0F));
  5580                           	movlw	low(0Fh)
  5581  0D50  300F               	andwf	(lcd_data@d),w
  5582  0D51  0572               	movwf	(??_lcd_data+0)+0
  5583  0D52  00F0               	movf	(8),w	;volatile
  5584  0D53  0808               	andlw	0F0h
  5585  0D54  39F0               	iorwf	0+(??_lcd_data+0)+0,w
  5586  0D55  0470               	movwf	(8)	;volatile
  5587  0D56  0088               	line	110
  5588                           	
  5589                           l1560:	
  5590  0D57                     ;lcd.c: 110:     PORTDbits.RD5 = 0;
  5591                           	bcf	(8),5	;volatile
  5592  0D57  1288               	line	111
  5593                           ;lcd.c: 111:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  5594                           	opt asmopt_push
  5595                           opt asmopt_off
  5596                           	movlw	66
  5597  0D58  3042               movwf	((??_lcd_data+0)+0),f
  5598  0D59  00F0               	u1917:
  5599  0D5A                     decfsz	(??_lcd_data+0)+0,f
  5600  0D5A  0BF0               	goto	u1917
  5601  0D5B  2D5A               	nop
  5602  0D5C  0000               opt asmopt_pop
  5603                           
  5604                           	line	112
  5605                           	
  5606                           l1562:	
  5607  0D5D                     ;lcd.c: 112:     PORTDbits.RD5 = 1;
  5608                           	bcf	status, 5	;RP0=0, select bank0
  5609  0D5D  1283               	bcf	status, 6	;RP1=0, select bank0
  5610  0D5E  1303               	bsf	(8),5	;volatile
  5611  0D5F  1688               	line	113
  5612                           	
  5613                           l46:	
  5614  0D60                     	return
  5615  0D60  0008               	opt stack 0
  5616                           GLOBAL	__end_of_lcd_data
  5617                           	__end_of_lcd_data:
  5618  0D61                     	signat	_lcd_data,4217
  5619                           	global	___awdiv
  5620                           
  5621 ;; *************** function ___awdiv *****************
  5622 ;; Defined at:
  5623 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  divisor         2    6[COMMON] int 
  5626 ;;  dividend        2    8[COMMON] int 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  quotient        2    2[BANK0 ] int 
  5629 ;;  sign            1    1[BANK0 ] unsigned char 
  5630 ;;  counter         1    0[BANK0 ] unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  2    6[COMMON] int 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5640 ;;      Params:         4       0       0       0       0
  5641 ;;      Locals:         0       4       0       0       0
  5642 ;;      Temps:          1       0       0       0       0
  5643 ;;      Totals:         5       4       0       0       0
  5644 ;;Total ram usage:        9 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_lcd_num
  5650 ;;		_sensor_alert
  5651 ;;		_sensor_danger
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5655                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5656                           	line	5
  5657                           global __ptext18
  5658                           __ptext18:	;psect for function ___awdiv
  5659  00EA                     psect	text18
  5660                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5661                           	line	5
  5662                           	global	__size_of___awdiv
  5663                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5664  0073                     	
  5665                           ___awdiv:	
  5666  00EA                     ;incstack = 0
  5667                           	opt	stack 5
  5668                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5669                           	line	13
  5670                           	
  5671                           l1486:	
  5672  00EA                     	bcf	status, 5	;RP0=0, select bank0
  5673  00EA  1283               	bcf	status, 6	;RP1=0, select bank0
  5674  00EB  1303               	clrf	(___awdiv@sign)
  5675  00EC  01A1               	line	14
  5676                           	
  5677                           l1488:	
  5678  00ED                     	btfss	(___awdiv@divisor+1),7
  5679  00ED  1FF7               	goto	u1061
  5680  00EE  28F0               	goto	u1060
  5681  00EF  28F1               u1061:
  5682  00F0                     	goto	l1494
  5683  00F0  28F9               u1060:
  5684  00F1                     	line	15
  5685                           	
  5686                           l1490:	
  5687  00F1                     	comf	(___awdiv@divisor),f
  5688  00F1  09F6               	comf	(___awdiv@divisor+1),f
  5689  00F2  09F7               	incf	(___awdiv@divisor),f
  5690  00F3  0AF6               	skipnz
  5691  00F4  1903               	incf	(___awdiv@divisor+1),f
  5692  00F5  0AF7               	line	16
  5693                           	
  5694                           l1492:	
  5695  00F6                     	clrf	(___awdiv@sign)
  5696  00F6  01A1               	incf	(___awdiv@sign),f
  5697  00F7  0AA1               	goto	l1494
  5698  00F8  28F9               	line	17
  5699                           	
  5700                           l492:	
  5701  00F9                     	line	18
  5702                           	
  5703                           l1494:	
  5704  00F9                     	btfss	(___awdiv@dividend+1),7
  5705  00F9  1FF9               	goto	u1071
  5706  00FA  28FC               	goto	u1070
  5707  00FB  28FD               u1071:
  5708  00FC                     	goto	l1500
  5709  00FC  2907               u1070:
  5710  00FD                     	line	19
  5711                           	
  5712                           l1496:	
  5713  00FD                     	comf	(___awdiv@dividend),f
  5714  00FD  09F8               	comf	(___awdiv@dividend+1),f
  5715  00FE  09F9               	incf	(___awdiv@dividend),f
  5716  00FF  0AF8               	skipnz
  5717  0100  1903               	incf	(___awdiv@dividend+1),f
  5718  0101  0AF9               	line	20
  5719                           	
  5720                           l1498:	
  5721  0102                     	movlw	low(01h)
  5722  0102  3001               	movwf	(??___awdiv+0)+0
  5723  0103  00FA               	movf	(??___awdiv+0)+0,w
  5724  0104  087A               	xorwf	(___awdiv@sign),f
  5725  0105  06A1               	goto	l1500
  5726  0106  2907               	line	21
  5727                           	
  5728                           l493:	
  5729  0107                     	line	22
  5730                           	
  5731                           l1500:	
  5732  0107                     	clrf	(___awdiv@quotient)
  5733  0107  01A2               	clrf	(___awdiv@quotient+1)
  5734  0108  01A3               	line	23
  5735                           	
  5736                           l1502:	
  5737  0109                     	movf	((___awdiv@divisor)),w
  5738  0109  0876               iorwf	((___awdiv@divisor+1)),w
  5739  010A  0477               	btfsc	status,2
  5740  010B  1903               	goto	u1081
  5741  010C  290E               	goto	u1080
  5742  010D  290F               u1081:
  5743  010E                     	goto	l1522
  5744  010E  294C               u1080:
  5745  010F                     	line	24
  5746                           	
  5747                           l1504:	
  5748  010F                     	clrf	(___awdiv@counter)
  5749  010F  01A0               	incf	(___awdiv@counter),f
  5750  0110  0AA0               	line	25
  5751                           	goto	l1510
  5752  0111  291E               	
  5753                           l496:	
  5754  0112                     	line	26
  5755                           	
  5756                           l1506:	
  5757  0112                     	movlw	01h
  5758  0112  3001               	
  5759                           u1095:
  5760  0113                     	clrc
  5761  0113  1003               	rlf	(___awdiv@divisor),f
  5762  0114  0DF6               	rlf	(___awdiv@divisor+1),f
  5763  0115  0DF7               	addlw	-1
  5764  0116  3EFF               	skipz
  5765  0117  1D03               	goto	u1095
  5766  0118  2913               	line	27
  5767                           	
  5768                           l1508:	
  5769  0119                     	movlw	low(01h)
  5770  0119  3001               	movwf	(??___awdiv+0)+0
  5771  011A  00FA               	movf	(??___awdiv+0)+0,w
  5772  011B  087A               	addwf	(___awdiv@counter),f
  5773  011C  07A0               	goto	l1510
  5774  011D  291E               	line	28
  5775                           	
  5776                           l495:	
  5777  011E                     	line	25
  5778                           	
  5779                           l1510:	
  5780  011E                     	btfss	(___awdiv@divisor+1),(15)&7
  5781  011E  1FF7               	goto	u1101
  5782  011F  2921               	goto	u1100
  5783  0120  2922               u1101:
  5784  0121                     	goto	l1506
  5785  0121  2912               u1100:
  5786  0122                     	goto	l1512
  5787  0122  2924               	
  5788                           l497:	
  5789  0123                     	goto	l1512
  5790  0123  2924               	line	29
  5791                           	
  5792                           l498:	
  5793  0124                     	line	30
  5794                           	
  5795                           l1512:	
  5796  0124                     	movlw	01h
  5797  0124  3001               	
  5798                           u1115:
  5799  0125                     	clrc
  5800  0125  1003               	rlf	(___awdiv@quotient),f
  5801  0126  0DA2               	rlf	(___awdiv@quotient+1),f
  5802  0127  0DA3               	addlw	-1
  5803  0128  3EFF               	skipz
  5804  0129  1D03               	goto	u1115
  5805  012A  2925               	line	31
  5806                           	movf	(___awdiv@divisor+1),w
  5807  012B  0877               	subwf	(___awdiv@dividend+1),w
  5808  012C  0279               	skipz
  5809  012D  1D03               	goto	u1125
  5810  012E  2931               	movf	(___awdiv@divisor),w
  5811  012F  0876               	subwf	(___awdiv@dividend),w
  5812  0130  0278               u1125:
  5813  0131                     	skipc
  5814  0131  1C03               	goto	u1121
  5815  0132  2934               	goto	u1120
  5816  0133  2935               u1121:
  5817  0134                     	goto	l1518
  5818  0134  293D               u1120:
  5819  0135                     	line	32
  5820                           	
  5821                           l1514:	
  5822  0135                     	movf	(___awdiv@divisor),w
  5823  0135  0876               	subwf	(___awdiv@dividend),f
  5824  0136  02F8               	movf	(___awdiv@divisor+1),w
  5825  0137  0877               	skipc
  5826  0138  1C03               	decf	(___awdiv@dividend+1),f
  5827  0139  03F9               	subwf	(___awdiv@dividend+1),f
  5828  013A  02F9               	line	33
  5829                           	
  5830                           l1516:	
  5831  013B                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5832  013B  1422               	goto	l1518
  5833  013C  293D               	line	34
  5834                           	
  5835                           l499:	
  5836  013D                     	line	35
  5837                           	
  5838                           l1518:	
  5839  013D                     	movlw	01h
  5840  013D  3001               	
  5841                           u1135:
  5842  013E                     	clrc
  5843  013E  1003               	rrf	(___awdiv@divisor+1),f
  5844  013F  0CF7               	rrf	(___awdiv@divisor),f
  5845  0140  0CF6               	addlw	-1
  5846  0141  3EFF               	skipz
  5847  0142  1D03               	goto	u1135
  5848  0143  293E               	line	36
  5849                           	
  5850                           l1520:	
  5851  0144                     	movlw	01h
  5852  0144  3001               	subwf	(___awdiv@counter),f
  5853  0145  02A0               	btfss	status,2
  5854  0146  1D03               	goto	u1141
  5855  0147  2949               	goto	u1140
  5856  0148  294A               u1141:
  5857  0149                     	goto	l1512
  5858  0149  2924               u1140:
  5859  014A                     	goto	l1522
  5860  014A  294C               	
  5861                           l500:	
  5862  014B                     	goto	l1522
  5863  014B  294C               	line	37
  5864                           	
  5865                           l494:	
  5866  014C                     	line	38
  5867                           	
  5868                           l1522:	
  5869  014C                     	movf	((___awdiv@sign)),w
  5870  014C  0821               	btfsc	status,2
  5871  014D  1903               	goto	u1151
  5872  014E  2950               	goto	u1150
  5873  014F  2951               u1151:
  5874  0150                     	goto	l1526
  5875  0150  2957               u1150:
  5876  0151                     	line	39
  5877                           	
  5878                           l1524:	
  5879  0151                     	comf	(___awdiv@quotient),f
  5880  0151  09A2               	comf	(___awdiv@quotient+1),f
  5881  0152  09A3               	incf	(___awdiv@quotient),f
  5882  0153  0AA2               	skipnz
  5883  0154  1903               	incf	(___awdiv@quotient+1),f
  5884  0155  0AA3               	goto	l1526
  5885  0156  2957               	
  5886                           l501:	
  5887  0157                     	line	40
  5888                           	
  5889                           l1526:	
  5890  0157                     	movf	(___awdiv@quotient+1),w
  5891  0157  0823               	movwf	(?___awdiv+1)
  5892  0158  00F7               	movf	(___awdiv@quotient),w
  5893  0159  0822               	movwf	(?___awdiv)
  5894  015A  00F6               	goto	l502
  5895  015B  295C               	
  5896                           l1528:	
  5897  015C                     	line	41
  5898                           	
  5899                           l502:	
  5900  015C                     	return
  5901  015C  0008               	opt stack 0
  5902                           GLOBAL	__end_of___awdiv
  5903                           	__end_of___awdiv:
  5904  015D                     	signat	___awdiv,8314
  5905                           	global	_lcd_init
  5906                           
  5907 ;; *************** function _lcd_init *****************
  5908 ;; Defined at:
  5909 ;;		line 122 in file "lcd.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0, pclath, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5923 ;;      Params:         0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0
  5925 ;;      Temps:          3       0       0       0       0
  5926 ;;      Totals:         3       0       0       0       0
  5927 ;;Total ram usage:        3 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    1
  5930 ;; This function calls:
  5931 ;;		_lcd_inst
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5937                           	file	"lcd.c"
  5938                           	line	122
  5939                           global __ptext19
  5940                           __ptext19:	;psect for function _lcd_init
  5941  0E6E                     psect	text19
  5942                           	file	"lcd.c"
  5943                           	line	122
  5944                           	global	__size_of_lcd_init
  5945                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5946  004D                     	
  5947                           _lcd_init:	
  5948  0E6E                     ;incstack = 0
  5949                           	opt	stack 6
  5950                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5951                           	line	124
  5952                           	
  5953                           l1724:	
  5954  0E6E                     ;lcd.c: 124:     _delay((unsigned long)((100)*(20000000/4000.0)));
  5955                           	opt asmopt_push
  5956                           opt asmopt_off
  5957                           movlw  3
  5958  0E6E  3003               movwf	((??_lcd_init+0)+0+2),f
  5959  0E6F  00F5               movlw	138
  5960  0E70  308A               movwf	((??_lcd_init+0)+0+1),f
  5961  0E71  00F4               	movlw	85
  5962  0E72  3055               movwf	((??_lcd_init+0)+0),f
  5963  0E73  00F3               	u1927:
  5964  0E74                     decfsz	((??_lcd_init+0)+0),f
  5965  0E74  0BF3               	goto	u1927
  5966  0E75  2E74               	decfsz	((??_lcd_init+0)+0+1),f
  5967  0E76  0BF4               	goto	u1927
  5968  0E77  2E74               	decfsz	((??_lcd_init+0)+0+2),f
  5969  0E78  0BF5               	goto	u1927
  5970  0E79  2E74               	nop2
  5971  0E7A  2E7B               opt asmopt_pop
  5972                           
  5973                           	line	129
  5974                           	
  5975                           l1726:	
  5976  0E7B                     ;lcd.c: 129:        TRISDbits.TRISD0 = 0;
  5977                           	bsf	status, 5	;RP0=1, select bank1
  5978  0E7B  1683               	bcf	status, 6	;RP1=0, select bank1
  5979  0E7C  1303               	bcf	(136)^080h,0	;volatile
  5980  0E7D  1008               	line	130
  5981                           	
  5982                           l1728:	
  5983  0E7E                     ;lcd.c: 130:        TRISDbits.TRISD1 = 0;
  5984                           	bcf	(136)^080h,1	;volatile
  5985  0E7E  1088               	line	131
  5986                           	
  5987                           l1730:	
  5988  0E7F                     ;lcd.c: 131:        TRISDbits.TRISD2 = 0;
  5989                           	bcf	(136)^080h,2	;volatile
  5990  0E7F  1108               	line	132
  5991                           	
  5992                           l1732:	
  5993  0E80                     ;lcd.c: 132:        TRISDbits.TRISD3 = 0;
  5994                           	bcf	(136)^080h,3	;volatile
  5995  0E80  1188               	line	133
  5996                           	
  5997                           l1734:	
  5998  0E81                     ;lcd.c: 133:        TRISDbits.TRISD4 = 0;
  5999                           	bcf	(136)^080h,4	;volatile
  6000  0E81  1208               	line	134
  6001                           	
  6002                           l1736:	
  6003  0E82                     ;lcd.c: 134:        TRISDbits.TRISD5 = 0;
  6004                           	bcf	(136)^080h,5	;volatile
  6005  0E82  1288               	line	135
  6006                           	
  6007                           l1738:	
  6008  0E83                     ;lcd.c: 135:        TRISDbits.TRISD6 = 0;
  6009                           	bcf	(136)^080h,6	;volatile
  6010  0E83  1308               	line	136
  6011                           	
  6012                           l1740:	
  6013  0E84                     ;lcd.c: 136:        TRISDbits.TRISD7 = 0;
  6014                           	bcf	(136)^080h,7	;volatile
  6015  0E84  1388               	line	151
  6016                           ;lcd.c: 151:     _delay((unsigned long)((100)*(20000000/4000.0)));
  6017                           	opt asmopt_push
  6018                           opt asmopt_off
  6019                           movlw  3
  6020  0E85  3003               movwf	((??_lcd_init+0)+0+2),f
  6021  0E86  00F5               movlw	138
  6022  0E87  308A               movwf	((??_lcd_init+0)+0+1),f
  6023  0E88  00F4               	movlw	85
  6024  0E89  3055               movwf	((??_lcd_init+0)+0),f
  6025  0E8A  00F3               	u1937:
  6026  0E8B                     decfsz	((??_lcd_init+0)+0),f
  6027  0E8B  0BF3               	goto	u1937
  6028  0E8C  2E8B               	decfsz	((??_lcd_init+0)+0+1),f
  6029  0E8D  0BF4               	goto	u1937
  6030  0E8E  2E8B               	decfsz	((??_lcd_init+0)+0+2),f
  6031  0E8F  0BF5               	goto	u1937
  6032  0E90  2E8B               	nop2
  6033  0E91  2E92               opt asmopt_pop
  6034                           
  6035                           	line	152
  6036                           	
  6037                           l1742:	
  6038  0E92                     ;lcd.c: 152:     PORTDbits.RD5 = 1;
  6039                           	bcf	status, 5	;RP0=0, select bank0
  6040  0E92  1283               	bcf	status, 6	;RP1=0, select bank0
  6041  0E93  1303               	bsf	(8),5	;volatile
  6042  0E94  1688               	line	153
  6043                           	
  6044                           l1744:	
  6045  0E95                     ;lcd.c: 153:     lcd_inst( 0x20|0x00|0x08 );
  6046                           	movlw	low(028h)
  6047  0E95  3028               	fcall	_lcd_inst
  6048  0E96  120A  118A  215D  120A  158A  	line	154
  6049                           	
  6050                           l1746:	
  6051  0E9B                     ;lcd.c: 154:     lcd_inst( 0x08|0x04|0x00|0x00 );
  6052                           	movlw	low(0Ch)
  6053  0E9B  300C               	fcall	_lcd_inst
  6054  0E9C  120A  118A  215D  120A  158A  	line	155
  6055                           	
  6056                           l1748:	
  6057  0EA1                     ;lcd.c: 155:     lcd_inst( 0x01 );
  6058                           	movlw	low(01h)
  6059  0EA1  3001               	fcall	_lcd_inst
  6060  0EA2  120A  118A  215D  120A  158A  	line	156
  6061                           	
  6062                           l1750:	
  6063  0EA7                     ;lcd.c: 156:     lcd_inst( 0x02 );
  6064                           	movlw	low(02h)
  6065  0EA7  3002               	fcall	_lcd_inst
  6066  0EA8  120A  118A  215D  120A  158A  	line	157
  6067                           ;lcd.c: 157:     _delay((unsigned long)((100)*(20000000/4000.0)));
  6068                           	opt asmopt_push
  6069                           opt asmopt_off
  6070                           movlw  3
  6071  0EAD  3003               movwf	((??_lcd_init+0)+0+2),f
  6072  0EAE  00F5               movlw	138
  6073  0EAF  308A               movwf	((??_lcd_init+0)+0+1),f
  6074  0EB0  00F4               	movlw	85
  6075  0EB1  3055               movwf	((??_lcd_init+0)+0),f
  6076  0EB2  00F3               	u1947:
  6077  0EB3                     decfsz	((??_lcd_init+0)+0),f
  6078  0EB3  0BF3               	goto	u1947
  6079  0EB4  2EB3               	decfsz	((??_lcd_init+0)+0+1),f
  6080  0EB5  0BF4               	goto	u1947
  6081  0EB6  2EB3               	decfsz	((??_lcd_init+0)+0+2),f
  6082  0EB7  0BF5               	goto	u1947
  6083  0EB8  2EB3               	nop2
  6084  0EB9  2EBA               opt asmopt_pop
  6085                           
  6086                           	line	158
  6087                           	
  6088                           l52:	
  6089  0EBA                     	return
  6090  0EBA  0008               	opt stack 0
  6091                           GLOBAL	__end_of_lcd_init
  6092                           	__end_of_lcd_init:
  6093  0EBB                     	signat	_lcd_init,89
  6094                           	global	_lcd_inst
  6095                           
  6096 ;; *************** function _lcd_inst *****************
  6097 ;; Defined at:
  6098 ;;		line 68 in file "lcd.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  i               1    wreg     unsigned char 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  i               1    2[COMMON] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6112 ;;      Params:         0       0       0       0       0
  6113 ;;      Locals:         1       0       0       0       0
  6114 ;;      Temps:          2       0       0       0       0
  6115 ;;      Totals:         3       0       0       0       0
  6116 ;;Total ram usage:        3 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_lcd_lincol
  6122 ;;		_lcd_init
  6123 ;;		_lcd_clear
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6127                           	line	68
  6128                           global __ptext20
  6129                           __ptext20:	;psect for function _lcd_inst
  6130  015D                     psect	text20
  6131                           	file	"lcd.c"
  6132                           	line	68
  6133                           	global	__size_of_lcd_inst
  6134                           	__size_of_lcd_inst	equ	__end_of_lcd_inst-_lcd_inst
  6135  007F                     	
  6136                           _lcd_inst:	
  6137  015D                     ;incstack = 0
  6138                           	opt	stack 5
  6139                           ; Regs used in _lcd_inst: [wreg+status,2+status,0]
  6140                           ;lcd_inst@i stored from wreg
  6141                           	movwf	(lcd_inst@i)
  6142  015D  00F2               	line	70
  6143                           	
  6144                           l1430:	
  6145  015E                     ;lcd.c: 68: void lcd_inst (unsigned char i);lcd.c: 69: {;lcd.c: 70:     PORTDbits.RD4 = 
                                 0;
  6146                           	bcf	status, 5	;RP0=0, select bank0
  6147  015E  1283               	bcf	status, 6	;RP1=0, select bank0
  6148  015F  1303               	bcf	(8),4	;volatile
  6149  0160  1208               	line	71
  6150                           	
  6151                           l1432:	
  6152  0161                     ;lcd.c: 71:     PORTD = ((PORTD & 0xF0)|(i>>4 & 0x0F));
  6153                           	movf	(lcd_inst@i),w
  6154  0161  0872               	movwf	(??_lcd_inst+0)+0
  6155  0162  00F0               	movlw	04h
  6156  0163  3004               u955:
  6157  0164                     	clrc
  6158  0164  1003               	rrf	(??_lcd_inst+0)+0,f
  6159  0165  0CF0               	addlw	-1
  6160  0166  3EFF               	skipz
  6161  0167  1D03               	goto	u955
  6162  0168  2964               	movlw	low(0Fh)
  6163  0169  300F               	andwf	0+(??_lcd_inst+0)+0,w
  6164  016A  0570               	movwf	(??_lcd_inst+1)+0
  6165  016B  00F1               	movf	(8),w	;volatile
  6166  016C  0808               	andlw	0F0h
  6167  016D  39F0               	iorwf	0+(??_lcd_inst+1)+0,w
  6168  016E  0471               	movwf	(8)	;volatile
  6169  016F  0088               	line	73
  6170                           	
  6171                           l1434:	
  6172  0170                     ;lcd.c: 73:     PORTDbits.RD5 =0;
  6173                           	bcf	(8),5	;volatile
  6174  0170  1288               	line	74
  6175                           ;lcd.c: 74:     if ( i == 0x01 || i == 0x02 )
  6176                           		decf	((lcd_inst@i)),w
  6177  0171  0372               	btfsc	status,2
  6178  0172  1903               	goto	u961
  6179  0173  2975               	goto	u960
  6180  0174  2976               u961:
  6181  0175                     	goto	l1438
  6182  0175  297D               u960:
  6183  0176                     	
  6184                           l1436:	
  6185  0176                     		movlw	2
  6186  0176  3002               	xorwf	((lcd_inst@i)),w
  6187  0177  0672               	btfss	status,2
  6188  0178  1D03               	goto	u971
  6189  0179  297B               	goto	u970
  6190  017A  297C               u971:
  6191  017B                     	goto	l1440
  6192  017B  2987               u970:
  6193  017C                     	goto	l1438
  6194  017C  297D               	
  6195                           l36:	
  6196  017D                     	line	75
  6197                           	
  6198                           l1438:	
  6199  017D                     ;lcd.c: 75:         _delay((unsigned long)((2)*(20000000/4000.0)));
  6200                           	opt asmopt_push
  6201                           opt asmopt_off
  6202                           movlw	13
  6203  017D  300D               movwf	((??_lcd_inst+0)+0+1),f
  6204  017E  00F1               	movlw	251
  6205  017F  30FB               movwf	((??_lcd_inst+0)+0),f
  6206  0180  00F0               	u1957:
  6207  0181                     decfsz	((??_lcd_inst+0)+0),f
  6208  0181  0BF0               	goto	u1957
  6209  0182  2981               	decfsz	((??_lcd_inst+0)+0+1),f
  6210  0183  0BF1               	goto	u1957
  6211  0184  2981               	nop2
  6212  0185  2986               opt asmopt_pop
  6213                           
  6214                           	goto	l1442
  6215  0186  298D               	line	76
  6216                           ;lcd.c: 76:     else
  6217                           	
  6218                           l34:	
  6219  0187                     	line	77
  6220                           	
  6221                           l1440:	
  6222  0187                     ;lcd.c: 77:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  6223                           	opt asmopt_push
  6224                           opt asmopt_off
  6225                           	movlw	66
  6226  0187  3042               movwf	((??_lcd_inst+0)+0),f
  6227  0188  00F0               	u1967:
  6228  0189                     decfsz	(??_lcd_inst+0)+0,f
  6229  0189  0BF0               	goto	u1967
  6230  018A  2989               	nop
  6231  018B  0000               opt asmopt_pop
  6232                           
  6233                           	goto	l1442
  6234  018C  298D               	
  6235                           l37:	
  6236  018D                     	line	78
  6237                           	
  6238                           l1442:	
  6239  018D                     ;lcd.c: 78:     PORTDbits.RD5 = 1;
  6240                           	bcf	status, 5	;RP0=0, select bank0
  6241  018D  1283               	bcf	status, 6	;RP1=0, select bank0
  6242  018E  1303               	bsf	(8),5	;volatile
  6243  018F  1688               	line	80
  6244                           	
  6245                           l1444:	
  6246  0190                     ;lcd.c: 80:     if ( (i & 0xF0) == (0x20 | 0x00) )
  6247                           	movlw	low(0F0h)
  6248  0190  30F0               	andwf	(lcd_inst@i),w
  6249  0191  0572               	movwf	(??_lcd_inst+0)+0
  6250  0192  00F0               		movlw	32
  6251  0193  3020               	xorwf	((??_lcd_inst+0)+0),w
  6252  0194  0670               	btfss	status,2
  6253  0195  1D03               	goto	u981
  6254  0196  2998               	goto	u980
  6255  0197  2999               u981:
  6256  0198                     	goto	l1456
  6257  0198  29B3               u980:
  6258  0199                     	line	82
  6259                           	
  6260                           l1446:	
  6261  0199                     ;lcd.c: 81:     {;lcd.c: 82:         PORTDbits.RD4 = 0;
  6262                           	bcf	(8),4	;volatile
  6263  0199  1208               	line	83
  6264                           	
  6265                           l1448:	
  6266  019A                     ;lcd.c: 83:         PORTD = ((PORTD & 0xF0)|(i>>4 & 0x0F));
  6267                           	movf	(lcd_inst@i),w
  6268  019A  0872               	movwf	(??_lcd_inst+0)+0
  6269  019B  00F0               	movlw	04h
  6270  019C  3004               u995:
  6271  019D                     	clrc
  6272  019D  1003               	rrf	(??_lcd_inst+0)+0,f
  6273  019E  0CF0               	addlw	-1
  6274  019F  3EFF               	skipz
  6275  01A0  1D03               	goto	u995
  6276  01A1  299D               	movlw	low(0Fh)
  6277  01A2  300F               	andwf	0+(??_lcd_inst+0)+0,w
  6278  01A3  0570               	movwf	(??_lcd_inst+1)+0
  6279  01A4  00F1               	movf	(8),w	;volatile
  6280  01A5  0808               	andlw	0F0h
  6281  01A6  39F0               	iorwf	0+(??_lcd_inst+1)+0,w
  6282  01A7  0471               	movwf	(8)	;volatile
  6283  01A8  0088               	line	84
  6284                           	
  6285                           l1450:	
  6286  01A9                     ;lcd.c: 84:         PORTDbits.RD5 = 0;
  6287                           	bcf	(8),5	;volatile
  6288  01A9  1288               	line	85
  6289                           	
  6290                           l1452:	
  6291  01AA                     ;lcd.c: 85:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  6292                           	opt asmopt_push
  6293                           opt asmopt_off
  6294                           	movlw	66
  6295  01AA  3042               movwf	((??_lcd_inst+0)+0),f
  6296  01AB  00F0               	u1977:
  6297  01AC                     decfsz	(??_lcd_inst+0)+0,f
  6298  01AC  0BF0               	goto	u1977
  6299  01AD  29AC               	nop
  6300  01AE  0000               opt asmopt_pop
  6301                           
  6302                           	line	86
  6303                           	
  6304                           l1454:	
  6305  01AF                     ;lcd.c: 86:         PORTDbits.RD5 = 1;
  6306                           	bcf	status, 5	;RP0=0, select bank0
  6307  01AF  1283               	bcf	status, 6	;RP1=0, select bank0
  6308  01B0  1303               	bsf	(8),5	;volatile
  6309  01B1  1688               	goto	l1456
  6310  01B2  29B3               	line	87
  6311                           ;lcd.c: 87:     }
  6312                           	
  6313                           l38:	
  6314  01B3                     	line	89
  6315                           	
  6316                           l1456:	
  6317  01B3                     ;lcd.c: 89:     PORTDbits.RD4 = 0;
  6318                           	bcf	(8),4	;volatile
  6319  01B3  1208               	line	90
  6320                           	
  6321                           l1458:	
  6322  01B4                     ;lcd.c: 90:     PORTD = ((PORTD & 0xF0)|(i & 0x0F));
  6323                           	movlw	low(0Fh)
  6324  01B4  300F               	andwf	(lcd_inst@i),w
  6325  01B5  0572               	movwf	(??_lcd_inst+0)+0
  6326  01B6  00F0               	movf	(8),w	;volatile
  6327  01B7  0808               	andlw	0F0h
  6328  01B8  39F0               	iorwf	0+(??_lcd_inst+0)+0,w
  6329  01B9  0470               	movwf	(8)	;volatile
  6330  01BA  0088               	line	91
  6331                           	
  6332                           l1460:	
  6333  01BB                     ;lcd.c: 91:     PORTDbits.RD5 = 0;
  6334                           	bcf	(8),5	;volatile
  6335  01BB  1288               	line	92
  6336                           	
  6337                           l1462:	
  6338  01BC                     ;lcd.c: 92:     if ( i==0x01 || i == 0x02 )
  6339                           		decf	((lcd_inst@i)),w
  6340  01BC  0372               	btfsc	status,2
  6341  01BD  1903               	goto	u1001
  6342  01BE  29C0               	goto	u1000
  6343  01BF  29C1               u1001:
  6344  01C0                     	goto	l1466
  6345  01C0  29C8               u1000:
  6346  01C1                     	
  6347                           l1464:	
  6348  01C1                     		movlw	2
  6349  01C1  3002               	xorwf	((lcd_inst@i)),w
  6350  01C2  0672               	btfss	status,2
  6351  01C3  1D03               	goto	u1011
  6352  01C4  29C6               	goto	u1010
  6353  01C5  29C7               u1011:
  6354  01C6                     	goto	l1468
  6355  01C6  29D2               u1010:
  6356  01C7                     	goto	l1466
  6357  01C7  29C8               	
  6358                           l41:	
  6359  01C8                     	line	93
  6360                           	
  6361                           l1466:	
  6362  01C8                     ;lcd.c: 93:         _delay((unsigned long)((2)*(20000000/4000.0)));
  6363                           	opt asmopt_push
  6364                           opt asmopt_off
  6365                           movlw	13
  6366  01C8  300D               movwf	((??_lcd_inst+0)+0+1),f
  6367  01C9  00F1               	movlw	251
  6368  01CA  30FB               movwf	((??_lcd_inst+0)+0),f
  6369  01CB  00F0               	u1987:
  6370  01CC                     decfsz	((??_lcd_inst+0)+0),f
  6371  01CC  0BF0               	goto	u1987
  6372  01CD  29CC               	decfsz	((??_lcd_inst+0)+0+1),f
  6373  01CE  0BF1               	goto	u1987
  6374  01CF  29CC               	nop2
  6375  01D0  29D1               opt asmopt_pop
  6376                           
  6377                           	goto	l1470
  6378  01D1  29D8               	line	94
  6379                           ;lcd.c: 94:     else
  6380                           	
  6381                           l39:	
  6382  01D2                     	line	95
  6383                           	
  6384                           l1468:	
  6385  01D2                     ;lcd.c: 95:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  6386                           	opt asmopt_push
  6387                           opt asmopt_off
  6388                           	movlw	66
  6389  01D2  3042               movwf	((??_lcd_inst+0)+0),f
  6390  01D3  00F0               	u1997:
  6391  01D4                     decfsz	(??_lcd_inst+0)+0,f
  6392  01D4  0BF0               	goto	u1997
  6393  01D5  29D4               	nop
  6394  01D6  0000               opt asmopt_pop
  6395                           
  6396                           	goto	l1470
  6397  01D7  29D8               	
  6398                           l42:	
  6399  01D8                     	line	96
  6400                           	
  6401                           l1470:	
  6402  01D8                     ;lcd.c: 96:     PORTDbits.RD5 = 1;
  6403                           	bcf	status, 5	;RP0=0, select bank0
  6404  01D8  1283               	bcf	status, 6	;RP1=0, select bank0
  6405  01D9  1303               	bsf	(8),5	;volatile
  6406  01DA  1688               	line	97
  6407                           	
  6408                           l43:	
  6409  01DB                     	return
  6410  01DB  0008               	opt stack 0
  6411                           GLOBAL	__end_of_lcd_inst
  6412                           	__end_of_lcd_inst:
  6413  01DC                     	signat	_lcd_inst,4217
  6414                           	global	_fmm_media3
  6415                           
  6416 ;; *************** function _fmm_media3 *****************
  6417 ;; Defined at:
  6418 ;;		line 76 in file "fmm.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  2    6[BANK0 ] int 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6432 ;;      Params:         0       2       0       0       0
  6433 ;;      Locals:         0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0
  6435 ;;      Totals:         0       2       0       0       0
  6436 ;;Total ram usage:        2 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    1
  6439 ;; This function calls:
  6440 ;;		___aldiv
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6446                           	file	"fmm.c"
  6447                           	line	76
  6448                           global __ptext21
  6449                           __ptext21:	;psect for function _fmm_media3
  6450  0CEC                     psect	text21
  6451                           	file	"fmm.c"
  6452                           	line	76
  6453                           	global	__size_of_fmm_media3
  6454                           	__size_of_fmm_media3	equ	__end_of_fmm_media3-_fmm_media3
  6455  001F                     	
  6456                           _fmm_media3:	
  6457  0CEC                     ;incstack = 0
  6458                           	opt	stack 6
  6459                           ; Regs used in _fmm_media3: [wreg+status,2+status,0+pclath+cstack]
  6460                           	line	78
  6461                           	
  6462                           l1864:	
  6463  0CEC                     ;fmm.c: 78:     return( acc_temp / 11 );
  6464                           	movlw	0
  6465  0CEC  3000               	movwf	(___aldiv@divisor+3)
  6466  0CED  00F3               	movlw	0
  6467  0CEE  3000               	movwf	(___aldiv@divisor+2)
  6468  0CEF  00F2               	movlw	0
  6469  0CF0  3000               	movwf	(___aldiv@divisor+1)
  6470  0CF1  00F1               	movlw	0Bh
  6471  0CF2  300B               	movwf	(___aldiv@divisor)
  6472  0CF3  00F0               
  6473                           	bcf	status, 5	;RP0=0, select bank0
  6474  0CF4  1283               	bcf	status, 6	;RP1=0, select bank0
  6475  0CF5  1303               	movf	(_acc_temp+3),w
  6476  0CF6  0855               	movwf	(___aldiv@dividend+3)
  6477  0CF7  00F7               	movf	(_acc_temp+2),w
  6478  0CF8  0854               	movwf	(___aldiv@dividend+2)
  6479  0CF9  00F6               	movf	(_acc_temp+1),w
  6480  0CFA  0853               	movwf	(___aldiv@dividend+1)
  6481  0CFB  00F5               	movf	(_acc_temp),w
  6482  0CFC  0852               	movwf	(___aldiv@dividend)
  6483  0CFD  00F4               
  6484                           	fcall	___aldiv
  6485  0CFE  120A  118A  23A6  120A  158A  	movf	(1+(?___aldiv)),w
  6486  0D03  0871               	bcf	status, 5	;RP0=0, select bank0
  6487  0D04  1283               	bcf	status, 6	;RP1=0, select bank0
  6488  0D05  1303               	movwf	(?_fmm_media3+1)
  6489  0D06  00A7               	movf	(0+(?___aldiv)),w
  6490  0D07  0870               	movwf	(?_fmm_media3)
  6491  0D08  00A6               	goto	l263
  6492  0D09  2D0A               	
  6493                           l1866:	
  6494  0D0A                     	line	79
  6495                           	
  6496                           l263:	
  6497  0D0A                     	return
  6498  0D0A  0008               	opt stack 0
  6499                           GLOBAL	__end_of_fmm_media3
  6500                           	__end_of_fmm_media3:
  6501  0D0B                     	signat	_fmm_media3,90
  6502                           	global	_fmm_media2
  6503                           
  6504 ;; *************** function _fmm_media2 *****************
  6505 ;; Defined at:
  6506 ;;		line 60 in file "fmm.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;		None
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2    6[BANK0 ] int 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0, pclath, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6520 ;;      Params:         0       2       0       0       0
  6521 ;;      Locals:         0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0
  6523 ;;      Totals:         0       2       0       0       0
  6524 ;;Total ram usage:        2 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    1
  6527 ;; This function calls:
  6528 ;;		___aldiv
  6529 ;; This function is called by:
  6530 ;;		_main
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6534                           	line	60
  6535                           global __ptext22
  6536                           __ptext22:	;psect for function _fmm_media2
  6537  0CCD                     psect	text22
  6538                           	file	"fmm.c"
  6539                           	line	60
  6540                           	global	__size_of_fmm_media2
  6541                           	__size_of_fmm_media2	equ	__end_of_fmm_media2-_fmm_media2
  6542  001F                     	
  6543                           _fmm_media2:	
  6544  0CCD                     ;incstack = 0
  6545                           	opt	stack 6
  6546                           ; Regs used in _fmm_media2: [wreg+status,2+status,0+pclath+cstack]
  6547                           	line	62
  6548                           	
  6549                           l1860:	
  6550  0CCD                     ;fmm.c: 62:     return( acc_temp / 11 );
  6551                           	movlw	0
  6552  0CCD  3000               	movwf	(___aldiv@divisor+3)
  6553  0CCE  00F3               	movlw	0
  6554  0CCF  3000               	movwf	(___aldiv@divisor+2)
  6555  0CD0  00F2               	movlw	0
  6556  0CD1  3000               	movwf	(___aldiv@divisor+1)
  6557  0CD2  00F1               	movlw	0Bh
  6558  0CD3  300B               	movwf	(___aldiv@divisor)
  6559  0CD4  00F0               
  6560                           	bcf	status, 5	;RP0=0, select bank0
  6561  0CD5  1283               	bcf	status, 6	;RP1=0, select bank0
  6562  0CD6  1303               	movf	(_acc_temp+3),w
  6563  0CD7  0855               	movwf	(___aldiv@dividend+3)
  6564  0CD8  00F7               	movf	(_acc_temp+2),w
  6565  0CD9  0854               	movwf	(___aldiv@dividend+2)
  6566  0CDA  00F6               	movf	(_acc_temp+1),w
  6567  0CDB  0853               	movwf	(___aldiv@dividend+1)
  6568  0CDC  00F5               	movf	(_acc_temp),w
  6569  0CDD  0852               	movwf	(___aldiv@dividend)
  6570  0CDE  00F4               
  6571                           	fcall	___aldiv
  6572  0CDF  120A  118A  23A6  120A  158A  	movf	(1+(?___aldiv)),w
  6573  0CE4  0871               	bcf	status, 5	;RP0=0, select bank0
  6574  0CE5  1283               	bcf	status, 6	;RP1=0, select bank0
  6575  0CE6  1303               	movwf	(?_fmm_media2+1)
  6576  0CE7  00A7               	movf	(0+(?___aldiv)),w
  6577  0CE8  0870               	movwf	(?_fmm_media2)
  6578  0CE9  00A6               	goto	l257
  6579  0CEA  2CEB               	
  6580                           l1862:	
  6581  0CEB                     	line	63
  6582                           	
  6583                           l257:	
  6584  0CEB                     	return
  6585  0CEB  0008               	opt stack 0
  6586                           GLOBAL	__end_of_fmm_media2
  6587                           	__end_of_fmm_media2:
  6588  0CEC                     	signat	_fmm_media2,90
  6589                           	global	_fmm_media1
  6590                           
  6591 ;; *************** function _fmm_media1 *****************
  6592 ;; Defined at:
  6593 ;;		line 44 in file "fmm.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  2    6[BANK0 ] int 
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0, pclath, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6607 ;;      Params:         0       2       0       0       0
  6608 ;;      Locals:         0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0
  6610 ;;      Totals:         0       2       0       0       0
  6611 ;;Total ram usage:        2 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    1
  6614 ;; This function calls:
  6615 ;;		___aldiv
  6616 ;; This function is called by:
  6617 ;;		_main
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6621                           	line	44
  6622                           global __ptext23
  6623                           __ptext23:	;psect for function _fmm_media1
  6624  0CAE                     psect	text23
  6625                           	file	"fmm.c"
  6626                           	line	44
  6627                           	global	__size_of_fmm_media1
  6628                           	__size_of_fmm_media1	equ	__end_of_fmm_media1-_fmm_media1
  6629  001F                     	
  6630                           _fmm_media1:	
  6631  0CAE                     ;incstack = 0
  6632                           	opt	stack 6
  6633                           ; Regs used in _fmm_media1: [wreg+status,2+status,0+pclath+cstack]
  6634                           	line	46
  6635                           	
  6636                           l1856:	
  6637  0CAE                     ;fmm.c: 46:     return( acc_temp / 11 );
  6638                           	movlw	0
  6639  0CAE  3000               	movwf	(___aldiv@divisor+3)
  6640  0CAF  00F3               	movlw	0
  6641  0CB0  3000               	movwf	(___aldiv@divisor+2)
  6642  0CB1  00F2               	movlw	0
  6643  0CB2  3000               	movwf	(___aldiv@divisor+1)
  6644  0CB3  00F1               	movlw	0Bh
  6645  0CB4  300B               	movwf	(___aldiv@divisor)
  6646  0CB5  00F0               
  6647                           	bcf	status, 5	;RP0=0, select bank0
  6648  0CB6  1283               	bcf	status, 6	;RP1=0, select bank0
  6649  0CB7  1303               	movf	(_acc_temp+3),w
  6650  0CB8  0855               	movwf	(___aldiv@dividend+3)
  6651  0CB9  00F7               	movf	(_acc_temp+2),w
  6652  0CBA  0854               	movwf	(___aldiv@dividend+2)
  6653  0CBB  00F6               	movf	(_acc_temp+1),w
  6654  0CBC  0853               	movwf	(___aldiv@dividend+1)
  6655  0CBD  00F5               	movf	(_acc_temp),w
  6656  0CBE  0852               	movwf	(___aldiv@dividend)
  6657  0CBF  00F4               
  6658                           	fcall	___aldiv
  6659  0CC0  120A  118A  23A6  120A  158A  	movf	(1+(?___aldiv)),w
  6660  0CC5  0871               	bcf	status, 5	;RP0=0, select bank0
  6661  0CC6  1283               	bcf	status, 6	;RP1=0, select bank0
  6662  0CC7  1303               	movwf	(?_fmm_media1+1)
  6663  0CC8  00A7               	movf	(0+(?___aldiv)),w
  6664  0CC9  0870               	movwf	(?_fmm_media1)
  6665  0CCA  00A6               	goto	l251
  6666  0CCB  2CCC               	
  6667                           l1858:	
  6668  0CCC                     	line	47
  6669                           	
  6670                           l251:	
  6671  0CCC                     	return
  6672  0CCC  0008               	opt stack 0
  6673                           GLOBAL	__end_of_fmm_media1
  6674                           	__end_of_fmm_media1:
  6675  0CCD                     	signat	_fmm_media1,90
  6676                           	global	_fmm_media
  6677                           
  6678 ;; *************** function _fmm_media *****************
  6679 ;; Defined at:
  6680 ;;		line 28 in file "fmm.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;		None
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  2    6[BANK0 ] int 
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0, pclath, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6694 ;;      Params:         0       2       0       0       0
  6695 ;;      Locals:         0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0
  6697 ;;      Totals:         0       2       0       0       0
  6698 ;;Total ram usage:        2 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    1
  6701 ;; This function calls:
  6702 ;;		___aldiv
  6703 ;; This function is called by:
  6704 ;;		_main
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6708                           	line	28
  6709                           global __ptext24
  6710                           __ptext24:	;psect for function _fmm_media
  6711  0C8F                     psect	text24
  6712                           	file	"fmm.c"
  6713                           	line	28
  6714                           	global	__size_of_fmm_media
  6715                           	__size_of_fmm_media	equ	__end_of_fmm_media-_fmm_media
  6716  001F                     	
  6717                           _fmm_media:	
  6718  0C8F                     ;incstack = 0
  6719                           	opt	stack 6
  6720                           ; Regs used in _fmm_media: [wreg+status,2+status,0+pclath+cstack]
  6721                           	line	30
  6722                           	
  6723                           l1852:	
  6724  0C8F                     ;fmm.c: 30:     return( acc_temp / 11 );
  6725                           	movlw	0
  6726  0C8F  3000               	movwf	(___aldiv@divisor+3)
  6727  0C90  00F3               	movlw	0
  6728  0C91  3000               	movwf	(___aldiv@divisor+2)
  6729  0C92  00F2               	movlw	0
  6730  0C93  3000               	movwf	(___aldiv@divisor+1)
  6731  0C94  00F1               	movlw	0Bh
  6732  0C95  300B               	movwf	(___aldiv@divisor)
  6733  0C96  00F0               
  6734                           	bcf	status, 5	;RP0=0, select bank0
  6735  0C97  1283               	bcf	status, 6	;RP1=0, select bank0
  6736  0C98  1303               	movf	(_acc_temp+3),w
  6737  0C99  0855               	movwf	(___aldiv@dividend+3)
  6738  0C9A  00F7               	movf	(_acc_temp+2),w
  6739  0C9B  0854               	movwf	(___aldiv@dividend+2)
  6740  0C9C  00F6               	movf	(_acc_temp+1),w
  6741  0C9D  0853               	movwf	(___aldiv@dividend+1)
  6742  0C9E  00F5               	movf	(_acc_temp),w
  6743  0C9F  0852               	movwf	(___aldiv@dividend)
  6744  0CA0  00F4               
  6745                           	fcall	___aldiv
  6746  0CA1  120A  118A  23A6  120A  158A  	movf	(1+(?___aldiv)),w
  6747  0CA6  0871               	bcf	status, 5	;RP0=0, select bank0
  6748  0CA7  1283               	bcf	status, 6	;RP1=0, select bank0
  6749  0CA8  1303               	movwf	(?_fmm_media+1)
  6750  0CA9  00A7               	movf	(0+(?___aldiv)),w
  6751  0CAA  0870               	movwf	(?_fmm_media)
  6752  0CAB  00A6               	goto	l245
  6753  0CAC  2CAD               	
  6754                           l1854:	
  6755  0CAD                     	line	31
  6756                           	
  6757                           l245:	
  6758  0CAD                     	return
  6759  0CAD  0008               	opt stack 0
  6760                           GLOBAL	__end_of_fmm_media
  6761                           	__end_of_fmm_media:
  6762  0CAE                     	signat	_fmm_media,90
  6763                           	global	___aldiv
  6764                           
  6765 ;; *************** function ___aldiv *****************
  6766 ;; Defined at:
  6767 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  divisor         4    0[COMMON] long 
  6770 ;;  dividend        4    4[COMMON] long 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  quotient        4    2[BANK0 ] long 
  6773 ;;  sign            1    1[BANK0 ] unsigned char 
  6774 ;;  counter         1    0[BANK0 ] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  4    0[COMMON] long 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6784 ;;      Params:         8       0       0       0       0
  6785 ;;      Locals:         0       6       0       0       0
  6786 ;;      Temps:          1       0       0       0       0
  6787 ;;      Totals:         9       6       0       0       0
  6788 ;;Total ram usage:       15 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_fmm_media
  6794 ;;		_fmm_media1
  6795 ;;		_fmm_media2
  6796 ;;		_fmm_media3
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
  6800                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  6801                           	line	5
  6802                           global __ptext25
  6803                           __ptext25:	;psect for function ___aldiv
  6804  03A6                     psect	text25
  6805                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  6806                           	line	5
  6807                           	global	__size_of___aldiv
  6808                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  6809  00A6                     	
  6810                           ___aldiv:	
  6811  03A6                     ;incstack = 0
  6812                           	opt	stack 6
  6813                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6814                           	line	13
  6815                           	
  6816                           l1634:	
  6817  03A6                     	bcf	status, 5	;RP0=0, select bank0
  6818  03A6  1283               	bcf	status, 6	;RP1=0, select bank0
  6819  03A7  1303               	clrf	(___aldiv@sign)
  6820  03A8  01A1               	line	14
  6821                           	
  6822                           l1636:	
  6823  03A9                     	btfss	(___aldiv@divisor+3),7
  6824  03A9  1FF3               	goto	u1321
  6825  03AA  2BAC               	goto	u1320
  6826  03AB  2BAD               u1321:
  6827  03AC                     	goto	l414
  6828  03AC  2BBA               u1320:
  6829  03AD                     	line	15
  6830                           	
  6831                           l1638:	
  6832  03AD                     	comf	(___aldiv@divisor),f
  6833  03AD  09F0               	comf	(___aldiv@divisor+1),f
  6834  03AE  09F1               	comf	(___aldiv@divisor+2),f
  6835  03AF  09F2               	comf	(___aldiv@divisor+3),f
  6836  03B0  09F3               	incf	(___aldiv@divisor),f
  6837  03B1  0AF0               	skipnz
  6838  03B2  1903               	incf	(___aldiv@divisor+1),f
  6839  03B3  0AF1               	skipnz
  6840  03B4  1903               	incf	(___aldiv@divisor+2),f
  6841  03B5  0AF2               	skipnz
  6842  03B6  1903               	incf	(___aldiv@divisor+3),f
  6843  03B7  0AF3               	line	16
  6844                           	clrf	(___aldiv@sign)
  6845  03B8  01A1               	incf	(___aldiv@sign),f
  6846  03B9  0AA1               	line	17
  6847                           	
  6848                           l414:	
  6849  03BA                     	line	18
  6850                           	btfss	(___aldiv@dividend+3),7
  6851  03BA  1FF7               	goto	u1331
  6852  03BB  2BBD               	goto	u1330
  6853  03BC  2BBE               u1331:
  6854  03BD                     	goto	l1644
  6855  03BD  2BCE               u1330:
  6856  03BE                     	line	19
  6857                           	
  6858                           l1640:	
  6859  03BE                     	comf	(___aldiv@dividend),f
  6860  03BE  09F4               	comf	(___aldiv@dividend+1),f
  6861  03BF  09F5               	comf	(___aldiv@dividend+2),f
  6862  03C0  09F6               	comf	(___aldiv@dividend+3),f
  6863  03C1  09F7               	incf	(___aldiv@dividend),f
  6864  03C2  0AF4               	skipnz
  6865  03C3  1903               	incf	(___aldiv@dividend+1),f
  6866  03C4  0AF5               	skipnz
  6867  03C5  1903               	incf	(___aldiv@dividend+2),f
  6868  03C6  0AF6               	skipnz
  6869  03C7  1903               	incf	(___aldiv@dividend+3),f
  6870  03C8  0AF7               	line	20
  6871                           	
  6872                           l1642:	
  6873  03C9                     	movlw	low(01h)
  6874  03C9  3001               	movwf	(??___aldiv+0)+0
  6875  03CA  00F8               	movf	(??___aldiv+0)+0,w
  6876  03CB  0878               	xorwf	(___aldiv@sign),f
  6877  03CC  06A1               	goto	l1644
  6878  03CD  2BCE               	line	21
  6879                           	
  6880                           l415:	
  6881  03CE                     	line	22
  6882                           	
  6883                           l1644:	
  6884  03CE                     	movlw	high highword(0)
  6885  03CE  3000               	movwf	(___aldiv@quotient+3)
  6886  03CF  00A5               	movlw	low highword(0)
  6887  03D0  3000               	movwf	(___aldiv@quotient+2)
  6888  03D1  00A4               	movlw	high(0)
  6889  03D2  3000               	movwf	(___aldiv@quotient+1)
  6890  03D3  00A3               	movlw	low(0)
  6891  03D4  3000               	movwf	(___aldiv@quotient)
  6892  03D5  00A2               
  6893                           	line	23
  6894                           	
  6895                           l1646:	
  6896  03D6                     	movf	(___aldiv@divisor+3),w
  6897  03D6  0873               	iorwf	(___aldiv@divisor+2),w
  6898  03D7  0472               	iorwf	(___aldiv@divisor+1),w
  6899  03D8  0471               	iorwf	(___aldiv@divisor),w
  6900  03D9  0470               	skipnz
  6901  03DA  1903               	goto	u1341
  6902  03DB  2BDD               	goto	u1340
  6903  03DC  2BDE               u1341:
  6904  03DD                     	goto	l1666
  6905  03DD  2C31               u1340:
  6906  03DE                     	line	24
  6907                           	
  6908                           l1648:	
  6909  03DE                     	clrf	(___aldiv@counter)
  6910  03DE  01A0               	incf	(___aldiv@counter),f
  6911  03DF  0AA0               	line	25
  6912                           	goto	l1652
  6913  03E0  2BEF               	
  6914                           l418:	
  6915  03E1                     	line	26
  6916                           	
  6917                           l1650:	
  6918  03E1                     	movlw	01h
  6919  03E1  3001               	movwf	(??___aldiv+0)+0
  6920  03E2  00F8               u1355:
  6921  03E3                     	clrc
  6922  03E3  1003               	rlf	(___aldiv@divisor),f
  6923  03E4  0DF0               	rlf	(___aldiv@divisor+1),f
  6924  03E5  0DF1               	rlf	(___aldiv@divisor+2),f
  6925  03E6  0DF2               	rlf	(___aldiv@divisor+3),f
  6926  03E7  0DF3               	decfsz	(??___aldiv+0)+0
  6927  03E8  0BF8               	goto	u1355
  6928  03E9  2BE3               	line	27
  6929                           	movlw	low(01h)
  6930  03EA  3001               	movwf	(??___aldiv+0)+0
  6931  03EB  00F8               	movf	(??___aldiv+0)+0,w
  6932  03EC  0878               	addwf	(___aldiv@counter),f
  6933  03ED  07A0               	goto	l1652
  6934  03EE  2BEF               	line	28
  6935                           	
  6936                           l417:	
  6937  03EF                     	line	25
  6938                           	
  6939                           l1652:	
  6940  03EF                     	btfss	(___aldiv@divisor+3),(31)&7
  6941  03EF  1FF3               	goto	u1361
  6942  03F0  2BF2               	goto	u1360
  6943  03F1  2BF3               u1361:
  6944  03F2                     	goto	l1650
  6945  03F2  2BE1               u1360:
  6946  03F3                     	goto	l1654
  6947  03F3  2BF5               	
  6948                           l419:	
  6949  03F4                     	goto	l1654
  6950  03F4  2BF5               	line	29
  6951                           	
  6952                           l420:	
  6953  03F5                     	line	30
  6954                           	
  6955                           l1654:	
  6956  03F5                     	movlw	01h
  6957  03F5  3001               	movwf	(??___aldiv+0)+0
  6958  03F6  00F8               u1375:
  6959  03F7                     	clrc
  6960  03F7  1003               	rlf	(___aldiv@quotient),f
  6961  03F8  0DA2               	rlf	(___aldiv@quotient+1),f
  6962  03F9  0DA3               	rlf	(___aldiv@quotient+2),f
  6963  03FA  0DA4               	rlf	(___aldiv@quotient+3),f
  6964  03FB  0DA5               	decfsz	(??___aldiv+0)+0
  6965  03FC  0BF8               	goto	u1375
  6966  03FD  2BF7               	line	31
  6967                           	
  6968                           l1656:	
  6969  03FE                     	movf	(___aldiv@divisor+3),w
  6970  03FE  0873               	subwf	(___aldiv@dividend+3),w
  6971  03FF  0277               	skipz
  6972  0400  1D03               	goto	u1385
  6973  0401  2C0C               	movf	(___aldiv@divisor+2),w
  6974  0402  0872               	subwf	(___aldiv@dividend+2),w
  6975  0403  0276               	skipz
  6976  0404  1D03               	goto	u1385
  6977  0405  2C0C               	movf	(___aldiv@divisor+1),w
  6978  0406  0871               	subwf	(___aldiv@dividend+1),w
  6979  0407  0275               	skipz
  6980  0408  1D03               	goto	u1385
  6981  0409  2C0C               	movf	(___aldiv@divisor),w
  6982  040A  0870               	subwf	(___aldiv@dividend),w
  6983  040B  0274               u1385:
  6984  040C                     	skipc
  6985  040C  1C03               	goto	u1381
  6986  040D  2C0F               	goto	u1380
  6987  040E  2C10               u1381:
  6988  040F                     	goto	l1662
  6989  040F  2C20               u1380:
  6990  0410                     	line	32
  6991                           	
  6992                           l1658:	
  6993  0410                     	movf	(___aldiv@divisor),w
  6994  0410  0870               	subwf	(___aldiv@dividend),f
  6995  0411  02F4               	movf	(___aldiv@divisor+1),w
  6996  0412  0871               	skipc
  6997  0413  1C03               	incfsz	(___aldiv@divisor+1),w
  6998  0414  0F71               	subwf	(___aldiv@dividend+1),f
  6999  0415  02F5               	movf	(___aldiv@divisor+2),w
  7000  0416  0872               	skipc
  7001  0417  1C03               	incfsz	(___aldiv@divisor+2),w
  7002  0418  0F72               	subwf	(___aldiv@dividend+2),f
  7003  0419  02F6               	movf	(___aldiv@divisor+3),w
  7004  041A  0873               	skipc
  7005  041B  1C03               	incfsz	(___aldiv@divisor+3),w
  7006  041C  0F73               	subwf	(___aldiv@dividend+3),f
  7007  041D  02F7               	line	33
  7008                           	
  7009                           l1660:	
  7010  041E                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  7011  041E  1422               	goto	l1662
  7012  041F  2C20               	line	34
  7013                           	
  7014                           l421:	
  7015  0420                     	line	35
  7016                           	
  7017                           l1662:	
  7018  0420                     	movlw	01h
  7019  0420  3001               u1395:
  7020  0421                     	clrc
  7021  0421  1003               	rrf	(___aldiv@divisor+3),f
  7022  0422  0CF3               	rrf	(___aldiv@divisor+2),f
  7023  0423  0CF2               	rrf	(___aldiv@divisor+1),f
  7024  0424  0CF1               	rrf	(___aldiv@divisor),f
  7025  0425  0CF0               	addlw	-1
  7026  0426  3EFF               	skipz
  7027  0427  1D03               	goto	u1395
  7028  0428  2C21               
  7029                           	line	36
  7030                           	
  7031                           l1664:	
  7032  0429                     	movlw	01h
  7033  0429  3001               	subwf	(___aldiv@counter),f
  7034  042A  02A0               	btfss	status,2
  7035  042B  1D03               	goto	u1401
  7036  042C  2C2E               	goto	u1400
  7037  042D  2C2F               u1401:
  7038  042E                     	goto	l1654
  7039  042E  2BF5               u1400:
  7040  042F                     	goto	l1666
  7041  042F  2C31               	
  7042                           l422:	
  7043  0430                     	goto	l1666
  7044  0430  2C31               	line	37
  7045                           	
  7046                           l416:	
  7047  0431                     	line	38
  7048                           	
  7049                           l1666:	
  7050  0431                     	movf	((___aldiv@sign)),w
  7051  0431  0821               	btfsc	status,2
  7052  0432  1903               	goto	u1411
  7053  0433  2C35               	goto	u1410
  7054  0434  2C36               u1411:
  7055  0435                     	goto	l1670
  7056  0435  2C42               u1410:
  7057  0436                     	line	39
  7058                           	
  7059                           l1668:	
  7060  0436                     	comf	(___aldiv@quotient),f
  7061  0436  09A2               	comf	(___aldiv@quotient+1),f
  7062  0437  09A3               	comf	(___aldiv@quotient+2),f
  7063  0438  09A4               	comf	(___aldiv@quotient+3),f
  7064  0439  09A5               	incf	(___aldiv@quotient),f
  7065  043A  0AA2               	skipnz
  7066  043B  1903               	incf	(___aldiv@quotient+1),f
  7067  043C  0AA3               	skipnz
  7068  043D  1903               	incf	(___aldiv@quotient+2),f
  7069  043E  0AA4               	skipnz
  7070  043F  1903               	incf	(___aldiv@quotient+3),f
  7071  0440  0AA5               	goto	l1670
  7072  0441  2C42               	
  7073                           l423:	
  7074  0442                     	line	40
  7075                           	
  7076                           l1670:	
  7077  0442                     	movf	(___aldiv@quotient+3),w
  7078  0442  0825               	movwf	(?___aldiv+3)
  7079  0443  00F3               	movf	(___aldiv@quotient+2),w
  7080  0444  0824               	movwf	(?___aldiv+2)
  7081  0445  00F2               	movf	(___aldiv@quotient+1),w
  7082  0446  0823               	movwf	(?___aldiv+1)
  7083  0447  00F1               	movf	(___aldiv@quotient),w
  7084  0448  0822               	movwf	(?___aldiv)
  7085  0449  00F0               
  7086                           	goto	l424
  7087  044A  2C4B               	
  7088                           l1672:	
  7089  044B                     	line	41
  7090                           	
  7091                           l424:	
  7092  044B                     	return
  7093  044B  0008               	opt stack 0
  7094                           GLOBAL	__end_of___aldiv
  7095                           	__end_of___aldiv:
  7096  044C                     	signat	___aldiv,8316
  7097                           	global	_fmm_add3
  7098                           
  7099 ;; *************** function _fmm_add3 *****************
  7100 ;; Defined at:
  7101 ;;		line 65 in file "fmm.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  valor           2    7[COMMON] int 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  i               2    9[COMMON] int 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  2    7[COMMON] int 
  7108 ;; Registers used:
  7109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7115 ;;      Params:         2       0       0       0       0
  7116 ;;      Locals:         2       0       0       0       0
  7117 ;;      Temps:          0       7       0       0       0
  7118 ;;      Totals:         4       7       0       0       0
  7119 ;;Total ram usage:       11 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    1
  7122 ;; This function calls:
  7123 ;;		___awmod
  7124 ;; This function is called by:
  7125 ;;		_main
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7129                           	file	"fmm.c"
  7130                           	line	65
  7131                           global __ptext26
  7132                           __ptext26:	;psect for function _fmm_add3
  7133  0079                     psect	text26
  7134                           	file	"fmm.c"
  7135                           	line	65
  7136                           	global	__size_of_fmm_add3
  7137                           	__size_of_fmm_add3	equ	__end_of_fmm_add3-_fmm_add3
  7138  0071                     	
  7139                           _fmm_add3:	
  7140  0079                     ;incstack = 0
  7141                           	opt	stack 6
  7142                           ; Regs used in _fmm_add3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7143                           	line	68
  7144                           	
  7145                           l1842:	
  7146  0079                     ;fmm.c: 65: int fmm_add3( int valor );fmm.c: 66: {;fmm.c: 67:     int i;;fmm.c: 68:     
                                 i = fmm_temp_indice;
  7147                           	bcf	status, 5	;RP0=0, select bank0
  7148  0079  1283               	bcf	status, 6	;RP1=0, select bank0
  7149  007A  1303               	movf	(_fmm_temp_indice+1),w
  7150  007B  0857               	movwf	(fmm_add3@i+1)
  7151  007C  00FA               	movf	(_fmm_temp_indice),w
  7152  007D  0856               	movwf	(fmm_add3@i)
  7153  007E  00F9               	line	69
  7154                           	
  7155                           l1844:	
  7156  007F                     ;fmm.c: 69:     acc_temp -= fmm_temp[i];
  7157                           	movf	(fmm_add3@i),w
  7158  007F  0879               	movwf	(??_fmm_add3+0)+0
  7159  0080  00A0               	addwf	(??_fmm_add3+0)+0,w
  7160  0081  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7161  0082  3EA0               	movwf	fsr0
  7162  0083  0084               	bcf	status, 7	;select IRP bank1
  7163  0084  1383               	movf	indf,w
  7164  0085  0800               	movwf	(??_fmm_add3+1)+0+0
  7165  0086  00A1               	incf	fsr0,f
  7166  0087  0A84               	movf	indf,w
  7167  0088  0800               	movwf	(??_fmm_add3+1)+0+1
  7168  0089  00A2               	movf	0+(??_fmm_add3+1)+0,w
  7169  008A  0821               	movwf	((??_fmm_add3+3)+0)
  7170  008B  00A3               	movf	1+(??_fmm_add3+1)+0,w
  7171  008C  0822               	movwf	((??_fmm_add3+3)+0+1)
  7172  008D  00A4               	movlw	0
  7173  008E  3000               	btfsc	((??_fmm_add3+3)+0+1),7
  7174  008F  1BA4               	movlw	255
  7175  0090  30FF               	movwf	((??_fmm_add3+3)+0+2)
  7176  0091  00A5               	movwf	((??_fmm_add3+3)+0+3)
  7177  0092  00A6               	movf	0+(??_fmm_add3+3)+0,w
  7178  0093  0823               	subwf	(_acc_temp),f
  7179  0094  02D2               	movf	1+(??_fmm_add3+3)+0,w
  7180  0095  0824               	skipc
  7181  0096  1C03               	incfsz	1+(??_fmm_add3+3)+0,w
  7182  0097  0F24               	goto	u1695
  7183  0098  289A               	goto	u1696
  7184  0099  289B               u1695:
  7185  009A                     	subwf	(_acc_temp+1),f
  7186  009A  02D3               u1696:
  7187  009B                     	movf	2+(??_fmm_add3+3)+0,w
  7188  009B  0825               	skipc
  7189  009C  1C03               	incfsz	2+(??_fmm_add3+3)+0,w
  7190  009D  0F25               	goto	u1697
  7191  009E  28A0               	goto	u1698
  7192  009F  28A1               u1697:
  7193  00A0                     	subwf	(_acc_temp+2),f
  7194  00A0  02D4               u1698:
  7195  00A1                     	movf	3+(??_fmm_add3+3)+0,w
  7196  00A1  0826               	skipc
  7197  00A2  1C03               	incfsz	3+(??_fmm_add3+3)+0,w
  7198  00A3  0F26               	goto	u1699
  7199  00A4  28A6               	goto	u1690
  7200  00A5  28A7               u1699:
  7201  00A6                     	subwf	(_acc_temp+3),f
  7202  00A6  02D5               u1690:
  7203  00A7                     
  7204                           	line	70
  7205                           	
  7206                           l1846:	
  7207  00A7                     ;fmm.c: 70:     fmm_temp[i] = valor;
  7208                           	movf	(fmm_add3@i),w
  7209  00A7  0879               	movwf	(??_fmm_add3+0)+0
  7210  00A8  00A0               	addwf	(??_fmm_add3+0)+0,w
  7211  00A9  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7212  00AA  3EA0               	movwf	fsr0
  7213  00AB  0084               	movf	(fmm_add3@valor),w
  7214  00AC  0877               	movwf	indf
  7215  00AD  0080               	incf	fsr0,f
  7216  00AE  0A84               	movf	(fmm_add3@valor+1),w
  7217  00AF  0878               	movwf	indf
  7218  00B0  0080               	line	71
  7219                           ;fmm.c: 71:     acc_temp += valor;
  7220                           	movf	(fmm_add3@valor),w
  7221  00B1  0877               	movwf	((??_fmm_add3+0)+0)
  7222  00B2  00A0               	movf	(fmm_add3@valor+1),w
  7223  00B3  0878               	movwf	((??_fmm_add3+0)+0+1)
  7224  00B4  00A1               	movlw	0
  7225  00B5  3000               	btfsc	((??_fmm_add3+0)+0+1),7
  7226  00B6  1BA1               	movlw	255
  7227  00B7  30FF               	movwf	((??_fmm_add3+0)+0+2)
  7228  00B8  00A2               	movwf	((??_fmm_add3+0)+0+3)
  7229  00B9  00A3               	movf	0+(??_fmm_add3+0)+0,w
  7230  00BA  0820               	addwf	(_acc_temp),f
  7231  00BB  07D2               	movf	1+(??_fmm_add3+0)+0,w
  7232  00BC  0821               	clrz
  7233  00BD  1103               	skipnc
  7234  00BE  1803               	addlw	1
  7235  00BF  3E01               	skipnz
  7236  00C0  1903               	goto	u1701
  7237  00C1  28C3               	addwf	(_acc_temp+1),f
  7238  00C2  07D3               u1701:
  7239  00C3                     	movf	2+(??_fmm_add3+0)+0,w
  7240  00C3  0822               	clrz
  7241  00C4  1103               	skipnc
  7242  00C5  1803               	addlw	1
  7243  00C6  3E01               	skipnz
  7244  00C7  1903               	goto	u1702
  7245  00C8  28CA               	addwf	(_acc_temp+2),f
  7246  00C9  07D4               u1702:
  7247  00CA                     	movf	3+(??_fmm_add3+0)+0,w
  7248  00CA  0823               	clrz
  7249  00CB  1103               	skipnc
  7250  00CC  1803               	addlw	1
  7251  00CD  3E01               	skipnz
  7252  00CE  1903               	goto	u1703
  7253  00CF  28D1               	addwf	(_acc_temp+3),f
  7254  00D0  07D5               u1703:
  7255  00D1                     
  7256                           	line	72
  7257                           	
  7258                           l1848:	
  7259  00D1                     ;fmm.c: 72:     fmm_temp_indice = (i+1) % 11;
  7260                           	movlw	0Bh
  7261  00D1  300B               	movwf	(___awmod@divisor)
  7262  00D2  00F0               	movlw	0
  7263  00D3  3000               	movwf	((___awmod@divisor))+1
  7264  00D4  00F1               	movf	(fmm_add3@i),w
  7265  00D5  0879               	addlw	low(01h)
  7266  00D6  3E01               	movwf	(___awmod@dividend)
  7267  00D7  00F2               	movf	(fmm_add3@i+1),w
  7268  00D8  087A               	skipnc
  7269  00D9  1803               	addlw	1
  7270  00DA  3E01               	addlw	high(01h)
  7271  00DB  3E00               	movwf	1+(___awmod@dividend)
  7272  00DC  00F3               	fcall	___awmod
  7273  00DD  120A  158A  26BB  120A  118A  	movf	(1+(?___awmod)),w
  7274  00E2  0871               	bcf	status, 5	;RP0=0, select bank0
  7275  00E3  1283               	bcf	status, 6	;RP1=0, select bank0
  7276  00E4  1303               	movwf	(_fmm_temp_indice+1)
  7277  00E5  00D7               	movf	(0+(?___awmod)),w
  7278  00E6  0870               	movwf	(_fmm_temp_indice)
  7279  00E7  00D6               	goto	l260
  7280  00E8  28E9               	line	73
  7281                           	
  7282                           l1850:	
  7283  00E9                     	line	74
  7284                           ;fmm.c: 73:     return( i );;	Return value of _fmm_add3 is never used
  7285                           	
  7286                           l260:	
  7287  00E9                     	return
  7288  00E9  0008               	opt stack 0
  7289                           GLOBAL	__end_of_fmm_add3
  7290                           	__end_of_fmm_add3:
  7291  00EA                     	signat	_fmm_add3,4218
  7292                           	global	_fmm_add2
  7293                           
  7294 ;; *************** function _fmm_add2 *****************
  7295 ;; Defined at:
  7296 ;;		line 49 in file "fmm.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  valor           2    7[COMMON] int 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  i               2    9[COMMON] int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  2    7[COMMON] int 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7310 ;;      Params:         2       0       0       0       0
  7311 ;;      Locals:         2       0       0       0       0
  7312 ;;      Temps:          0       7       0       0       0
  7313 ;;      Totals:         4       7       0       0       0
  7314 ;;Total ram usage:       11 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    1
  7317 ;; This function calls:
  7318 ;;		___awmod
  7319 ;; This function is called by:
  7320 ;;		_main
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  7324                           	line	49
  7325                           global __ptext27
  7326                           __ptext27:	;psect for function _fmm_add2
  7327  0008                     psect	text27
  7328                           	file	"fmm.c"
  7329                           	line	49
  7330                           	global	__size_of_fmm_add2
  7331                           	__size_of_fmm_add2	equ	__end_of_fmm_add2-_fmm_add2
  7332  0071                     	
  7333                           _fmm_add2:	
  7334  0008                     ;incstack = 0
  7335                           	opt	stack 6
  7336                           ; Regs used in _fmm_add2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7337                           	line	52
  7338                           	
  7339                           l1832:	
  7340  0008                     ;fmm.c: 49: int fmm_add2( int valor );fmm.c: 50: {;fmm.c: 51:     int i;;fmm.c: 52:     
                                 i = fmm_temp_indice;
  7341                           	bcf	status, 5	;RP0=0, select bank0
  7342  0008  1283               	bcf	status, 6	;RP1=0, select bank0
  7343  0009  1303               	movf	(_fmm_temp_indice+1),w
  7344  000A  0857               	movwf	(fmm_add2@i+1)
  7345  000B  00FA               	movf	(_fmm_temp_indice),w
  7346  000C  0856               	movwf	(fmm_add2@i)
  7347  000D  00F9               	line	53
  7348                           	
  7349                           l1834:	
  7350  000E                     ;fmm.c: 53:     acc_temp -= fmm_temp[i];
  7351                           	movf	(fmm_add2@i),w
  7352  000E  0879               	movwf	(??_fmm_add2+0)+0
  7353  000F  00A0               	addwf	(??_fmm_add2+0)+0,w
  7354  0010  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7355  0011  3EA0               	movwf	fsr0
  7356  0012  0084               	bcf	status, 7	;select IRP bank1
  7357  0013  1383               	movf	indf,w
  7358  0014  0800               	movwf	(??_fmm_add2+1)+0+0
  7359  0015  00A1               	incf	fsr0,f
  7360  0016  0A84               	movf	indf,w
  7361  0017  0800               	movwf	(??_fmm_add2+1)+0+1
  7362  0018  00A2               	movf	0+(??_fmm_add2+1)+0,w
  7363  0019  0821               	movwf	((??_fmm_add2+3)+0)
  7364  001A  00A3               	movf	1+(??_fmm_add2+1)+0,w
  7365  001B  0822               	movwf	((??_fmm_add2+3)+0+1)
  7366  001C  00A4               	movlw	0
  7367  001D  3000               	btfsc	((??_fmm_add2+3)+0+1),7
  7368  001E  1BA4               	movlw	255
  7369  001F  30FF               	movwf	((??_fmm_add2+3)+0+2)
  7370  0020  00A5               	movwf	((??_fmm_add2+3)+0+3)
  7371  0021  00A6               	movf	0+(??_fmm_add2+3)+0,w
  7372  0022  0823               	subwf	(_acc_temp),f
  7373  0023  02D2               	movf	1+(??_fmm_add2+3)+0,w
  7374  0024  0824               	skipc
  7375  0025  1C03               	incfsz	1+(??_fmm_add2+3)+0,w
  7376  0026  0F24               	goto	u1675
  7377  0027  2829               	goto	u1676
  7378  0028  282A               u1675:
  7379  0029                     	subwf	(_acc_temp+1),f
  7380  0029  02D3               u1676:
  7381  002A                     	movf	2+(??_fmm_add2+3)+0,w
  7382  002A  0825               	skipc
  7383  002B  1C03               	incfsz	2+(??_fmm_add2+3)+0,w
  7384  002C  0F25               	goto	u1677
  7385  002D  282F               	goto	u1678
  7386  002E  2830               u1677:
  7387  002F                     	subwf	(_acc_temp+2),f
  7388  002F  02D4               u1678:
  7389  0030                     	movf	3+(??_fmm_add2+3)+0,w
  7390  0030  0826               	skipc
  7391  0031  1C03               	incfsz	3+(??_fmm_add2+3)+0,w
  7392  0032  0F26               	goto	u1679
  7393  0033  2835               	goto	u1670
  7394  0034  2836               u1679:
  7395  0035                     	subwf	(_acc_temp+3),f
  7396  0035  02D5               u1670:
  7397  0036                     
  7398                           	line	54
  7399                           	
  7400                           l1836:	
  7401  0036                     ;fmm.c: 54:     fmm_temp[i] = valor;
  7402                           	movf	(fmm_add2@i),w
  7403  0036  0879               	movwf	(??_fmm_add2+0)+0
  7404  0037  00A0               	addwf	(??_fmm_add2+0)+0,w
  7405  0038  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7406  0039  3EA0               	movwf	fsr0
  7407  003A  0084               	movf	(fmm_add2@valor),w
  7408  003B  0877               	movwf	indf
  7409  003C  0080               	incf	fsr0,f
  7410  003D  0A84               	movf	(fmm_add2@valor+1),w
  7411  003E  0878               	movwf	indf
  7412  003F  0080               	line	55
  7413                           ;fmm.c: 55:     acc_temp += valor;
  7414                           	movf	(fmm_add2@valor),w
  7415  0040  0877               	movwf	((??_fmm_add2+0)+0)
  7416  0041  00A0               	movf	(fmm_add2@valor+1),w
  7417  0042  0878               	movwf	((??_fmm_add2+0)+0+1)
  7418  0043  00A1               	movlw	0
  7419  0044  3000               	btfsc	((??_fmm_add2+0)+0+1),7
  7420  0045  1BA1               	movlw	255
  7421  0046  30FF               	movwf	((??_fmm_add2+0)+0+2)
  7422  0047  00A2               	movwf	((??_fmm_add2+0)+0+3)
  7423  0048  00A3               	movf	0+(??_fmm_add2+0)+0,w
  7424  0049  0820               	addwf	(_acc_temp),f
  7425  004A  07D2               	movf	1+(??_fmm_add2+0)+0,w
  7426  004B  0821               	clrz
  7427  004C  1103               	skipnc
  7428  004D  1803               	addlw	1
  7429  004E  3E01               	skipnz
  7430  004F  1903               	goto	u1681
  7431  0050  2852               	addwf	(_acc_temp+1),f
  7432  0051  07D3               u1681:
  7433  0052                     	movf	2+(??_fmm_add2+0)+0,w
  7434  0052  0822               	clrz
  7435  0053  1103               	skipnc
  7436  0054  1803               	addlw	1
  7437  0055  3E01               	skipnz
  7438  0056  1903               	goto	u1682
  7439  0057  2859               	addwf	(_acc_temp+2),f
  7440  0058  07D4               u1682:
  7441  0059                     	movf	3+(??_fmm_add2+0)+0,w
  7442  0059  0823               	clrz
  7443  005A  1103               	skipnc
  7444  005B  1803               	addlw	1
  7445  005C  3E01               	skipnz
  7446  005D  1903               	goto	u1683
  7447  005E  2860               	addwf	(_acc_temp+3),f
  7448  005F  07D5               u1683:
  7449  0060                     
  7450                           	line	56
  7451                           	
  7452                           l1838:	
  7453  0060                     ;fmm.c: 56:     fmm_temp_indice = (i+1) % 11;
  7454                           	movlw	0Bh
  7455  0060  300B               	movwf	(___awmod@divisor)
  7456  0061  00F0               	movlw	0
  7457  0062  3000               	movwf	((___awmod@divisor))+1
  7458  0063  00F1               	movf	(fmm_add2@i),w
  7459  0064  0879               	addlw	low(01h)
  7460  0065  3E01               	movwf	(___awmod@dividend)
  7461  0066  00F2               	movf	(fmm_add2@i+1),w
  7462  0067  087A               	skipnc
  7463  0068  1803               	addlw	1
  7464  0069  3E01               	addlw	high(01h)
  7465  006A  3E00               	movwf	1+(___awmod@dividend)
  7466  006B  00F3               	fcall	___awmod
  7467  006C  120A  158A  26BB  120A  118A  	movf	(1+(?___awmod)),w
  7468  0071  0871               	bcf	status, 5	;RP0=0, select bank0
  7469  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  7470  0073  1303               	movwf	(_fmm_temp_indice+1)
  7471  0074  00D7               	movf	(0+(?___awmod)),w
  7472  0075  0870               	movwf	(_fmm_temp_indice)
  7473  0076  00D6               	goto	l254
  7474  0077  2878               	line	57
  7475                           	
  7476                           l1840:	
  7477  0078                     	line	58
  7478                           ;fmm.c: 57:     return( i );;	Return value of _fmm_add2 is never used
  7479                           	
  7480                           l254:	
  7481  0078                     	return
  7482  0078  0008               	opt stack 0
  7483                           GLOBAL	__end_of_fmm_add2
  7484                           	__end_of_fmm_add2:
  7485  0079                     	signat	_fmm_add2,4218
  7486                           	global	_fmm_add1
  7487                           
  7488 ;; *************** function _fmm_add1 *****************
  7489 ;; Defined at:
  7490 ;;		line 33 in file "fmm.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  valor           2    7[COMMON] int 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  i               2    9[COMMON] int 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2    7[COMMON] int 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7504 ;;      Params:         2       0       0       0       0
  7505 ;;      Locals:         2       0       0       0       0
  7506 ;;      Temps:          0       7       0       0       0
  7507 ;;      Totals:         4       7       0       0       0
  7508 ;;Total ram usage:       11 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    1
  7511 ;; This function calls:
  7512 ;;		___awmod
  7513 ;; This function is called by:
  7514 ;;		_main
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  7518                           	line	33
  7519                           global __ptext28
  7520                           __ptext28:	;psect for function _fmm_add1
  7521  0F8F                     psect	text28
  7522                           	file	"fmm.c"
  7523                           	line	33
  7524                           	global	__size_of_fmm_add1
  7525                           	__size_of_fmm_add1	equ	__end_of_fmm_add1-_fmm_add1
  7526  0071                     	
  7527                           _fmm_add1:	
  7528  0F8F                     ;incstack = 0
  7529                           	opt	stack 6
  7530                           ; Regs used in _fmm_add1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7531                           	line	36
  7532                           	
  7533                           l1822:	
  7534  0F8F                     ;fmm.c: 33: int fmm_add1( int valor );fmm.c: 34: {;fmm.c: 35:     int i;;fmm.c: 36:     
                                 i = fmm_temp_indice;
  7535                           	bcf	status, 5	;RP0=0, select bank0
  7536  0F8F  1283               	bcf	status, 6	;RP1=0, select bank0
  7537  0F90  1303               	movf	(_fmm_temp_indice+1),w
  7538  0F91  0857               	movwf	(fmm_add1@i+1)
  7539  0F92  00FA               	movf	(_fmm_temp_indice),w
  7540  0F93  0856               	movwf	(fmm_add1@i)
  7541  0F94  00F9               	line	37
  7542                           	
  7543                           l1824:	
  7544  0F95                     ;fmm.c: 37:     acc_temp -= fmm_temp[i];
  7545                           	movf	(fmm_add1@i),w
  7546  0F95  0879               	movwf	(??_fmm_add1+0)+0
  7547  0F96  00A0               	addwf	(??_fmm_add1+0)+0,w
  7548  0F97  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7549  0F98  3EA0               	movwf	fsr0
  7550  0F99  0084               	bcf	status, 7	;select IRP bank1
  7551  0F9A  1383               	movf	indf,w
  7552  0F9B  0800               	movwf	(??_fmm_add1+1)+0+0
  7553  0F9C  00A1               	incf	fsr0,f
  7554  0F9D  0A84               	movf	indf,w
  7555  0F9E  0800               	movwf	(??_fmm_add1+1)+0+1
  7556  0F9F  00A2               	movf	0+(??_fmm_add1+1)+0,w
  7557  0FA0  0821               	movwf	((??_fmm_add1+3)+0)
  7558  0FA1  00A3               	movf	1+(??_fmm_add1+1)+0,w
  7559  0FA2  0822               	movwf	((??_fmm_add1+3)+0+1)
  7560  0FA3  00A4               	movlw	0
  7561  0FA4  3000               	btfsc	((??_fmm_add1+3)+0+1),7
  7562  0FA5  1BA4               	movlw	255
  7563  0FA6  30FF               	movwf	((??_fmm_add1+3)+0+2)
  7564  0FA7  00A5               	movwf	((??_fmm_add1+3)+0+3)
  7565  0FA8  00A6               	movf	0+(??_fmm_add1+3)+0,w
  7566  0FA9  0823               	subwf	(_acc_temp),f
  7567  0FAA  02D2               	movf	1+(??_fmm_add1+3)+0,w
  7568  0FAB  0824               	skipc
  7569  0FAC  1C03               	incfsz	1+(??_fmm_add1+3)+0,w
  7570  0FAD  0F24               	goto	u1655
  7571  0FAE  2FB0               	goto	u1656
  7572  0FAF  2FB1               u1655:
  7573  0FB0                     	subwf	(_acc_temp+1),f
  7574  0FB0  02D3               u1656:
  7575  0FB1                     	movf	2+(??_fmm_add1+3)+0,w
  7576  0FB1  0825               	skipc
  7577  0FB2  1C03               	incfsz	2+(??_fmm_add1+3)+0,w
  7578  0FB3  0F25               	goto	u1657
  7579  0FB4  2FB6               	goto	u1658
  7580  0FB5  2FB7               u1657:
  7581  0FB6                     	subwf	(_acc_temp+2),f
  7582  0FB6  02D4               u1658:
  7583  0FB7                     	movf	3+(??_fmm_add1+3)+0,w
  7584  0FB7  0826               	skipc
  7585  0FB8  1C03               	incfsz	3+(??_fmm_add1+3)+0,w
  7586  0FB9  0F26               	goto	u1659
  7587  0FBA  2FBC               	goto	u1650
  7588  0FBB  2FBD               u1659:
  7589  0FBC                     	subwf	(_acc_temp+3),f
  7590  0FBC  02D5               u1650:
  7591  0FBD                     
  7592                           	line	38
  7593                           	
  7594                           l1826:	
  7595  0FBD                     ;fmm.c: 38:     fmm_temp[i] = valor;
  7596                           	movf	(fmm_add1@i),w
  7597  0FBD  0879               	movwf	(??_fmm_add1+0)+0
  7598  0FBE  00A0               	addwf	(??_fmm_add1+0)+0,w
  7599  0FBF  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7600  0FC0  3EA0               	movwf	fsr0
  7601  0FC1  0084               	movf	(fmm_add1@valor),w
  7602  0FC2  0877               	movwf	indf
  7603  0FC3  0080               	incf	fsr0,f
  7604  0FC4  0A84               	movf	(fmm_add1@valor+1),w
  7605  0FC5  0878               	movwf	indf
  7606  0FC6  0080               	line	39
  7607                           ;fmm.c: 39:     acc_temp += valor;
  7608                           	movf	(fmm_add1@valor),w
  7609  0FC7  0877               	movwf	((??_fmm_add1+0)+0)
  7610  0FC8  00A0               	movf	(fmm_add1@valor+1),w
  7611  0FC9  0878               	movwf	((??_fmm_add1+0)+0+1)
  7612  0FCA  00A1               	movlw	0
  7613  0FCB  3000               	btfsc	((??_fmm_add1+0)+0+1),7
  7614  0FCC  1BA1               	movlw	255
  7615  0FCD  30FF               	movwf	((??_fmm_add1+0)+0+2)
  7616  0FCE  00A2               	movwf	((??_fmm_add1+0)+0+3)
  7617  0FCF  00A3               	movf	0+(??_fmm_add1+0)+0,w
  7618  0FD0  0820               	addwf	(_acc_temp),f
  7619  0FD1  07D2               	movf	1+(??_fmm_add1+0)+0,w
  7620  0FD2  0821               	clrz
  7621  0FD3  1103               	skipnc
  7622  0FD4  1803               	addlw	1
  7623  0FD5  3E01               	skipnz
  7624  0FD6  1903               	goto	u1661
  7625  0FD7  2FD9               	addwf	(_acc_temp+1),f
  7626  0FD8  07D3               u1661:
  7627  0FD9                     	movf	2+(??_fmm_add1+0)+0,w
  7628  0FD9  0822               	clrz
  7629  0FDA  1103               	skipnc
  7630  0FDB  1803               	addlw	1
  7631  0FDC  3E01               	skipnz
  7632  0FDD  1903               	goto	u1662
  7633  0FDE  2FE0               	addwf	(_acc_temp+2),f
  7634  0FDF  07D4               u1662:
  7635  0FE0                     	movf	3+(??_fmm_add1+0)+0,w
  7636  0FE0  0823               	clrz
  7637  0FE1  1103               	skipnc
  7638  0FE2  1803               	addlw	1
  7639  0FE3  3E01               	skipnz
  7640  0FE4  1903               	goto	u1663
  7641  0FE5  2FE7               	addwf	(_acc_temp+3),f
  7642  0FE6  07D5               u1663:
  7643  0FE7                     
  7644                           	line	40
  7645                           	
  7646                           l1828:	
  7647  0FE7                     ;fmm.c: 40:     fmm_temp_indice = (i+1) % 11;
  7648                           	movlw	0Bh
  7649  0FE7  300B               	movwf	(___awmod@divisor)
  7650  0FE8  00F0               	movlw	0
  7651  0FE9  3000               	movwf	((___awmod@divisor))+1
  7652  0FEA  00F1               	movf	(fmm_add1@i),w
  7653  0FEB  0879               	addlw	low(01h)
  7654  0FEC  3E01               	movwf	(___awmod@dividend)
  7655  0FED  00F2               	movf	(fmm_add1@i+1),w
  7656  0FEE  087A               	skipnc
  7657  0FEF  1803               	addlw	1
  7658  0FF0  3E01               	addlw	high(01h)
  7659  0FF1  3E00               	movwf	1+(___awmod@dividend)
  7660  0FF2  00F3               	fcall	___awmod
  7661  0FF3  120A  158A  26BB  120A  158A  	movf	(1+(?___awmod)),w
  7662  0FF8  0871               	bcf	status, 5	;RP0=0, select bank0
  7663  0FF9  1283               	bcf	status, 6	;RP1=0, select bank0
  7664  0FFA  1303               	movwf	(_fmm_temp_indice+1)
  7665  0FFB  00D7               	movf	(0+(?___awmod)),w
  7666  0FFC  0870               	movwf	(_fmm_temp_indice)
  7667  0FFD  00D6               	goto	l248
  7668  0FFE  2FFF               	line	41
  7669                           	
  7670                           l1830:	
  7671  0FFF                     	line	42
  7672                           ;fmm.c: 41:     return( i );;	Return value of _fmm_add1 is never used
  7673                           	
  7674                           l248:	
  7675  0FFF                     	return
  7676  0FFF  0008               	opt stack 0
  7677                           GLOBAL	__end_of_fmm_add1
  7678                           	__end_of_fmm_add1:
  7679  1000                     	signat	_fmm_add1,4218
  7680                           	global	_fmm_add
  7681                           
  7682 ;; *************** function _fmm_add *****************
  7683 ;; Defined at:
  7684 ;;		line 17 in file "fmm.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  valor           2    7[COMMON] int 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  i               2    9[COMMON] int 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  2    7[COMMON] int 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7698 ;;      Params:         2       0       0       0       0
  7699 ;;      Locals:         2       0       0       0       0
  7700 ;;      Temps:          0       7       0       0       0
  7701 ;;      Totals:         4       7       0       0       0
  7702 ;;Total ram usage:       11 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    1
  7705 ;; This function calls:
  7706 ;;		___awmod
  7707 ;; This function is called by:
  7708 ;;		_main
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  7712                           	line	17
  7713                           global __ptext29
  7714                           __ptext29:	;psect for function _fmm_add
  7715  0F1E                     psect	text29
  7716                           	file	"fmm.c"
  7717                           	line	17
  7718                           	global	__size_of_fmm_add
  7719                           	__size_of_fmm_add	equ	__end_of_fmm_add-_fmm_add
  7720  0071                     	
  7721                           _fmm_add:	
  7722  0F1E                     ;incstack = 0
  7723                           	opt	stack 6
  7724                           ; Regs used in _fmm_add: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7725                           	line	20
  7726                           	
  7727                           l1812:	
  7728  0F1E                     ;fmm.c: 17: int fmm_add( int valor );fmm.c: 18: {;fmm.c: 19:     int i;;fmm.c: 20:     i
                                  = fmm_temp_indice;
  7729                           	bcf	status, 5	;RP0=0, select bank0
  7730  0F1E  1283               	bcf	status, 6	;RP1=0, select bank0
  7731  0F1F  1303               	movf	(_fmm_temp_indice+1),w
  7732  0F20  0857               	movwf	(fmm_add@i+1)
  7733  0F21  00FA               	movf	(_fmm_temp_indice),w
  7734  0F22  0856               	movwf	(fmm_add@i)
  7735  0F23  00F9               	line	21
  7736                           	
  7737                           l1814:	
  7738  0F24                     ;fmm.c: 21:     acc_temp -= fmm_temp[i];
  7739                           	movf	(fmm_add@i),w
  7740  0F24  0879               	movwf	(??_fmm_add+0)+0
  7741  0F25  00A0               	addwf	(??_fmm_add+0)+0,w
  7742  0F26  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7743  0F27  3EA0               	movwf	fsr0
  7744  0F28  0084               	bcf	status, 7	;select IRP bank1
  7745  0F29  1383               	movf	indf,w
  7746  0F2A  0800               	movwf	(??_fmm_add+1)+0+0
  7747  0F2B  00A1               	incf	fsr0,f
  7748  0F2C  0A84               	movf	indf,w
  7749  0F2D  0800               	movwf	(??_fmm_add+1)+0+1
  7750  0F2E  00A2               	movf	0+(??_fmm_add+1)+0,w
  7751  0F2F  0821               	movwf	((??_fmm_add+3)+0)
  7752  0F30  00A3               	movf	1+(??_fmm_add+1)+0,w
  7753  0F31  0822               	movwf	((??_fmm_add+3)+0+1)
  7754  0F32  00A4               	movlw	0
  7755  0F33  3000               	btfsc	((??_fmm_add+3)+0+1),7
  7756  0F34  1BA4               	movlw	255
  7757  0F35  30FF               	movwf	((??_fmm_add+3)+0+2)
  7758  0F36  00A5               	movwf	((??_fmm_add+3)+0+3)
  7759  0F37  00A6               	movf	0+(??_fmm_add+3)+0,w
  7760  0F38  0823               	subwf	(_acc_temp),f
  7761  0F39  02D2               	movf	1+(??_fmm_add+3)+0,w
  7762  0F3A  0824               	skipc
  7763  0F3B  1C03               	incfsz	1+(??_fmm_add+3)+0,w
  7764  0F3C  0F24               	goto	u1635
  7765  0F3D  2F3F               	goto	u1636
  7766  0F3E  2F40               u1635:
  7767  0F3F                     	subwf	(_acc_temp+1),f
  7768  0F3F  02D3               u1636:
  7769  0F40                     	movf	2+(??_fmm_add+3)+0,w
  7770  0F40  0825               	skipc
  7771  0F41  1C03               	incfsz	2+(??_fmm_add+3)+0,w
  7772  0F42  0F25               	goto	u1637
  7773  0F43  2F45               	goto	u1638
  7774  0F44  2F46               u1637:
  7775  0F45                     	subwf	(_acc_temp+2),f
  7776  0F45  02D4               u1638:
  7777  0F46                     	movf	3+(??_fmm_add+3)+0,w
  7778  0F46  0826               	skipc
  7779  0F47  1C03               	incfsz	3+(??_fmm_add+3)+0,w
  7780  0F48  0F26               	goto	u1639
  7781  0F49  2F4B               	goto	u1630
  7782  0F4A  2F4C               u1639:
  7783  0F4B                     	subwf	(_acc_temp+3),f
  7784  0F4B  02D5               u1630:
  7785  0F4C                     
  7786                           	line	22
  7787                           	
  7788                           l1816:	
  7789  0F4C                     ;fmm.c: 22:     fmm_temp[i] = valor;
  7790                           	movf	(fmm_add@i),w
  7791  0F4C  0879               	movwf	(??_fmm_add+0)+0
  7792  0F4D  00A0               	addwf	(??_fmm_add+0)+0,w
  7793  0F4E  0720               	addlw	low(_fmm_temp|((0x0)<<8))&0ffh
  7794  0F4F  3EA0               	movwf	fsr0
  7795  0F50  0084               	movf	(fmm_add@valor),w
  7796  0F51  0877               	movwf	indf
  7797  0F52  0080               	incf	fsr0,f
  7798  0F53  0A84               	movf	(fmm_add@valor+1),w
  7799  0F54  0878               	movwf	indf
  7800  0F55  0080               	line	23
  7801                           ;fmm.c: 23:     acc_temp += valor;
  7802                           	movf	(fmm_add@valor),w
  7803  0F56  0877               	movwf	((??_fmm_add+0)+0)
  7804  0F57  00A0               	movf	(fmm_add@valor+1),w
  7805  0F58  0878               	movwf	((??_fmm_add+0)+0+1)
  7806  0F59  00A1               	movlw	0
  7807  0F5A  3000               	btfsc	((??_fmm_add+0)+0+1),7
  7808  0F5B  1BA1               	movlw	255
  7809  0F5C  30FF               	movwf	((??_fmm_add+0)+0+2)
  7810  0F5D  00A2               	movwf	((??_fmm_add+0)+0+3)
  7811  0F5E  00A3               	movf	0+(??_fmm_add+0)+0,w
  7812  0F5F  0820               	addwf	(_acc_temp),f
  7813  0F60  07D2               	movf	1+(??_fmm_add+0)+0,w
  7814  0F61  0821               	clrz
  7815  0F62  1103               	skipnc
  7816  0F63  1803               	addlw	1
  7817  0F64  3E01               	skipnz
  7818  0F65  1903               	goto	u1641
  7819  0F66  2F68               	addwf	(_acc_temp+1),f
  7820  0F67  07D3               u1641:
  7821  0F68                     	movf	2+(??_fmm_add+0)+0,w
  7822  0F68  0822               	clrz
  7823  0F69  1103               	skipnc
  7824  0F6A  1803               	addlw	1
  7825  0F6B  3E01               	skipnz
  7826  0F6C  1903               	goto	u1642
  7827  0F6D  2F6F               	addwf	(_acc_temp+2),f
  7828  0F6E  07D4               u1642:
  7829  0F6F                     	movf	3+(??_fmm_add+0)+0,w
  7830  0F6F  0823               	clrz
  7831  0F70  1103               	skipnc
  7832  0F71  1803               	addlw	1
  7833  0F72  3E01               	skipnz
  7834  0F73  1903               	goto	u1643
  7835  0F74  2F76               	addwf	(_acc_temp+3),f
  7836  0F75  07D5               u1643:
  7837  0F76                     
  7838                           	line	24
  7839                           	
  7840                           l1818:	
  7841  0F76                     ;fmm.c: 24:     fmm_temp_indice = (i+1) % 11;
  7842                           	movlw	0Bh
  7843  0F76  300B               	movwf	(___awmod@divisor)
  7844  0F77  00F0               	movlw	0
  7845  0F78  3000               	movwf	((___awmod@divisor))+1
  7846  0F79  00F1               	movf	(fmm_add@i),w
  7847  0F7A  0879               	addlw	low(01h)
  7848  0F7B  3E01               	movwf	(___awmod@dividend)
  7849  0F7C  00F2               	movf	(fmm_add@i+1),w
  7850  0F7D  087A               	skipnc
  7851  0F7E  1803               	addlw	1
  7852  0F7F  3E01               	addlw	high(01h)
  7853  0F80  3E00               	movwf	1+(___awmod@dividend)
  7854  0F81  00F3               	fcall	___awmod
  7855  0F82  120A  158A  26BB  120A  158A  	movf	(1+(?___awmod)),w
  7856  0F87  0871               	bcf	status, 5	;RP0=0, select bank0
  7857  0F88  1283               	bcf	status, 6	;RP1=0, select bank0
  7858  0F89  1303               	movwf	(_fmm_temp_indice+1)
  7859  0F8A  00D7               	movf	(0+(?___awmod)),w
  7860  0F8B  0870               	movwf	(_fmm_temp_indice)
  7861  0F8C  00D6               	goto	l242
  7862  0F8D  2F8E               	line	25
  7863                           	
  7864                           l1820:	
  7865  0F8E                     	line	26
  7866                           ;fmm.c: 25:     return( i );;	Return value of _fmm_add is never used
  7867                           	
  7868                           l242:	
  7869  0F8E                     	return
  7870  0F8E  0008               	opt stack 0
  7871                           GLOBAL	__end_of_fmm_add
  7872                           	__end_of_fmm_add:
  7873  0F8F                     	signat	_fmm_add,4218
  7874                           	global	___awmod
  7875                           
  7876 ;; *************** function ___awmod *****************
  7877 ;; Defined at:
  7878 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  divisor         2    0[COMMON] int 
  7881 ;;  dividend        2    2[COMMON] int 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  sign            1    6[COMMON] unsigned char 
  7884 ;;  counter         1    5[COMMON] unsigned char 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  2    0[COMMON] int 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7894 ;;      Params:         4       0       0       0       0
  7895 ;;      Locals:         2       0       0       0       0
  7896 ;;      Temps:          1       0       0       0       0
  7897 ;;      Totals:         7       0       0       0       0
  7898 ;;Total ram usage:        7 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_lcd_num
  7904 ;;		_fmm_add
  7905 ;;		_fmm_add1
  7906 ;;		_fmm_add2
  7907 ;;		_fmm_add3
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           psect	text30,local,class=CODE,delta=2,merge=1,group=1
  7911                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  7912                           	line	5
  7913                           global __ptext30
  7914                           __ptext30:	;psect for function ___awmod
  7915  0EBB                     psect	text30
  7916                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  7917                           	line	5
  7918                           	global	__size_of___awmod
  7919                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  7920  0063                     	
  7921                           ___awmod:	
  7922  0EBB                     ;incstack = 0
  7923                           	opt	stack 6
  7924                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7925                           	line	12
  7926                           	
  7927                           l1674:	
  7928  0EBB                     	clrf	(___awmod@sign)
  7929  0EBB  01F6               	line	13
  7930                           	
  7931                           l1676:	
  7932  0EBC                     	btfss	(___awmod@dividend+1),7
  7933  0EBC  1FF3               	goto	u1421
  7934  0EBD  2EBF               	goto	u1420
  7935  0EBE  2EC0               u1421:
  7936  0EBF                     	goto	l1682
  7937  0EBF  2EC8               u1420:
  7938  0EC0                     	line	14
  7939                           	
  7940                           l1678:	
  7941  0EC0                     	comf	(___awmod@dividend),f
  7942  0EC0  09F2               	comf	(___awmod@dividend+1),f
  7943  0EC1  09F3               	incf	(___awmod@dividend),f
  7944  0EC2  0AF2               	skipnz
  7945  0EC3  1903               	incf	(___awmod@dividend+1),f
  7946  0EC4  0AF3               	line	15
  7947                           	
  7948                           l1680:	
  7949  0EC5                     	clrf	(___awmod@sign)
  7950  0EC5  01F6               	incf	(___awmod@sign),f
  7951  0EC6  0AF6               	goto	l1682
  7952  0EC7  2EC8               	line	16
  7953                           	
  7954                           l505:	
  7955  0EC8                     	line	17
  7956                           	
  7957                           l1682:	
  7958  0EC8                     	btfss	(___awmod@divisor+1),7
  7959  0EC8  1FF1               	goto	u1431
  7960  0EC9  2ECB               	goto	u1430
  7961  0ECA  2ECC               u1431:
  7962  0ECB                     	goto	l1686
  7963  0ECB  2ED2               u1430:
  7964  0ECC                     	line	18
  7965                           	
  7966                           l1684:	
  7967  0ECC                     	comf	(___awmod@divisor),f
  7968  0ECC  09F0               	comf	(___awmod@divisor+1),f
  7969  0ECD  09F1               	incf	(___awmod@divisor),f
  7970  0ECE  0AF0               	skipnz
  7971  0ECF  1903               	incf	(___awmod@divisor+1),f
  7972  0ED0  0AF1               	goto	l1686
  7973  0ED1  2ED2               	
  7974                           l506:	
  7975  0ED2                     	line	19
  7976                           	
  7977                           l1686:	
  7978  0ED2                     	movf	((___awmod@divisor)),w
  7979  0ED2  0870               iorwf	((___awmod@divisor+1)),w
  7980  0ED3  0471               	btfsc	status,2
  7981  0ED4  1903               	goto	u1441
  7982  0ED5  2ED7               	goto	u1440
  7983  0ED6  2ED8               u1441:
  7984  0ED7                     	goto	l1704
  7985  0ED7  2F0D               u1440:
  7986  0ED8                     	line	20
  7987                           	
  7988                           l1688:	
  7989  0ED8                     	clrf	(___awmod@counter)
  7990  0ED8  01F5               	incf	(___awmod@counter),f
  7991  0ED9  0AF5               	line	21
  7992                           	goto	l1694
  7993  0EDA  2EE7               	
  7994                           l509:	
  7995  0EDB                     	line	22
  7996                           	
  7997                           l1690:	
  7998  0EDB                     	movlw	01h
  7999  0EDB  3001               	
  8000                           u1455:
  8001  0EDC                     	clrc
  8002  0EDC  1003               	rlf	(___awmod@divisor),f
  8003  0EDD  0DF0               	rlf	(___awmod@divisor+1),f
  8004  0EDE  0DF1               	addlw	-1
  8005  0EDF  3EFF               	skipz
  8006  0EE0  1D03               	goto	u1455
  8007  0EE1  2EDC               	line	23
  8008                           	
  8009                           l1692:	
  8010  0EE2                     	movlw	low(01h)
  8011  0EE2  3001               	movwf	(??___awmod+0)+0
  8012  0EE3  00F4               	movf	(??___awmod+0)+0,w
  8013  0EE4  0874               	addwf	(___awmod@counter),f
  8014  0EE5  07F5               	goto	l1694
  8015  0EE6  2EE7               	line	24
  8016                           	
  8017                           l508:	
  8018  0EE7                     	line	21
  8019                           	
  8020                           l1694:	
  8021  0EE7                     	btfss	(___awmod@divisor+1),(15)&7
  8022  0EE7  1FF1               	goto	u1461
  8023  0EE8  2EEA               	goto	u1460
  8024  0EE9  2EEB               u1461:
  8025  0EEA                     	goto	l1690
  8026  0EEA  2EDB               u1460:
  8027  0EEB                     	goto	l1696
  8028  0EEB  2EED               	
  8029                           l510:	
  8030  0EEC                     	goto	l1696
  8031  0EEC  2EED               	line	25
  8032                           	
  8033                           l511:	
  8034  0EED                     	line	26
  8035                           	
  8036                           l1696:	
  8037  0EED                     	movf	(___awmod@divisor+1),w
  8038  0EED  0871               	subwf	(___awmod@dividend+1),w
  8039  0EEE  0273               	skipz
  8040  0EEF  1D03               	goto	u1475
  8041  0EF0  2EF3               	movf	(___awmod@divisor),w
  8042  0EF1  0870               	subwf	(___awmod@dividend),w
  8043  0EF2  0272               u1475:
  8044  0EF3                     	skipc
  8045  0EF3  1C03               	goto	u1471
  8046  0EF4  2EF6               	goto	u1470
  8047  0EF5  2EF7               u1471:
  8048  0EF6                     	goto	l1700
  8049  0EF6  2EFE               u1470:
  8050  0EF7                     	line	27
  8051                           	
  8052                           l1698:	
  8053  0EF7                     	movf	(___awmod@divisor),w
  8054  0EF7  0870               	subwf	(___awmod@dividend),f
  8055  0EF8  02F2               	movf	(___awmod@divisor+1),w
  8056  0EF9  0871               	skipc
  8057  0EFA  1C03               	decf	(___awmod@dividend+1),f
  8058  0EFB  03F3               	subwf	(___awmod@dividend+1),f
  8059  0EFC  02F3               	goto	l1700
  8060  0EFD  2EFE               	
  8061                           l512:	
  8062  0EFE                     	line	28
  8063                           	
  8064                           l1700:	
  8065  0EFE                     	movlw	01h
  8066  0EFE  3001               	
  8067                           u1485:
  8068  0EFF                     	clrc
  8069  0EFF  1003               	rrf	(___awmod@divisor+1),f
  8070  0F00  0CF1               	rrf	(___awmod@divisor),f
  8071  0F01  0CF0               	addlw	-1
  8072  0F02  3EFF               	skipz
  8073  0F03  1D03               	goto	u1485
  8074  0F04  2EFF               	line	29
  8075                           	
  8076                           l1702:	
  8077  0F05                     	movlw	01h
  8078  0F05  3001               	subwf	(___awmod@counter),f
  8079  0F06  02F5               	btfss	status,2
  8080  0F07  1D03               	goto	u1491
  8081  0F08  2F0A               	goto	u1490
  8082  0F09  2F0B               u1491:
  8083  0F0A                     	goto	l1696
  8084  0F0A  2EED               u1490:
  8085  0F0B                     	goto	l1704
  8086  0F0B  2F0D               	
  8087                           l513:	
  8088  0F0C                     	goto	l1704
  8089  0F0C  2F0D               	line	30
  8090                           	
  8091                           l507:	
  8092  0F0D                     	line	31
  8093                           	
  8094                           l1704:	
  8095  0F0D                     	movf	((___awmod@sign)),w
  8096  0F0D  0876               	btfsc	status,2
  8097  0F0E  1903               	goto	u1501
  8098  0F0F  2F11               	goto	u1500
  8099  0F10  2F12               u1501:
  8100  0F11                     	goto	l1708
  8101  0F11  2F18               u1500:
  8102  0F12                     	line	32
  8103                           	
  8104                           l1706:	
  8105  0F12                     	comf	(___awmod@dividend),f
  8106  0F12  09F2               	comf	(___awmod@dividend+1),f
  8107  0F13  09F3               	incf	(___awmod@dividend),f
  8108  0F14  0AF2               	skipnz
  8109  0F15  1903               	incf	(___awmod@dividend+1),f
  8110  0F16  0AF3               	goto	l1708
  8111  0F17  2F18               	
  8112                           l514:	
  8113  0F18                     	line	33
  8114                           	
  8115                           l1708:	
  8116  0F18                     	movf	(___awmod@dividend+1),w
  8117  0F18  0873               	movwf	(?___awmod+1)
  8118  0F19  00F1               	movf	(___awmod@dividend),w
  8119  0F1A  0872               	movwf	(?___awmod)
  8120  0F1B  00F0               	goto	l515
  8121  0F1C  2F1D               	
  8122                           l1710:	
  8123  0F1D                     	line	34
  8124                           	
  8125                           l515:	
  8126  0F1D                     	return
  8127  0F1D  0008               	opt stack 0
  8128                           GLOBAL	__end_of___awmod
  8129                           	__end_of___awmod:
  8130  0F1E                     	signat	___awmod,8314
  8131                           	global	_analog_init
  8132                           
  8133 ;; *************** function _analog_init *****************
  8134 ;; Defined at:
  8135 ;;		line 7 in file "analog.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8149 ;;      Params:         0       0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0
  8152 ;;      Totals:         0       0       0       0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_main
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  8162                           	file	"analog.c"
  8163                           	line	7
  8164                           global __ptext31
  8165                           __ptext31:	;psect for function _analog_init
  8166  0C1C                     psect	text31
  8167                           	file	"analog.c"
  8168                           	line	7
  8169                           	global	__size_of_analog_init
  8170                           	__size_of_analog_init	equ	__end_of_analog_init-_analog_init
  8171  0011                     	
  8172                           _analog_init:	
  8173  0C1C                     ;incstack = 0
  8174                           	opt	stack 7
  8175                           ; Regs used in _analog_init: [wreg+status,2+status,0]
  8176                           	line	9
  8177                           	
  8178                           l1712:	
  8179  0C1C                     ;analog.c: 9:     ANSEL = 0x0F;
  8180                           	movlw	low(0Fh)
  8181  0C1C  300F               	bsf	status, 5	;RP0=1, select bank3
  8182  0C1D  1683               	bsf	status, 6	;RP1=1, select bank3
  8183  0C1E  1703               	movwf	(392)^0180h	;volatile
  8184  0C1F  0088               	line	10
  8185                           	
  8186                           l1714:	
  8187  0C20                     ;analog.c: 10:     ADCON0bits.ADCS = 0x1;
  8188                           	bcf	status, 5	;RP0=0, select bank0
  8189  0C20  1283               	bcf	status, 6	;RP1=0, select bank0
  8190  0C21  1303               	movf	(31),w	;volatile
  8191  0C22  081F               	andlw	not (((1<<2)-1)<<6)
  8192  0C23  393F               	iorlw	(01h & ((1<<2)-1))<<6
  8193  0C24  3840               	movwf	(31)	;volatile
  8194  0C25  009F               	line	11
  8195                           	
  8196                           l1716:	
  8197  0C26                     ;analog.c: 11:     ADCON0bits.ADON = 1;
  8198                           	bsf	(31),0	;volatile
  8199  0C26  141F               	line	12
  8200                           	
  8201                           l1718:	
  8202  0C27                     ;analog.c: 12:     ADCON1bits.ADFM = 1;
  8203                           	bsf	status, 5	;RP0=1, select bank1
  8204  0C27  1683               	bcf	status, 6	;RP1=0, select bank1
  8205  0C28  1303               	bsf	(159)^080h,7	;volatile
  8206  0C29  179F               	line	13
  8207                           	
  8208                           l1720:	
  8209  0C2A                     ;analog.c: 13:     ADCON1bits.VCFG0 = 0;
  8210                           	bcf	(159)^080h,4	;volatile
  8211  0C2A  121F               	line	14
  8212                           	
  8213                           l1722:	
  8214  0C2B                     ;analog.c: 14:     ADCON1bits.VCFG1 = 0;
  8215                           	bcf	(159)^080h,5	;volatile
  8216  0C2B  129F               	line	15
  8217                           	
  8218                           l13:	
  8219  0C2C                     	return
  8220  0C2C  0008               	opt stack 0
  8221                           GLOBAL	__end_of_analog_init
  8222                           	__end_of_analog_init:
  8223  0C2D                     	signat	_analog_init,89
  8224                           global	___latbits
  8225                           ___latbits	equ	2
  8226  0002                     	global	btemp
  8227                           	btemp set 07Eh
  8228  007E                     
  8229                           	DABS	1,126,2	;btemp
  8230                           	global	wtemp0
  8231                           	wtemp0 set btemp+0
  8232  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      60
    BANK1            80      0      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main$1210	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    led_monitorar@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_danger@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_alert@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_readAll@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_init@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_num
    _main->_sensor_init
    _sensor_readAll->___lmul
    ___lmul->_ADC_read
    _sensor_init->___bmul
    _led_monitorar->_sensor_alert
    _led_monitorar->_sensor_danger
    _sensor_danger->___awdiv
    _sensor_alert->___awdiv
    _lcd_print->_lcd_lincol
    _lcd_num->___awdiv
    _lcd_lincol->_lcd_inst
    ___awdiv->___wmul
    _lcd_init->_lcd_inst
    _fmm_media3->___aldiv
    _fmm_media2->___aldiv
    _fmm_media1->___aldiv
    _fmm_media->___aldiv
    _fmm_add3->___awmod
    _fmm_add2->___awmod
    _fmm_add1->___awmod
    _fmm_add->___awmod

Critical Paths under _main in BANK0

    _main->_sensor_readAll
    _sensor_readAll->___lmul
    _led_monitorar->_sensor_alert
    _led_monitorar->_sensor_danger
    _sensor_danger->___awdiv
    _sensor_alert->___awdiv
    _lcd_num->_fmm_media
    _lcd_num->_fmm_media1
    _lcd_num->_fmm_media2
    _lcd_num->_fmm_media3
    _fmm_media3->___aldiv
    _fmm_media2->___aldiv
    _fmm_media1->___aldiv
    _fmm_media->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   26931
                                             42 BANK0      8     8      0
                             ___bmul
                        _analog_init
                            _fmm_add
                           _fmm_add1
                           _fmm_add2
                           _fmm_add3
                          _fmm_media
                         _fmm_media1
                         _fmm_media2
                         _fmm_media3
                           _lcd_init
                            _lcd_num
                          _lcd_print
                           _led_init
                      _led_monitorar
                        _sensor_init
                     _sensor_readAll
          _tecla_decrementar_descida
           _tecla_incrementar_subida
                        _teclas_init
 ---------------------------------------------------------------------------------
 (1) _teclas_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tecla_incrementar_subida                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tecla_decrementar_descida                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sensor_readAll                                      34    33      1    1670
                                              8 BANK0     34    33      1
                           _ADC_read
                             ___bmul
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     396
                                              9 COMMON     5     5      0
                                              0 BANK0      8     0      8
                           _ADC_read (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             9     7      2      94
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _sensor_init                                         14     5      9    3157
                                              4 COMMON    10     1      9
                                              0 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     805
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _led_monitorar                                        1     1      0    7145
                                              9 BANK0      1     1      0
                       _sensor_alert
                      _sensor_danger
 ---------------------------------------------------------------------------------
 (2) _sensor_danger                                        8     8      0    3512
                                             11 COMMON     3     3      0
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _sensor_alert                                         8     8      0    3512
                                             11 COMMON     3     3      0
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1706
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     681
                                              6 COMMON     5     3      2
                           _lcd_data
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    4577
                                             11 COMMON     3     3      0
                                              8 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                          _fmm_media (ARG)
                         _fmm_media1 (ARG)
                         _fmm_media2 (ARG)
                         _fmm_media3 (ARG)
                           _lcd_data
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              3 COMMON     3     2      1
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     176
                                              3 COMMON     3     3      0
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (3) _lcd_inst                                             3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _fmm_media3                                           2     0      2     908
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _fmm_media2                                           2     0      2     908
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _fmm_media1                                           2     0      2     908
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _fmm_media                                            2     0      2     908
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     908
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _fmm_add3                                            11     9      2    1249
                                              7 COMMON     4     2      2
                                              0 BANK0      7     7      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _fmm_add2                                            11     9      2    1249
                                              7 COMMON     4     2      2
                                              0 BANK0      7     7      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _fmm_add1                                            11     9      2    1249
                                              7 COMMON     4     2      2
                                              0 BANK0      7     7      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _fmm_add                                             11     9      2    1249
                                              7 COMMON     4     2      2
                                              0 BANK0      7     7      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1056
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _analog_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _analog_init
   _fmm_add
     ___awmod
   _fmm_add1
     ___awmod
   _fmm_add2
     ___awmod
   _fmm_add3
     ___awmod
   _fmm_media
     ___aldiv
   _fmm_media1
     ___aldiv
   _fmm_media2
     ___aldiv
   _fmm_media3
     ___aldiv
   _lcd_init
     _lcd_inst
   _lcd_num
     ___awdiv
       ___wmul (ARG)
     ___awmod
     _fmm_media (ARG)
       ___aldiv
     _fmm_media1 (ARG)
       ___aldiv
     _fmm_media2 (ARG)
       ___aldiv
     _fmm_media3 (ARG)
       ___aldiv
     _lcd_data (ARG)
     _lcd_lincol (ARG)
       _lcd_inst
   _lcd_print
     _lcd_data
     _lcd_lincol
       _lcd_inst
   _led_init
   _led_monitorar
     _sensor_alert
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _sensor_danger
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _sensor_init
     ___bmul
   _sensor_readAll
     _ADC_read
     ___bmul
     ___lmul
       _ADC_read (ARG)
       ___bmul (ARG)
   _tecla_decrementar_descida
   _tecla_incrementar_subida
   _teclas_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      90       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      3C       5       75.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      90      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 01 11:19:11 2022

                                 pc 0002            _tecla_incrementar_subida 0C74  
                    ___bmul@product 0072                         __CFG_CP$OFF 0000  
                                l20 0DB5                                  l13 0C2C  
                                l21 0DB5                                  l22 0DBA  
                                l23 0DD8                                  l41 01C8  
                                l17 0DA0                                  l42 01D8  
                                l34 0187                                  l43 01DB  
                                l19 0DA8                                  l36 017D  
                                l52 0EBA                                  l60 0D93  
                                l37 018D                                  l61 0D93  
                                l38 01B3                                  l46 0D60  
                                l70 0594                                  l39 01D2  
                                l71 0589                                  l64 0536  
                                l49 0C3F                                  l73 05B1  
                                l65 057A                                  l74 05B2  
                                l66 054B                                  l58 0D86  
                                l90 0451                                  l75 05C0  
                                l67 0565                                  l59 0D71  
                                l83 0269                                  l91 051E  
                                l76 05C0                                  l68 0566  
                                l92 051E                                  l77 060C  
                                l69 0588                                  l78 060C  
                                l89 0517                        ___awdiv@sign 0021  
                   ??_sensor_danger 007B                                  fsr 0004  
               ___wmul@multiplicand 0072                sensor_init@toleravel 007C  
                     _led_monitorar 0DD9                                 l111 03A2  
                               l104 0304                                 l113 039E  
                               l106 0300                                 l114 03A5  
                               l107 0307                                 l115 03A5  
                               l211 0C87                                 l203 0007  
                               l108 0307                                 l212 0C8E  
                               l213 0C8E                                 l231 0C6C  
                               l232 0C73                                 l233 0C73  
                               l242 0F8E                                 l170 07BE  
                               l251 0CCC                                 l171 07C9  
                               l260 00E9                                 l420 03F5  
                               l500 014B                                 l172 07E6  
                               l421 0420                                 l245 0CAD  
                               l501 0157                                 l173 07E7  
                               l510 0EEC                                 l254 0078  
                               l422 0430                                 l414 03BA  
                               l502 015C                                 l350 0D2D  
                               l174 07E8                                 l511 0EED  
                               l423 0442                                 l415 03CE  
                               l263 0D0A                                 l351 0D32  
                               l175 07E8                                 l167 06A2  
                               l512 0EFE                                 l248 0FFF  
                               l424 044B                                 l416 0431  
                               l192 0DFA                                 l360 0E2B  
                               l168 078C                                 l513 0F0C  
                               l505 0EC8                                 l417 03EF  
                               l257 0CEB                                 l193 0E21  
                               l361 0E49                                 l169 07A5  
                               l514 0F18                                 l506 0ED2  
                               l418 03E1                                 l186 0C1B  
                               l194 0E1A                                 l362 0E64  
                               l515 0F1D                                 l507 0F0D  
                               l419 03F4                                 l195 0E20  
                               l363 0E6D                                 l508 0EE7  
                               l348 0D0E                                 l196 0E21  
                               l372 0C43                                 l509 0EDB  
                               l349 0D18                                 l373 0C4C  
                               l374 0C56                                 l375 0C58  
                               l492 00F9                                 l493 0107  
                               l494 014C                                 l495 011E  
                               l496 0112                                 l497 0123  
                               l498 0124                                 l499 013D  
                      __CFG_CPD$OFF 0000                                 u960 0176  
                               u961 0175                                 u970 017C  
                               u971 017B                                 u955 0164  
                               u980 0199                                 u981 0198  
                               u995 019D                                 fsr0 0004  
                               indf 0000                        ___awmod@sign 0076  
                      __CFG_FOSC$HS 0000                    ??_sensor_readAll 0029  
                      __CFG_LVP$OFF 0000                         lcd_num@size 002D  
                              l1500 0107                                l1430 015E  
                              l1510 011E                                l1502 0109  
                              l1440 0187                                l1432 0161  
                              l1520 0144                                l1512 0124  
                              l1504 010F                                l1600 03A1  
                              l1450 01A9                                l1442 018D  
                              l1434 0170                                l1514 0135  
                              l1506 0112                                l1522 014C  
                              l1602 03A2                                l1530 0D95  
                              l1610 0E31                                l1700 0EFE  
                              l1460 01BB                                l1452 01AA  
                              l1444 0190                                l1436 0176  
                              l1524 0151                                l1516 013B  
                              l1508 0119                                l1604 03A4  
                              l1620 0C41                                l1540 0DB3  
                              l1532 0D97                                l1612 0E49  
                              l1710 0F1D                                l1702 0F05  
                              l1470 01D8                                l1462 01BC  
                              l1454 01AF                                l1446 0199  
                              l1438 017D                                l1526 0157  
                              l1518 013D                                l1550 0D46  
                              l1630 0C56                                l1622 0C43  
                              l1542 0DBA                                l1534 0D9D  
                              l1614 0E52                                l1606 0E22  
                              l1720 0C2A                                l1712 0C1C  
                              l1704 0F0D                                l1640 03BE  
                              l1464 01C1                                l1448 019A  
                              l1456 01B3                                l1528 015C  
                              l1560 0D57                                l1552 0D47  
                              l1480 0D26                                l1472 0D0B  
                              l1632 0C58                                l1624 0C47  
                              l1544 0DD8                                l1536 0DA0  
                              l1616 0E64                                l1608 0E2B  
                              l1800 044F                                l1722 0C2B  
                              l1714 0C20                                l1706 0F12  
                              l1650 03E1                                l1642 03C9  
                              l1634 03A6                                l1466 01C8  
                              l1458 01B4                                l1730 0E7F  
                              l1490 00F1                                l1562 0D5D  
                              l1554 0D4C                                l1546 0D34  
                              l1482 0D2D                                l1474 0D0E  
                              l1570 029E                                l1626 0C4C  
                              l1538 0DA8                                l1618 0E6D  
                              l1802 0451                                l1810 0003  
                              l1716 0C26                                l1708 0F18  
                              l1820 0F8E                                l1812 0F1E  
                              l1660 041E                                l1652 03EF  
                              l1644 03CE                                l1636 03A9  
                              l1468 01D2                                l1740 0E84  
                              l1732 0E80                                l1724 0E6E  
                              l1492 00F6                                l1556 0D4F  
                              l1548 0D37                                l1564 0C2E  
                              l1484 0D32                                l1476 0D12  
                              l1580 0303                                l1572 02CF  
                              l1628 0C4E                                l1804 0512  
                              l1900 0C70                                l1718 0C27  
                              l1814 0F24                                l1830 0FFF  
                              l1822 0F8F                                l1670 0442  
                              l1662 0420                                l1654 03F5  
                              l1646 03D6                                l1638 03AD  
                              l1750 0EA7                                l1742 0E92  
                              l1734 0E81                                l1726 0E7B  
                              l1494 00F9                                l1486 00EA  
                              l1558 0D50                                l1478 0D1F  
                              l1582 0304                                l1574 02E6  
                              l1566 026D                                l1590 033C  
                              l1910 0DFA                                l1806 0517  
                              l1902 0C72                                l1680 0EC5  
                              l1816 0F4C                                l1824 0F95  
                              l1840 0078                                l1832 0008  
                              l1672 044B                                l1664 0429  
                              l1656 03FE                                l1648 03DE  
                              l1744 0E95                                l1736 0E82  
                              l1728 0E7E                                l1496 00FD  
                              l1488 00ED                                l1760 0D81  
                              l1752 0D62                                l1808 0C11  
                              l1584 0306                                l1576 0300  
                              l1568 0276                                l1592 036D  
                              l1912 0E07                                l1904 0DDC  
                              l1920 060D                                l1690 0EDB  
                              l1682 0EC8                                l1674 0EBB  
                              l1818 0F76                                l1826 0FBD  
                              l1834 000E                                l1850 00E9  
                              l1842 0079                                l1658 0410  
                              l1666 0431                                l1746 0E9B  
                              l1738 0E83                                l1498 0102  
                              l1770 0536                                l1762 0D86  
                              l1754 0D66                                l1578 0302  
                              l1594 0384                                l1586 030B  
                              l1914 0E14                                l1906 0DE7  
                              l1930 062B                                l1922 0617  
                              l1692 0EE2                                l1684 0ECC  
                              l1676 0EBC                                l1828 0FE7  
                              l1836 0036                                l1844 007F  
                              l1668 0436                                l1852 0C8F  
                              l1860 0CCD                                l1748 0EA1  
                              l1780 0566                                l1772 0540  
                              l1764 0522                                l1756 0D71  
                              l1596 039E                                l1588 0314  
                              l1908 0DF4                                l1940 06BA  
                              l1932 0647                                l1924 061C  
                              l1694 0EE7                                l1686 0ED2  
                              l1678 0EC0                                l1838 0060  
                              l1846 00A7                                l1854 0CAD  
                              l1862 0CEB                                l1790 05A8  
                              l1782 057A                                l1774 0546  
                              l1766 052B                                l1758 0D7D  
                              l1598 03A0                                l1870 0C7B  
                              l1950 06F2                                l1942 06C6  
                              l1934 0664                                l1926 0621  
                              l1696 0EED                                l1688 0ED8  
                              l1848 00D1                                l1856 0CAE  
                              l1864 0CEC                                l1792 05B2  
                              l1784 0589                                l1776 054B  
                              l1768 0530                                l1872 0C7F  
                              l1880 0C87                                l1960 0755  
                              l1952 0704                                l1944 06D1  
                              l1936 0683                                l1928 0626  
                              l1698 0EF7                                l1858 0CCC  
                              l1866 0D0A                                l1794 05B9  
                              l1786 058F                                l1778 0560  
                              l1890 0C64                                l1882 0C8B  
                              l1874 0C83                                l1970 07AF  
                              l1962 0770                                l1954 0719  
                              l1946 06DC                                l1938 06AD  
                              l1796 05FE                                l1788 0594  
                              l1892 0C68                                l1884 0C8D  
                              l1876 0C85                                l1868 0C74  
                              l1980 07D9                                l1972 07BE  
                              l1956 0721                                l1964 078C  
                              l1948 06E7                                l1798 01DD  
                              l1894 0C6A                                l1886 0C59  
                              l1878 0C86                                l1982 07DF  
                              l1974 07C1                                l1966 0796  
                              l1958 073A                                l1896 0C6B  
                              l1888 0C60                                l1976 07C8  
                              l1968 07A5                                l1898 0C6C  
                              l1978 07C9                                STR_1 0806  
                              u1000 01C1                                u1001 01C0  
                              u1010 01C7                                u1011 01C6  
                              u1100 0122                                u1020 0D12  
                              u1101 0121                                u1021 0D11  
                              u1120 0135                                u1121 0134  
                              u1050 0D2C                                u1210 02E6  
                              u1115 0125                                u1051 0D2B  
                              u1035 0D19                                u1211 02E5  
                              u1140 014A                                u1060 00F1  
                              u1220 02FF                                u1300 0C47  
                              u1141 0149                                u1125 0131  
                              u1061 00F0                                u1205 0C31  
                              u1045 0D20                                u1221 02FE  
                              u1301 0C46                                u1150 0151  
                              u1070 00FD                                u1230 0384  
                              u1310 0C55                                u1151 0150  
                              u1135 013E                                u1071 00FC  
                              u1215 02E2                                u1231 0383  
                              u1311 0C54                                u1400 042F  
                              u1320 03AD                                u1080 010F  
                              u1240 039D                                u1160 0D9D  
                              u1401 042E                                u1321 03AC  
                              u1081 010E                                u1225 02FB  
                              u1241 039C                                u1161 0D9C  
                              u1410 0436                                u1330 03BE  
                              u1170 0DB9                                u1250 0E31  
                              u1411 0435                                u1331 03BD  
                              u1235 0380                                u1171 0DB8  
                              u1251 0E30                                u1500 0F12  
                              u1420 0EC0                                u1340 03DE  
                              u1501 0F11                                u1421 0EBF  
                              u1341 03DD                                u1245 0399  
                              u1261 0E3A                                u1430 0ECC  
                              u1510 0D92                                u1262 0E41  
                              u1431 0ECB                                u1095 0113  
                              u1511 0D91                                u1263 0E48  
                              u1440 0ED8                                u1360 03F3  
                              u1600 060B                                u1520 0527  
                              u1441 0ED7                                u1361 03F2  
                              u1601 060A                                u1521 0525  
                              u1185 0DC2                                u1530 0528  
                              u1290 0E63                                u1610 04F1  
                              u1355 03E3                                u1195 0D3A  
                              u1291 0E62                                u1275 0E4B  
                              u1460 0EEB                                u1380 0410  
                              u1540 0530                                u1620 051D  
                              u1461 0EEA                                u1701 00C3  
                              u1381 040F                                u1605 0607  
                              u1541 052F                                u1285 0E53  
                              u1621 051C                                u1470 0EF7  
                              u1630 0F4C                                u1702 00CA  
                              u1550 0560                                u1710 0C7B  
                              u1471 0EF6                                u1455 0EDC  
                              u1703 00D1                                u1375 03F7  
                              u1551 055F                                u1615 04EC  
                              u1711 0C7A                                u1560 0587  
                              u1720 0C7F                                u1800 0719  
                              u1641 0F68                                u1385 040C  
                              u1561 0586                                u1721 0C7E  
                              u1801 0718                                u1490 0F0B  
                              u1642 0F6F                                u1650 0FBD  
                              u1570 05A8                                u1730 0C60  
                              u1810 0796                                u1491 0F0A  
                              u1475 0EF3                                u1643 0F76  
                              u1635 0F3F                                u1395 0421  
                              u1571 05A7                                u1731 0C5F  
                              u1811 0795                                u1636 0F40  
                              u1580 05B0                                u1740 0C64  
                              u1820 07AF                                u1485 0EFF  
                              u1637 0F45                                u1661 0FD9  
                              u1581 05AF                                u1565 0583  
                              u1741 0C63                                u1821 07AE  
                              u1638 0F46                                u1662 0FE0  
                              u1670 0036                                u1590 05B9  
                              u1750 0DE7                                u1830 07C7  
                              u1639 0F4B                                u1663 0FE7  
                              u1655 0FB0                                u1591 05B8  
                              u1575 05A4                                u1751 0DE6  
                              u1831 07C6                                u1656 0FB1  
                              u1760 0DF4                                u1840 07E5  
                              u1657 0FB6                                u1681 0052  
                              u1761 0DF3                                u1841 07E4  
                              u1658 0FB7                                u1682 0059  
                              u1690 00A7                                u1770 0E07  
                              u1659 0FBC                                u1683 0060  
                              u1675 0029                                u1907 0D49  
                              u1771 0E06                                u1676 002A  
                              u1780 0E14                                u1677 002F  
                              u1917 0D5A                                u1781 0E13  
                              u1678 0030                                u1679 0035  
                              u1695 009A                                u1927 0E74  
                              u1696 009B                                u1697 00A0  
                              u1937 0E8B                                u1698 00A1  
                              u1699 00A6                                u1947 0EB3  
                              u1957 0181                                u1967 0189  
                              u1977 01AC                                u1897 06A8  
                              u1987 01CC                                u1997 01D4  
                      __CFG_WRT$OFF 0000                         main@refresh 004D  
                              _main 060D          ?_tecla_decrementar_descida 0070  
                              btemp 007E                                start 0000  
                  __end_of_ADC_read 0DD9                       __CFG_IESO$OFF 0000  
                      fmm_add@valor 0077                   ___bmul@multiplier 0073  
                      lcd_num@sinal 002E                      ?_led_monitorar 0070  
                   __end_of___aldiv 044C                               ?_main 0070  
                   __end_of___awdiv 015D                       __CFG_WDTE$OFF 0000  
                   __end_of___awmod 0F1E                               _ANSEL 0188  
                   ___awdiv@divisor 0076                     ___awdiv@counter 0020  
                     fmm_add1@valor 0077                       fmm_add2@valor 0077  
                             _PORTD 0008                       fmm_add3@valor 0077  
               ___lmul@multiplicand 0024                        lcd_print@col 0076  
                      lcd_print@lin 007A                      __CFG_FCMEN$OFF 0000  
                      lcd_print@pos 0079                        lcd_print@str 0077  
                   __end_of_fmm_add 0F8F                     __end_of_lcd_num 060D  
                             _canal 0058                               main@i 0051  
                    __CFG_BOREN$OFF 0000                               pclath 000A  
                 ADC_read@Valor_ADC 0076                               status 0003  
                             wtemp0 007E                       lcd_lincol@col 0073  
                     lcd_lincol@lin 0075                __size_of_analog_init 0011  
                    __CFG_MCLRE$OFF 0000                     __initialization 07EB  
                      __end_of_main 07EB                      ADC_read@canais 0078  
                            ??_main 004A                _incrementar_anterior 005B  
                      ?_teclas_init 0070                     _fmm_temp_indice 0056  
                            _ADRESH 001E                              _ADRESL 009E  
                  ___awdiv@dividend 0078                      __CFG_PWRTE$OFF 0000  
                  __end_of_lcd_data 0D61                    __end_of_fmm_add1 1000  
                  __end_of_fmm_add2 0079                    __end_of_fmm_add3 00EA  
                  __end_of_lcd_init 0EBB                    __end_of_lcd_inst 01DC  
                            ___bmul 0C40                    __end_of_led_init 0C1C  
                            ___lmul 0E22                           ??___aldiv 0078  
                            ___wmul 0D0B                           ??___awdiv 007A  
                         ??___awmod 0074                     ??_led_monitorar 007E  
                  ___awdiv@quotient 0022                     ___awmod@divisor 0070  
                            _sensor 00B6                     ___awmod@counter 0075  
                         ??_fmm_add 0020                           ??_lcd_num 007B  
                      ?_sensor_init 0074                           ?_ADC_read 0070  
           __end_of__initialization 07FC          ??_tecla_incrementar_subida 0070  
               ___bmul@multiplicand 0070                      __pcstackCOMMON 0070  
                        ??_ADC_read 0072                  __size_of_lcd_print 0033  
                __size_of_fmm_media 001F                          __pbssBANK0 0052  
                        __pbssBANK1 00A0         ??_tecla_decrementar_descida 0070  
                        __pmaintext 060D                             ?___bmul 0070  
                           ?___lmul 0020                             ?___wmul 0070  
                    ___lmul@product 007A                    sensor_danger@max 0026  
                  sensor_danger@min 0024                    sensor_danger@ptr 0028  
             __end_of_sensor_danger 03A6                          _lcd_lincol 0C2D  
                         ?_lcd_data 0070                          _fmm_media1 0CAE  
                        _fmm_media2 0CCD                          _fmm_media3 0CEC  
              __size_of_teclas_init 0005                           ?_fmm_add1 0077  
                         ?_fmm_add2 0077                           ?_fmm_add3 0077  
                         ?_lcd_init 0070                           ?_lcd_inst 0070  
                         ?_led_init 0070                          __stringtab 0800  
                           ___aldiv 03A6                     __size_of___bmul 0019  
                 __end_of_lcd_print 0D94                             ___awdiv 00EA  
                   __size_of___lmul 004C                             ___awmod 0EBB  
                 __end_of_fmm_media 0CAE                     __size_of___wmul 0028  
         _tecla_decrementar_descida 0C59                             __ptext1 0003  
                           __ptext2 0C74                             __ptext3 0C59  
                           __ptext4 044C                             __ptext5 0E22  
                           __ptext6 0D94                             __ptext7 01DC  
                           __ptext8 0C40                             __ptext9 0DD9  
                           _fmm_add 0F1E                             _lcd_num 051F  
                  ___awmod@dividend 0072                    ___aldiv@dividend 0074  
              __size_of_sensor_init 008E                          ??_lcd_data 0070  
                           clrloop0 0C0A                          ??_fmm_add1 0020  
                        ??_fmm_add2 0020                          ??_fmm_add3 0020  
                        ??_lcd_init 0073                          ??_lcd_inst 0070  
                        ??_led_init 0070                end_of_initialization 07FC  
                     ?_sensor_alert 0070                       ??_analog_init 0070  
  __end_of_tecla_incrementar_subida 0C8F             __size_of_sensor_readAll 00D3  
                  ___aldiv@quotient 0022                           _PORTBbits 0006  
                         _PORTCbits 0007                           _PORTDbits 0008  
                         _TRISBbits 0086                           _TRISCbits 0087  
                       ?_lcd_lincol 0073                           _TRISDbits 0088  
                  led_monitorar@ptr 0029                         ?_fmm_media1 0026  
                       ?_fmm_media2 0026                         ?_fmm_media3 0026  
                    ??_sensor_alert 007B                   __size_of_ADC_read 0045  
                        lcd_num@col 0028                          lcd_num@div 002F  
                        lcd_num@lin 002C                          lcd_num@tam 002B  
                        lcd_num@num 0029                 __end_of_analog_init 0C2D  
                    __end_of___bmul 0C59                      __end_of___lmul 0E6E  
                    __end_of___wmul 0D33               __end_of_led_monitorar 0E22  
               start_initialization 07EB                         _ADC_read$99 0074  
                          ??___bmul 0071                 __size_of_lcd_lincol 0013  
                          ??___lmul 0079                            ??___wmul 0074  
               __size_of_fmm_media1 001F                 __size_of_fmm_media2 001F  
               __size_of_fmm_media3 001F   __size_of_tecla_incrementar_subida 001B  
         ?_tecla_incrementar_subida 0070                           ___latbits 0002  
                     __pcstackBANK0 0020  __size_of_tecla_decrementar_descida 001B  
                 __size_of_lcd_data 002E                   __size_of_fmm_add1 0071  
                 __size_of_fmm_add2 0071                   __size_of_fmm_add3 0071  
                 __size_of_lcd_init 004D                   __size_of_lcd_inst 007F  
                 __size_of_led_init 000B                         _analog_init 0C1C  
                    _sensor_readAll 044C                            ?___aldiv 0070  
                          ?___awdiv 0076                            ?___awmod 0070  
              __end_of_sensor_alert 0308                     sensor_alert@max 0026  
                   sensor_alert@min 0024                     sensor_alert@ptr 0028  
                         __pstrings 0800                           _lcd_print 0D61  
                         _fmm_media 0C8F                            ?_fmm_add 0077  
                          ?_lcd_num 0028                       ??_teclas_init 0070  
                          _ADC_read 0D94   __end_of_tecla_decrementar_descida 0C74  
                   ___aldiv@divisor 0070                     sensor_init@alvo 0079  
            __end_of_sensor_readAll 051F                     ___aldiv@counter 0020  
                   sensor_readAll@i 0049                     sensor_readAll@n 0028  
                   sensor_init@tmax 0077                     sensor_init@tmin 0075  
                    ___wmul@product 0074                           clear_ram0 0C09  
            __size_of_sensor_danger 009E                           lcd_data@d 0072  
                        ?_lcd_print 0076                          _ADCON0bits 001F  
                       __stringbase 0805                          _ADCON1bits 009F  
                 ___wmul@multiplier 0070                          ?_fmm_media 0026  
                     ??_sensor_init 0020                           fmm_add1@i 0079  
                         fmm_add2@i 0079                           fmm_add3@i 0079  
                         lcd_inst@i 0072                        ??_lcd_lincol 0074  
                      ??_fmm_media1 0079                        ??_fmm_media2 0079  
                      ??_fmm_media3 0079                   ___lmul@multiplier 0020  
               __end_of_teclas_init 0008                     ?_sensor_readAll 0028  
                __end_of_lcd_lincol 0C40                    __size_of___aldiv 00A6  
                  __size_of___awdiv 0073                    __size_of___awmod 0063  
                __end_of_fmm_media1 0CCD                  __end_of_fmm_media2 0CEC  
                __end_of_fmm_media3 0D0B                  __end_of__stringtab 0806  
                          _acc_temp 0052                       _sensor_danger 0308  
                  __size_of_fmm_add 0071                    __size_of_lcd_num 00EE  
              _decrementar_anterior 005A                            __ptext10 0308  
                          __ptext11 026A                            __ptext20 015D  
                          __ptext12 0D0B                            __ptext21 0CEC  
                          __ptext13 0C11                            __ptext30 0EBB  
                          __ptext22 0CCD                            __ptext14 0D61  
                          __ptext31 0C1C                            __ptext23 0CAE  
                          __ptext15 051F                            __ptext24 0C8F  
                          __ptext16 0C2D                            __ptext25 03A6  
                          __ptext17 0D33                            __ptext26 0079  
                          __ptext18 00EA                            __ptext27 0008  
                          __ptext19 0E6E                            __ptext28 0F8F  
                          __ptext29 0F1E                   __CFG_BOR4V$BOR40V 0000  
               __end_of_sensor_init 026A                            _lcd_data 0D33  
                          _fmm_add1 0F8F                            _fmm_add2 0008  
                          _fmm_add3 0079                            _lcd_init 0E6E  
                          _lcd_inst 015D                            _led_init 0C11  
                          _fmm_temp 00A0                       __size_of_main 01DE  
                    sensor_init@ptr 007D               __size_of_sensor_alert 009E  
                 sensor_readAll@ptr 0048                            fmm_add@i 0079  
                       ??_lcd_print 0078                         ??_fmm_media 0079  
                    ?_sensor_danger 0070                         _teclas_init 0003  
              sensor_init@aceitavel 007B                        _sensor_alert 026A  
                      ?_analog_init 0070              __size_of_led_monitorar 0049  
                         stringcode 0800                       sensor_init@ch 0074  
                       _sensor_init 01DC                            stringdir 0800  
                          stringtab 0800                        ___aldiv@sign 0021  
