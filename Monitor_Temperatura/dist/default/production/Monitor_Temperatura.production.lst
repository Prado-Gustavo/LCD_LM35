

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu May 26 10:10:16 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,___bmul
  1180                           	FNCALL	_main,_analog_init
  1181                           	FNCALL	_main,_lcd_init
  1182                           	FNCALL	_main,_lcd_num
  1183                           	FNCALL	_main,_lcd_print
  1184                           	FNCALL	_main,_led_init
  1185                           	FNCALL	_main,_led_monitorar
  1186                           	FNCALL	_main,_sensor_init
  1187                           	FNCALL	_main,_sensor_readAll
  1188                           	FNCALL	_main,_tecla_decrementar_descida
  1189                           	FNCALL	_main,_tecla_incrementar_subida
  1190                           	FNCALL	_main,_teclas_init
  1191                           	FNCALL	_sensor_readAll,_ADC_read
  1192                           	FNCALL	_sensor_readAll,___bmul
  1193                           	FNCALL	_sensor_readAll,___lmul
  1194                           	FNCALL	_sensor_init,___bmul
  1195                           	FNCALL	_led_monitorar,_sensor_alert
  1196                           	FNCALL	_led_monitorar,_sensor_danger
  1197                           	FNCALL	_sensor_danger,___awdiv
  1198                           	FNCALL	_sensor_danger,___wmul
  1199                           	FNCALL	_sensor_alert,___awdiv
  1200                           	FNCALL	_sensor_alert,___wmul
  1201                           	FNCALL	_lcd_print,_lcd_data
  1202                           	FNCALL	_lcd_print,_lcd_lincol
  1203                           	FNCALL	_lcd_num,___awdiv
  1204                           	FNCALL	_lcd_num,___awmod
  1205                           	FNCALL	_lcd_num,_lcd_data
  1206                           	FNCALL	_lcd_num,_lcd_lincol
  1207                           	FNCALL	_lcd_lincol,_lcd_inst
  1208                           	FNCALL	_lcd_init,_lcd_inst
  1209                           	FNROOT	_main
  1210                           	global	_canal
  1211                           	global	_decrementar_anterior
  1212                           	global	_incrementar_anterior
  1213                           	global	_sensor
  1214                           	global	_PORTCbits
  1215                           _PORTCbits	set	0x7
  1216  0007                     	global	_PORTD
  1217                           _PORTD	set	0x8
  1218  0008                     	global	_PORTDbits
  1219                           _PORTDbits	set	0x8
  1220  0008                     	global	_ADRESH
  1221                           _ADRESH	set	0x1E
  1222  001E                     	global	_ADCON0bits
  1223                           _ADCON0bits	set	0x1F
  1224  001F                     	global	_TRISCbits
  1225                           _TRISCbits	set	0x87
  1226  0087                     	global	_TRISDbits
  1227                           _TRISDbits	set	0x88
  1228  0088                     	global	_ADRESL
  1229                           _ADRESL	set	0x9E
  1230  009E                     	global	_ADCON1bits
  1231                           _ADCON1bits	set	0x9F
  1232  009F                     	global	_ANSEL
  1233                           _ANSEL	set	0x188
  1234  0188                     psect	strings,class=STRING,delta=2,noexec
  1235                           global __pstrings
  1236                           __pstrings:
  1237  0800                     stringtab:
  1238  0800                     	global    __stringtab
  1239                           __stringtab:
  1240  0800                     ;	String table - string pointers are 1 byte each
  1241                           stringcode:stringdir:
  1242  0800                     movlw high(stringdir)
      + 0800                     stringdir:	
  1243  0800  3008               movwf pclath
  1244  0801  008A               movf fsr,w
  1245  0802  0804               incf fsr
  1246  0803  0A84               	addwf pc
  1247  0804  0782               	global __stringbase
  1248                           __stringbase:
  1249  0805                     	retlw	0
  1250  0805  3400               psect	strings
  1251                           	global    __end_of__stringtab
  1252                           __end_of__stringtab:
  1253  0806                     	
  1254                           STR_1:	
  1255  0806                     	retlw	84	;'T'
  1256  0806  3454               	retlw	101	;'e'
  1257  0807  3465               	retlw	109	;'m'
  1258  0808  346D               	retlw	112	;'p'
  1259  0809  3470               	retlw	46	;'.'
  1260  080A  342E               	retlw	32	;' '
  1261  080B  3420               	retlw	83	;'S'
  1262  080C  3453               	retlw	101	;'e'
  1263  080D  3465               	retlw	110	;'n'
  1264  080E  346E               	retlw	115	;'s'
  1265  080F  3473               	retlw	111	;'o'
  1266  0810  346F               	retlw	114	;'r'
  1267  0811  3472               	retlw	58	;':'
  1268  0812  343A               	retlw	32	;' '
  1269  0813  3420               	retlw	32	;' '
  1270  0814  3420               	retlw	32	;' '
  1271  0815  3420               	retlw	0
  1272  0816  3400               psect	strings
  1273                           ; #config settings
  1274                           global __CFG_FOSC$HS
  1275                           __CFG_FOSC$HS equ 0x0
  1276  0000                     global __CFG_WDTE$OFF
  1277                           __CFG_WDTE$OFF equ 0x0
  1278  0000                     global __CFG_PWRTE$OFF
  1279                           __CFG_PWRTE$OFF equ 0x0
  1280  0000                     global __CFG_MCLRE$OFF
  1281                           __CFG_MCLRE$OFF equ 0x0
  1282  0000                     global __CFG_CP$OFF
  1283                           __CFG_CP$OFF equ 0x0
  1284  0000                     global __CFG_CPD$OFF
  1285                           __CFG_CPD$OFF equ 0x0
  1286  0000                     global __CFG_BOREN$OFF
  1287                           __CFG_BOREN$OFF equ 0x0
  1288  0000                     global __CFG_IESO$OFF
  1289                           __CFG_IESO$OFF equ 0x0
  1290  0000                     global __CFG_FCMEN$OFF
  1291                           __CFG_FCMEN$OFF equ 0x0
  1292  0000                     global __CFG_LVP$OFF
  1293                           __CFG_LVP$OFF equ 0x0
  1294  0000                     global __CFG_BOR4V$BOR40V
  1295                           __CFG_BOR4V$BOR40V equ 0x0
  1296  0000                     global __CFG_WRT$OFF
  1297                           __CFG_WRT$OFF equ 0x0
  1298  0000                     	file	"C:\Users\21193444\AppData\Local\Temp\s7mo."
  1299                           	line	#
  1300                           psect cinit,class=CODE,delta=2
  1301                           global start_initialization
  1302                           start_initialization:
  1303  07ED                     
  1304                           global __initialization
  1305                           __initialization:
  1306  07ED                     psect	bssBANK0,class=BANK0,space=1,noexec
  1307                           global __pbssBANK0
  1308                           __pbssBANK0:
  1309  004E                     _canal:
  1310  004E                            ds      2
  1311  004E                     
  1312                           _decrementar_anterior:
  1313  0050                            ds      1
  1314  0050                     
  1315                           _incrementar_anterior:
  1316  0051                            ds      1
  1317  0051                     
  1318                           psect	bssBANK1,class=BANK1,space=1,noexec
  1319                           global __pbssBANK1
  1320                           __pbssBANK1:
  1321  00A0                     _sensor:
  1322  00A0                            ds      48
  1323  00A0                     
  1324                           	file	"C:\Users\21193444\AppData\Local\Temp\s7mo."
  1325                           	line	#
  1326                           psect clrtext,class=CODE,delta=2
  1327                           global clear_ram0
  1328                           ;	Called with FSR containing the base address, and
  1329                           ;	W with the last address+1
  1330                           clear_ram0:
  1331  0003                     	clrwdt			;clear the watchdog before getting into this loop
  1332  0003  0064               clrloop0:
  1333  0004                     	clrf	indf		;clear RAM location pointed to by FSR
  1334  0004  0180               	incf	fsr,f		;increment pointer
  1335  0005  0A84               	xorwf	fsr,w		;XOR with final address
  1336  0006  0604               	btfsc	status,2	;have we reached the end yet?
  1337  0007  1903               	retlw	0		;all done for this memory range, return
  1338  0008  3400               	xorwf	fsr,w		;XOR again to restore value
  1339  0009  0604               	goto	clrloop0		;do the next byte
  1340  000A  2804               
  1341                           ; Clear objects allocated to BANK0
  1342                           psect cinit,class=CODE,delta=2,merge=1
  1343                           	bcf	status, 5	;RP0=0, select bank0
  1344  07ED  1283               	bcf	status, 6	;RP1=0, select bank0
  1345  07EE  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1346  07EF  01CE               	clrf	((__pbssBANK0)+1)&07Fh
  1347  07F0  01CF               	clrf	((__pbssBANK0)+2)&07Fh
  1348  07F1  01D0               	clrf	((__pbssBANK0)+3)&07Fh
  1349  07F2  01D1               ; Clear objects allocated to BANK1
  1350                           psect cinit,class=CODE,delta=2,merge=1
  1351                           	bcf	status, 7	;select IRP bank0
  1352  07F3  1383               	movlw	low(__pbssBANK1)
  1353  07F4  30A0               	movwf	fsr
  1354  07F5  0084               	movlw	low((__pbssBANK1)+030h)
  1355  07F6  30D0               	fcall	clear_ram0
  1356  07F7  120A  118A  2003  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1357                           global end_of_initialization,__end_of__initialization
  1358                           
  1359                           ;End of C runtime variable initialization code
  1360                           
  1361                           end_of_initialization:
  1362  07FC                     __end_of__initialization:
  1363  07FC                     clrf status
  1364  07FC  0183               ljmp _main	;jump to C main() function
  1365  07FD  120A  118A  2EA7   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1366                           global __pcstackCOMMON
  1367                           __pcstackCOMMON:
  1368  0070                     ?_led_init:	; 1 bytes @ 0x0
  1369  0070                     ??_led_init:	; 1 bytes @ 0x0
  1370  0070                     ?_teclas_init:	; 1 bytes @ 0x0
  1371  0070                     ??_teclas_init:	; 1 bytes @ 0x0
  1372  0070                     ?_tecla_incrementar_subida:	; 1 bytes @ 0x0
  1373  0070                     ??_tecla_incrementar_subida:	; 1 bytes @ 0x0
  1374  0070                     ?_tecla_decrementar_descida:	; 1 bytes @ 0x0
  1375  0070                     ??_tecla_decrementar_descida:	; 1 bytes @ 0x0
  1376  0070                     ?_led_monitorar:	; 1 bytes @ 0x0
  1377  0070                     ?_analog_init:	; 1 bytes @ 0x0
  1378  0070                     ??_analog_init:	; 1 bytes @ 0x0
  1379  0070                     ?_lcd_inst:	; 1 bytes @ 0x0
  1380  0070                     ??_lcd_inst:	; 1 bytes @ 0x0
  1381  0070                     ?_lcd_data:	; 1 bytes @ 0x0
  1382  0070                     ??_lcd_data:	; 1 bytes @ 0x0
  1383  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1384  0070                     ?_sensor_alert:	; 1 bytes @ 0x0
  1385  0070                     ?_sensor_danger:	; 1 bytes @ 0x0
  1386  0070                     ?_main:	; 1 bytes @ 0x0
  1387  0070                     ?___bmul:	; 1 bytes @ 0x0
  1388  0070                     	global	?_ADC_read
  1389                           ?_ADC_read:	; 2 bytes @ 0x0
  1390  0070                     	global	?___wmul
  1391                           ?___wmul:	; 2 bytes @ 0x0
  1392  0070                     	global	?___awmod
  1393                           ?___awmod:	; 2 bytes @ 0x0
  1394  0070                     	global	___bmul@multiplicand
  1395                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  1396  0070                     	global	___wmul@multiplier
  1397                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1398  0070                     	global	___awmod@divisor
  1399                           ___awmod@divisor:	; 2 bytes @ 0x0
  1400  0070                     	ds	1
  1401  0070                     ??___bmul:	; 1 bytes @ 0x1
  1402  0071                     	ds	1
  1403  0071                     ??_ADC_read:	; 1 bytes @ 0x2
  1404  0072                     	global	lcd_inst@i
  1405                           lcd_inst@i:	; 1 bytes @ 0x2
  1406  0072                     	global	lcd_data@d
  1407                           lcd_data@d:	; 1 bytes @ 0x2
  1408  0072                     	global	___bmul@product
  1409                           ___bmul@product:	; 1 bytes @ 0x2
  1410  0072                     	global	___wmul@multiplicand
  1411                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1412  0072                     	global	___awmod@dividend
  1413                           ___awmod@dividend:	; 2 bytes @ 0x2
  1414  0072                     	ds	1
  1415  0072                     ?_lcd_lincol:	; 1 bytes @ 0x3
  1416  0073                     ??_lcd_init:	; 1 bytes @ 0x3
  1417  0073                     	global	lcd_lincol@col
  1418                           lcd_lincol@col:	; 1 bytes @ 0x3
  1419  0073                     	global	___bmul@multiplier
  1420                           ___bmul@multiplier:	; 1 bytes @ 0x3
  1421  0073                     	ds	1
  1422  0073                     ??_lcd_lincol:	; 1 bytes @ 0x4
  1423  0074                     ?_sensor_init:	; 1 bytes @ 0x4
  1424  0074                     ??___wmul:	; 1 bytes @ 0x4
  1425  0074                     ??___awmod:	; 1 bytes @ 0x4
  1426  0074                     	global	sensor_init@ch
  1427                           sensor_init@ch:	; 1 bytes @ 0x4
  1428  0074                     	global	_ADC_read$99
  1429                           _ADC_read$99:	; 2 bytes @ 0x4
  1430  0074                     	global	___wmul@product
  1431                           ___wmul@product:	; 2 bytes @ 0x4
  1432  0074                     	ds	1
  1433  0074                     	global	lcd_lincol@lin
  1434                           lcd_lincol@lin:	; 1 bytes @ 0x5
  1435  0075                     	global	___awmod@counter
  1436                           ___awmod@counter:	; 1 bytes @ 0x5
  1437  0075                     	global	sensor_init@tmin
  1438                           sensor_init@tmin:	; 2 bytes @ 0x5
  1439  0075                     	ds	1
  1440  0075                     ?_lcd_print:	; 1 bytes @ 0x6
  1441  0076                     	global	?___awdiv
  1442                           ?___awdiv:	; 2 bytes @ 0x6
  1443  0076                     	global	lcd_print@col
  1444                           lcd_print@col:	; 1 bytes @ 0x6
  1445  0076                     	global	___awmod@sign
  1446                           ___awmod@sign:	; 1 bytes @ 0x6
  1447  0076                     	global	ADC_read@Valor_ADC
  1448                           ADC_read@Valor_ADC:	; 2 bytes @ 0x6
  1449  0076                     	global	___awdiv@divisor
  1450                           ___awdiv@divisor:	; 2 bytes @ 0x6
  1451  0076                     	ds	1
  1452  0076                     	global	lcd_print@str
  1453                           lcd_print@str:	; 1 bytes @ 0x7
  1454  0077                     	global	sensor_init@tmax
  1455                           sensor_init@tmax:	; 2 bytes @ 0x7
  1456  0077                     	ds	1
  1457  0077                     ??_lcd_print:	; 1 bytes @ 0x8
  1458  0078                     	global	ADC_read@canais
  1459                           ADC_read@canais:	; 1 bytes @ 0x8
  1460  0078                     	global	___awdiv@dividend
  1461                           ___awdiv@dividend:	; 2 bytes @ 0x8
  1462  0078                     	ds	1
  1463  0078                     ??___lmul:	; 1 bytes @ 0x9
  1464  0079                     	global	lcd_print@pos
  1465                           lcd_print@pos:	; 1 bytes @ 0x9
  1466  0079                     	global	sensor_init@alvo
  1467                           sensor_init@alvo:	; 2 bytes @ 0x9
  1468  0079                     	ds	1
  1469  0079                     ??___awdiv:	; 1 bytes @ 0xA
  1470  007A                     	global	lcd_print@lin
  1471                           lcd_print@lin:	; 1 bytes @ 0xA
  1472  007A                     	global	___lmul@product
  1473                           ___lmul@product:	; 4 bytes @ 0xA
  1474  007A                     	ds	1
  1475  007A                     ??_lcd_num:	; 1 bytes @ 0xB
  1476  007B                     ??_sensor_alert:	; 1 bytes @ 0xB
  1477  007B                     ??_sensor_danger:	; 1 bytes @ 0xB
  1478  007B                     	global	sensor_init@aceitavel
  1479                           sensor_init@aceitavel:	; 1 bytes @ 0xB
  1480  007B                     	ds	1
  1481  007B                     	global	sensor_init@toleravel
  1482                           sensor_init@toleravel:	; 1 bytes @ 0xC
  1483  007C                     	ds	1
  1484  007C                     	global	sensor_init@ptr
  1485                           sensor_init@ptr:	; 1 bytes @ 0xD
  1486  007D                     	ds	1
  1487  007D                     ??_led_monitorar:	; 1 bytes @ 0xE
  1488  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1489                           global __pcstackBANK0
  1490                           __pcstackBANK0:
  1491  0020                     ??_sensor_init:	; 1 bytes @ 0x0
  1492  0020                     	global	?___lmul
  1493                           ?___lmul:	; 4 bytes @ 0x0
  1494  0020                     	global	___awdiv@counter
  1495                           ___awdiv@counter:	; 1 bytes @ 0x0
  1496  0020                     	global	___lmul@multiplier
  1497                           ___lmul@multiplier:	; 4 bytes @ 0x0
  1498  0020                     	ds	1
  1499  0020                     	global	___awdiv@sign
  1500                           ___awdiv@sign:	; 1 bytes @ 0x1
  1501  0021                     	ds	1
  1502  0021                     	global	___awdiv@quotient
  1503                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1504  0022                     	ds	2
  1505  0022                     ?_lcd_num:	; 1 bytes @ 0x4
  1506  0024                     	global	lcd_num@col
  1507                           lcd_num@col:	; 1 bytes @ 0x4
  1508  0024                     	global	sensor_alert@min
  1509                           sensor_alert@min:	; 2 bytes @ 0x4
  1510  0024                     	global	sensor_danger@min
  1511                           sensor_danger@min:	; 2 bytes @ 0x4
  1512  0024                     	global	___lmul@multiplicand
  1513                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  1514  0024                     	ds	1
  1515  0024                     	global	lcd_num@num
  1516                           lcd_num@num:	; 2 bytes @ 0x5
  1517  0025                     	ds	1
  1518  0025                     	global	sensor_alert@max
  1519                           sensor_alert@max:	; 2 bytes @ 0x6
  1520  0026                     	global	sensor_danger@max
  1521                           sensor_danger@max:	; 2 bytes @ 0x6
  1522  0026                     	ds	1
  1523  0026                     	global	lcd_num@tam
  1524                           lcd_num@tam:	; 1 bytes @ 0x7
  1525  0027                     	ds	1
  1526  0027                     ?_sensor_readAll:	; 1 bytes @ 0x8
  1527  0028                     	global	lcd_num@lin
  1528                           lcd_num@lin:	; 1 bytes @ 0x8
  1529  0028                     	global	sensor_readAll@n
  1530                           sensor_readAll@n:	; 1 bytes @ 0x8
  1531  0028                     	global	sensor_alert@ptr
  1532                           sensor_alert@ptr:	; 1 bytes @ 0x8
  1533  0028                     	global	sensor_danger@ptr
  1534                           sensor_danger@ptr:	; 1 bytes @ 0x8
  1535  0028                     	ds	1
  1536  0028                     ??_sensor_readAll:	; 1 bytes @ 0x9
  1537  0029                     	global	lcd_num@size
  1538                           lcd_num@size:	; 1 bytes @ 0x9
  1539  0029                     	global	led_monitorar@ptr
  1540                           led_monitorar@ptr:	; 1 bytes @ 0x9
  1541  0029                     	ds	1
  1542  0029                     	global	lcd_num@sinal
  1543                           lcd_num@sinal:	; 1 bytes @ 0xA
  1544  002A                     	ds	1
  1545  002A                     	global	lcd_num@div
  1546                           lcd_num@div:	; 2 bytes @ 0xB
  1547  002B                     	ds	29
  1548  002B                     	global	sensor_readAll@ptr
  1549                           sensor_readAll@ptr:	; 1 bytes @ 0x28
  1550  0048                     	ds	1
  1551  0048                     	global	sensor_readAll@i
  1552                           sensor_readAll@i:	; 1 bytes @ 0x29
  1553  0049                     	ds	1
  1554  0049                     ??_main:	; 1 bytes @ 0x2A
  1555  004A                     	ds	3
  1556  004A                     	global	main@i
  1557                           main@i:	; 1 bytes @ 0x2D
  1558  004D                     	ds	1
  1559  004D                     ;!
  1560                           ;!Data Sizes:
  1561                           ;!    Strings     17
  1562                           ;!    Constant    0
  1563                           ;!    Data        0
  1564                           ;!    BSS         52
  1565                           ;!    Persistent  0
  1566                           ;!    Stack       0
  1567                           ;!
  1568                           ;!Auto Spaces:
  1569                           ;!    Space          Size  Autos    Used
  1570                           ;!    COMMON           14     14      14
  1571                           ;!    BANK0            80     46      50
  1572                           ;!    BANK1            80      0      48
  1573                           ;!    BANK3            96      0       0
  1574                           ;!    BANK2            96      0       0
  1575                           
  1576                           ;!
  1577                           ;!Pointer List with Targets:
  1578                           ;!
  1579                           ;!    main$1120	PTR struct sensor_t size(1) Largest target is 48
  1580                           ;!		 -> sensor(BANK1[48]), 
  1581                           ;!
  1582                           ;!    led_monitorar@ptr	PTR struct sensor_t size(1) Largest target is 48
  1583                           ;!		 -> sensor(BANK1[48]), 
  1584                           ;!
  1585                           ;!    sensor_danger@ptr	PTR struct sensor_t size(1) Largest target is 48
  1586                           ;!		 -> sensor(BANK1[48]), 
  1587                           ;!
  1588                           ;!    sensor_alert@ptr	PTR struct sensor_t size(1) Largest target is 48
  1589                           ;!		 -> sensor(BANK1[48]), 
  1590                           ;!
  1591                           ;!    sensor_readAll@ptr	PTR struct sensor_t size(1) Largest target is 48
  1592                           ;!		 -> sensor(BANK1[48]), 
  1593                           ;!
  1594                           ;!    sensor_init@ptr	PTR struct sensor_t size(1) Largest target is 48
  1595                           ;!		 -> sensor(BANK1[48]), 
  1596                           ;!
  1597                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  1598                           ;!		 -> STR_1(CODE[17]), 
  1599                           ;!
  1600                           
  1601                           
  1602                           ;!
  1603                           ;!Critical Paths under _main in COMMON
  1604                           ;!
  1605                           ;!    _main->_lcd_num
  1606                           ;!    _main->_sensor_init
  1607                           ;!    _sensor_readAll->___lmul
  1608                           ;!    ___lmul->_ADC_read
  1609                           ;!    _sensor_init->___bmul
  1610                           ;!    _led_monitorar->_sensor_alert
  1611                           ;!    _led_monitorar->_sensor_danger
  1612                           ;!    _sensor_danger->___awdiv
  1613                           ;!    _sensor_alert->___awdiv
  1614                           ;!    _lcd_print->_lcd_lincol
  1615                           ;!    _lcd_num->___awdiv
  1616                           ;!    _lcd_lincol->_lcd_inst
  1617                           ;!    ___awdiv->___wmul
  1618                           ;!    _lcd_init->_lcd_inst
  1619                           ;!
  1620                           ;!Critical Paths under _main in BANK0
  1621                           ;!
  1622                           ;!    _main->_sensor_readAll
  1623                           ;!    _sensor_readAll->___lmul
  1624                           ;!    _led_monitorar->_sensor_alert
  1625                           ;!    _led_monitorar->_sensor_danger
  1626                           ;!    _sensor_danger->___awdiv
  1627                           ;!    _sensor_alert->___awdiv
  1628                           ;!    _lcd_num->___awdiv
  1629                           ;!
  1630                           ;!Critical Paths under _main in BANK1
  1631                           ;!
  1632                           ;!    None.
  1633                           ;!
  1634                           ;!Critical Paths under _main in BANK3
  1635                           ;!
  1636                           ;!    None.
  1637                           ;!
  1638                           ;!Critical Paths under _main in BANK2
  1639                           ;!
  1640                           ;!    None.
  1641                           
  1642 ;;
  1643 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1644 ;;
  1645                           
  1646                           ;!
  1647                           ;!Call Graph Tables:
  1648                           ;!
  1649                           ;! ---------------------------------------------------------------------------------
  1650                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1651                           ;! ---------------------------------------------------------------------------------
  1652                           ;! (0) _main                                                 4     4      0   17265
  1653                           ;!                                             42 BANK0      4     4      0
  1654                           ;!                             ___bmul
  1655                           ;!                        _analog_init
  1656                           ;!                           _lcd_init
  1657                           ;!                            _lcd_num
  1658                           ;!                          _lcd_print
  1659                           ;!                           _led_init
  1660                           ;!                      _led_monitorar
  1661                           ;!                        _sensor_init
  1662                           ;!                     _sensor_readAll
  1663                           ;!          _tecla_decrementar_descida
  1664                           ;!           _tecla_incrementar_subida
  1665                           ;!                        _teclas_init
  1666                           ;! ---------------------------------------------------------------------------------
  1667                           ;! (1) _teclas_init                                          0     0      0       0
  1668                           ;! ---------------------------------------------------------------------------------
  1669                           ;! (1) _tecla_incrementar_subida                             0     0      0       0
  1670                           ;! ---------------------------------------------------------------------------------
  1671                           ;! (1) _tecla_decrementar_descida                            0     0      0       0
  1672                           ;! ---------------------------------------------------------------------------------
  1673                           ;! (1) _sensor_readAll                                      34    33      1    1696
  1674                           ;!                                              8 BANK0     34    33      1
  1675                           ;!                           _ADC_read
  1676                           ;!                             ___bmul
  1677                           ;!                             ___lmul
  1678                           ;! ---------------------------------------------------------------------------------
  1679                           ;! (2) ___lmul                                              13     5      8     396
  1680                           ;!                                              9 COMMON     5     5      0
  1681                           ;!                                              0 BANK0      8     0      8
  1682                           ;!                           _ADC_read (ARG)
  1683                           ;!                             ___bmul (ARG)
  1684                           ;! ---------------------------------------------------------------------------------
  1685                           ;! (2) _ADC_read                                             9     7      2      94
  1686                           ;!                                              0 COMMON     9     7      2
  1687                           ;! ---------------------------------------------------------------------------------
  1688                           ;! (1) _sensor_init                                         14     5      9    3183
  1689                           ;!                                              4 COMMON    10     1      9
  1690                           ;!                                              0 BANK0      4     4      0
  1691                           ;!                             ___bmul
  1692                           ;! ---------------------------------------------------------------------------------
  1693                           ;! (2) ___bmul                                               4     3      1     831
  1694                           ;!                                              0 COMMON     4     3      1
  1695                           ;! ---------------------------------------------------------------------------------
  1696                           ;! (1) _led_monitorar                                        1     1      0    7345
  1697                           ;!                                              9 BANK0      1     1      0
  1698                           ;!                       _sensor_alert
  1699                           ;!                      _sensor_danger
  1700                           ;! ---------------------------------------------------------------------------------
  1701                           ;! (2) _sensor_danger                                        8     8      0    3612
  1702                           ;!                                             11 COMMON     3     3      0
  1703                           ;!                                              4 BANK0      5     5      0
  1704                           ;!                            ___awdiv
  1705                           ;!                             ___wmul
  1706                           ;! ---------------------------------------------------------------------------------
  1707                           ;! (2) _sensor_alert                                         8     8      0    3612
  1708                           ;!                                             11 COMMON     3     3      0
  1709                           ;!                                              4 BANK0      5     5      0
  1710                           ;!                            ___awdiv
  1711                           ;!                             ___wmul
  1712                           ;! ---------------------------------------------------------------------------------
  1713                           ;! (3) ___wmul                                               6     2      4    1806
  1714                           ;!                                              0 COMMON     6     2      4
  1715                           ;! ---------------------------------------------------------------------------------
  1716                           ;! (1) _led_init                                             0     0      0       0
  1717                           ;! ---------------------------------------------------------------------------------
  1718                           ;! (1) _lcd_print                                            5     3      2     681
  1719                           ;!                                              6 COMMON     5     3      2
  1720                           ;!                           _lcd_data
  1721                           ;!                         _lcd_lincol
  1722                           ;! ---------------------------------------------------------------------------------
  1723                           ;! (1) _lcd_num                                             12     8      4    3285
  1724                           ;!                                             11 COMMON     3     3      0
  1725                           ;!                                              4 BANK0      9     5      4
  1726                           ;!                            ___awdiv
  1727                           ;!                            ___awmod
  1728                           ;!                             ___bmul (ARG)
  1729                           ;!                           _lcd_data
  1730                           ;!                         _lcd_lincol
  1731                           ;! ---------------------------------------------------------------------------------
  1732                           ;! (2) _lcd_lincol                                           3     2      1     372
  1733                           ;!                                              3 COMMON     3     2      1
  1734                           ;!                           _lcd_inst
  1735                           ;! ---------------------------------------------------------------------------------
  1736                           ;! (2) _lcd_data                                             3     3      0      44
  1737                           ;!                                              0 COMMON     3     3      0
  1738                           ;! ---------------------------------------------------------------------------------
  1739                           ;! (2) ___awmod                                              7     3      4     448
  1740                           ;!                                              0 COMMON     7     3      4
  1741                           ;! ---------------------------------------------------------------------------------
  1742                           ;! (3) ___awdiv                                              9     5      4    1516
  1743                           ;!                                              6 COMMON     5     1      4
  1744                           ;!                                              0 BANK0      4     4      0
  1745                           ;!                             ___wmul (ARG)
  1746                           ;! ---------------------------------------------------------------------------------
  1747                           ;! (1) _lcd_init                                             3     3      0     176
  1748                           ;!                                              3 COMMON     3     3      0
  1749                           ;!                           _lcd_inst
  1750                           ;! ---------------------------------------------------------------------------------
  1751                           ;! (3) _lcd_inst                                             3     3      0     176
  1752                           ;!                                              0 COMMON     3     3      0
  1753                           ;! ---------------------------------------------------------------------------------
  1754                           ;! (1) _analog_init                                          0     0      0       0
  1755                           ;! ---------------------------------------------------------------------------------
  1756                           ;! Estimated maximum stack depth 3
  1757                           ;! ---------------------------------------------------------------------------------
  1758                           ;!
  1759                           ;! Call Graph Graphs:
  1760                           ;!
  1761                           ;! _main (ROOT)
  1762                           ;!   ___bmul
  1763                           ;!   _analog_init
  1764                           ;!   _lcd_init
  1765                           ;!     _lcd_inst
  1766                           ;!   _lcd_num
  1767                           ;!     ___awdiv
  1768                           ;!       ___wmul (ARG)
  1769                           ;!     ___awmod
  1770                           ;!     ___bmul (ARG)
  1771                           ;!     _lcd_data (ARG)
  1772                           ;!     _lcd_lincol (ARG)
  1773                           ;!       _lcd_inst
  1774                           ;!   _lcd_print
  1775                           ;!     _lcd_data
  1776                           ;!     _lcd_lincol
  1777                           ;!       _lcd_inst
  1778                           ;!   _led_init
  1779                           ;!   _led_monitorar
  1780                           ;!     _sensor_alert
  1781                           ;!       ___awdiv
  1782                           ;!         ___wmul (ARG)
  1783                           ;!       ___wmul
  1784                           ;!     _sensor_danger
  1785                           ;!       ___awdiv
  1786                           ;!         ___wmul (ARG)
  1787                           ;!       ___wmul
  1788                           ;!   _sensor_init
  1789                           ;!     ___bmul
  1790                           ;!   _sensor_readAll
  1791                           ;!     _ADC_read
  1792                           ;!     ___bmul
  1793                           ;!     ___lmul
  1794                           ;!       _ADC_read (ARG)
  1795                           ;!       ___bmul (ARG)
  1796                           ;!   _tecla_decrementar_descida
  1797                           ;!   _tecla_incrementar_subida
  1798                           ;!   _teclas_init
  1799                           ;!
  1800                           
  1801                           ;! Address spaces:
  1802                           
  1803                           ;!Name               Size   Autos  Total    Cost      Usage
  1804                           ;!BITCOMMON            E      0       0       0        0.0%
  1805                           ;!EEDATA             100      0       0       0        0.0%
  1806                           ;!NULL                 0      0       0       0        0.0%
  1807                           ;!CODE                 0      0       0       0        0.0%
  1808                           ;!COMMON               E      E       E       1      100.0%
  1809                           ;!BITSFR0              0      0       0       1        0.0%
  1810                           ;!SFR0                 0      0       0       1        0.0%
  1811                           ;!BITSFR1              0      0       0       2        0.0%
  1812                           ;!SFR1                 0      0       0       2        0.0%
  1813                           ;!STACK                0      0       0       2        0.0%
  1814                           ;!ABS                  0      0      70       3        0.0%
  1815                           ;!BITBANK0            50      0       0       4        0.0%
  1816                           ;!BITSFR3              0      0       0       4        0.0%
  1817                           ;!SFR3                 0      0       0       4        0.0%
  1818                           ;!BANK0               50     2E      32       5       62.5%
  1819                           ;!BITSFR2              0      0       0       5        0.0%
  1820                           ;!SFR2                 0      0       0       5        0.0%
  1821                           ;!BITBANK1            50      0       0       6        0.0%
  1822                           ;!BANK1               50      0      30       7       60.0%
  1823                           ;!BITBANK3            60      0       0       8        0.0%
  1824                           ;!BANK3               60      0       0       9        0.0%
  1825                           ;!BITBANK2            60      0       0      10        0.0%
  1826                           ;!BANK2               60      0       0      11        0.0%
  1827                           ;!DATA                 0      0      70      12        0.0%
  1828                           
  1829                           	global	_main
  1830                           
  1831 ;; *************** function _main *****************
  1832 ;; Defined at:
  1833 ;;		line 19 in file "main.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  i               1   45[BANK0 ] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : B00/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         0       1       0       0       0
  1849 ;;      Temps:          0       3       0       0       0
  1850 ;;      Totals:         0       4       0       0       0
  1851 ;;Total ram usage:        4 bytes
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		___bmul
  1855 ;;		_analog_init
  1856 ;;		_lcd_init
  1857 ;;		_lcd_num
  1858 ;;		_lcd_print
  1859 ;;		_led_init
  1860 ;;		_led_monitorar
  1861 ;;		_sensor_init
  1862 ;;		_sensor_readAll
  1863 ;;		_tecla_decrementar_descida
  1864 ;;		_tecla_incrementar_subida
  1865 ;;		_teclas_init
  1866 ;; This function is called by:
  1867 ;;		Startup code after reset
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1871                           	file	"main.c"
  1872                           	line	19
  1873                           global __pmaintext
  1874                           __pmaintext:	;psect for function _main
  1875  06A7                     psect	maintext
  1876                           	file	"main.c"
  1877                           	line	19
  1878                           	global	__size_of_main
  1879                           	__size_of_main	equ	__end_of_main-_main
  1880  0146                     	
  1881                           _main:	
  1882  06A7                     ;incstack = 0
  1883                           	opt	stack 5
  1884                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1885                           	line	21
  1886                           	
  1887                           l1661:	
  1888  06A7                     ;main.c: 21:     analog_init();
  1889                           	fcall	_analog_init
  1890  06A7  120A  158A  2780  120A  118A  	line	22
  1891                           ;main.c: 22:     lcd_init();
  1892                           	fcall	_lcd_init
  1893  06AC  120A  118A  216B  120A  118A  	line	23
  1894                           	
  1895                           l1663:	
  1896  06B1                     ;main.c: 23:     led_init();
  1897                           	fcall	_led_init
  1898  06B1  120A  158A  2775  120A  118A  	line	24
  1899                           	
  1900                           l1665:	
  1901  06B6                     ;main.c: 24:     teclas_init();
  1902                           	fcall	_teclas_init
  1903  06B6  120A  158A  2770  120A  118A  	line	26
  1904                           	
  1905                           l1667:	
  1906  06BB                     ;main.c: 26:     sensor_init(sensor, 0, 0, 100, 25, 20, 40);
  1907                           	clrf	(sensor_init@ch)
  1908  06BB  01F4               	movlw	0
  1909  06BC  3000               	movwf	(sensor_init@tmin)
  1910  06BD  00F5               	movwf	(sensor_init@tmin+1)
  1911  06BE  00F6               	movlw	064h
  1912  06BF  3064               	movwf	(sensor_init@tmax)
  1913  06C0  00F7               	movlw	0
  1914  06C1  3000               	movwf	((sensor_init@tmax))+1
  1915  06C2  00F8               	movlw	019h
  1916  06C3  3019               	movwf	(sensor_init@alvo)
  1917  06C4  00F9               	movlw	0
  1918  06C5  3000               	movwf	((sensor_init@alvo))+1
  1919  06C6  00FA               	movlw	low(014h)
  1920  06C7  3014               	bcf	status, 5	;RP0=0, select bank0
  1921  06C8  1283               	bcf	status, 6	;RP1=0, select bank0
  1922  06C9  1303               	movwf	(??_main+0)+0
  1923  06CA  00CA               	movf	(??_main+0)+0,w
  1924  06CB  084A               	movwf	(sensor_init@aceitavel)
  1925  06CC  00FB               	movlw	low(028h)
  1926  06CD  3028               	movwf	(??_main+1)+0
  1927  06CE  00CB               	movf	(??_main+1)+0,w
  1928  06CF  084B               	movwf	(sensor_init@toleravel)
  1929  06D0  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  1930  06D1  30A0               	fcall	_sensor_init
  1931  06D2  120A  118A  231C  120A  118A  	line	27
  1932                           	
  1933                           l1669:	
  1934  06D7                     ;main.c: 27:     sensor_init(sensor, 1, 0, 100, 25, 20, 40);
  1935                           	clrf	(sensor_init@ch)
  1936  06D7  01F4               	incf	(sensor_init@ch),f
  1937  06D8  0AF4               	movlw	0
  1938  06D9  3000               	movwf	(sensor_init@tmin)
  1939  06DA  00F5               	movwf	(sensor_init@tmin+1)
  1940  06DB  00F6               	movlw	064h
  1941  06DC  3064               	movwf	(sensor_init@tmax)
  1942  06DD  00F7               	movlw	0
  1943  06DE  3000               	movwf	((sensor_init@tmax))+1
  1944  06DF  00F8               	movlw	019h
  1945  06E0  3019               	movwf	(sensor_init@alvo)
  1946  06E1  00F9               	movlw	0
  1947  06E2  3000               	movwf	((sensor_init@alvo))+1
  1948  06E3  00FA               	movlw	low(014h)
  1949  06E4  3014               	bcf	status, 5	;RP0=0, select bank0
  1950  06E5  1283               	bcf	status, 6	;RP1=0, select bank0
  1951  06E6  1303               	movwf	(??_main+0)+0
  1952  06E7  00CA               	movf	(??_main+0)+0,w
  1953  06E8  084A               	movwf	(sensor_init@aceitavel)
  1954  06E9  00FB               	movlw	low(028h)
  1955  06EA  3028               	movwf	(??_main+1)+0
  1956  06EB  00CB               	movf	(??_main+1)+0,w
  1957  06EC  084B               	movwf	(sensor_init@toleravel)
  1958  06ED  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  1959  06EE  30A0               	fcall	_sensor_init
  1960  06EF  120A  118A  231C  120A  118A  	line	28
  1961                           	
  1962                           l1671:	
  1963  06F4                     ;main.c: 28:     sensor_init(sensor, 2, 0, 100, 25, 20, 40);
  1964                           	movlw	low(02h)
  1965  06F4  3002               	bcf	status, 5	;RP0=0, select bank0
  1966  06F5  1283               	bcf	status, 6	;RP1=0, select bank0
  1967  06F6  1303               	movwf	(??_main+0)+0
  1968  06F7  00CA               	movf	(??_main+0)+0,w
  1969  06F8  084A               	movwf	(sensor_init@ch)
  1970  06F9  00F4               	movlw	0
  1971  06FA  3000               	movwf	(sensor_init@tmin)
  1972  06FB  00F5               	movwf	(sensor_init@tmin+1)
  1973  06FC  00F6               	movlw	064h
  1974  06FD  3064               	movwf	(sensor_init@tmax)
  1975  06FE  00F7               	movlw	0
  1976  06FF  3000               	movwf	((sensor_init@tmax))+1
  1977  0700  00F8               	movlw	019h
  1978  0701  3019               	movwf	(sensor_init@alvo)
  1979  0702  00F9               	movlw	0
  1980  0703  3000               	movwf	((sensor_init@alvo))+1
  1981  0704  00FA               	movlw	low(014h)
  1982  0705  3014               	movwf	(??_main+1)+0
  1983  0706  00CB               	movf	(??_main+1)+0,w
  1984  0707  084B               	movwf	(sensor_init@aceitavel)
  1985  0708  00FB               	movlw	low(028h)
  1986  0709  3028               	movwf	(??_main+2)+0
  1987  070A  00CC               	movf	(??_main+2)+0,w
  1988  070B  084C               	movwf	(sensor_init@toleravel)
  1989  070C  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  1990  070D  30A0               	fcall	_sensor_init
  1991  070E  120A  118A  231C  120A  118A  	line	29
  1992                           	
  1993                           l1673:	
  1994  0713                     ;main.c: 29:     sensor_init(sensor, 3, 0, 100, 25, 20, 40);
  1995                           	movlw	low(03h)
  1996  0713  3003               	bcf	status, 5	;RP0=0, select bank0
  1997  0714  1283               	bcf	status, 6	;RP1=0, select bank0
  1998  0715  1303               	movwf	(??_main+0)+0
  1999  0716  00CA               	movf	(??_main+0)+0,w
  2000  0717  084A               	movwf	(sensor_init@ch)
  2001  0718  00F4               	movlw	0
  2002  0719  3000               	movwf	(sensor_init@tmin)
  2003  071A  00F5               	movwf	(sensor_init@tmin+1)
  2004  071B  00F6               	movlw	064h
  2005  071C  3064               	movwf	(sensor_init@tmax)
  2006  071D  00F7               	movlw	0
  2007  071E  3000               	movwf	((sensor_init@tmax))+1
  2008  071F  00F8               	movlw	019h
  2009  0720  3019               	movwf	(sensor_init@alvo)
  2010  0721  00F9               	movlw	0
  2011  0722  3000               	movwf	((sensor_init@alvo))+1
  2012  0723  00FA               	movlw	low(014h)
  2013  0724  3014               	movwf	(??_main+1)+0
  2014  0725  00CB               	movf	(??_main+1)+0,w
  2015  0726  084B               	movwf	(sensor_init@aceitavel)
  2016  0727  00FB               	movlw	low(028h)
  2017  0728  3028               	movwf	(??_main+2)+0
  2018  0729  00CC               	movf	(??_main+2)+0,w
  2019  072A  084C               	movwf	(sensor_init@toleravel)
  2020  072B  00FC               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  2021  072C  30A0               	fcall	_sensor_init
  2022  072D  120A  118A  231C  120A  118A  	goto	l1675
  2023  0732  2F33               	line	31
  2024                           ;main.c: 31:     while(1)
  2025                           	
  2026                           l151:	
  2027  0733                     	line	33
  2028                           	
  2029                           l1675:	
  2030  0733                     ;main.c: 32:     {;main.c: 33:         _delay((unsigned long)((5)*(20000000/4000.0)));
  2031                           	opt asmopt_push
  2032                           opt asmopt_off
  2033                           movlw	33
  2034  0733  3021               	bcf	status, 5	;RP0=0, select bank0
  2035  0734  1283               	bcf	status, 6	;RP1=0, select bank0
  2036  0735  1303               movwf	((??_main+0)+0+1),f
  2037  0736  00CB               	movlw	117
  2038  0737  3075               movwf	((??_main+0)+0),f
  2039  0738  00CA               	u1617:
  2040  0739                     decfsz	((??_main+0)+0),f
  2041  0739  0BCA               	goto	u1617
  2042  073A  2F39               	decfsz	((??_main+0)+0+1),f
  2043  073B  0BCB               	goto	u1617
  2044  073C  2F39               	nop2
  2045  073D  2F3E               opt asmopt_pop
  2046                           
  2047                           	line	34
  2048                           	
  2049                           l1677:	
  2050  073E                     ;main.c: 34:         lcd_print(0, 0, "Temp. Sensor:   ");
  2051                           	clrf	(lcd_print@col)
  2052  073E  01F6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2053  073F  3001               	bcf	status, 5	;RP0=0, select bank0
  2054  0740  1283               	bcf	status, 6	;RP1=0, select bank0
  2055  0741  1303               	movwf	(??_main+0)+0
  2056  0742  00CA               	movf	(??_main+0)+0,w
  2057  0743  084A               	movwf	(lcd_print@str)
  2058  0744  00F7               	movlw	low(0)
  2059  0745  3000               	fcall	_lcd_print
  2060  0746  120A  118A  2026  120A  118A  	line	36
  2061                           	
  2062                           l1679:	
  2063  074B                     ;main.c: 36:         sensor_readAll(sensor, 4);
  2064                           	movlw	low(04h)
  2065  074B  3004               	bcf	status, 5	;RP0=0, select bank0
  2066  074C  1283               	bcf	status, 6	;RP1=0, select bank0
  2067  074D  1303               	movwf	(??_main+0)+0
  2068  074E  00CA               	movf	(??_main+0)+0,w
  2069  074F  084A               	movwf	(sensor_readAll@n)
  2070  0750  00A8               	movlw	(low(_sensor|((0x0)<<8)))&0ffh
  2071  0751  30A0               	fcall	_sensor_readAll
  2072  0752  120A  118A  24E6  120A  118A  	line	38
  2073                           	
  2074                           l1681:	
  2075  0757                     ;main.c: 38:         lcd_num(0,14, (int)canal, 1 );
  2076                           	movlw	low(0Eh)
  2077  0757  300E               	bcf	status, 5	;RP0=0, select bank0
  2078  0758  1283               	bcf	status, 6	;RP1=0, select bank0
  2079  0759  1303               	movwf	(??_main+0)+0
  2080  075A  00CA               	movf	(??_main+0)+0,w
  2081  075B  084A               	movwf	(lcd_num@col)
  2082  075C  00A4               	movf	(_canal+1),w
  2083  075D  084F               	movwf	(lcd_num@num+1)
  2084  075E  00A6               	movf	(_canal),w
  2085  075F  084E               	movwf	(lcd_num@num)
  2086  0760  00A5               	clrf	(lcd_num@tam)
  2087  0761  01A7               	incf	(lcd_num@tam),f
  2088  0762  0AA7               	movlw	low(0)
  2089  0763  3000               	fcall	_lcd_num
  2090  0764  120A  118A  25B9  120A  118A  	line	39
  2091                           	
  2092                           l1683:	
  2093  0769                     ;main.c: 39:         lcd_num(1, 8, sensor[canal].Valor, 3);
  2094                           	movlw	low(08h)
  2095  0769  3008               	bcf	status, 5	;RP0=0, select bank0
  2096  076A  1283               	bcf	status, 6	;RP1=0, select bank0
  2097  076B  1303               	movwf	(??_main+0)+0
  2098  076C  00CA               	movf	(??_main+0)+0,w
  2099  076D  084A               	movwf	(lcd_num@col)
  2100  076E  00A4               	movlw	low(0Ch)
  2101  076F  300C               	movwf	(??_main+1)+0
  2102  0770  00CB               	movf	(??_main+1)+0,w
  2103  0771  084B               	movwf	(___bmul@multiplicand)
  2104  0772  00F0               	movf	(_canal),w
  2105  0773  084E               	fcall	___bmul
  2106  0774  120A  158A  27A4  120A  118A  	addlw	02h
  2107  0779  3E02               	addlw	low(_sensor|((0x0)<<8))&0ffh
  2108  077A  3EA0               	movwf	fsr0
  2109  077B  0084               	bcf	status, 7	;select IRP bank1
  2110  077C  1383               	movf	indf,w
  2111  077D  0800               	bcf	status, 5	;RP0=0, select bank0
  2112  077E  1283               	bcf	status, 6	;RP1=0, select bank0
  2113  077F  1303               	movwf	(lcd_num@num)
  2114  0780  00A5               	incf	fsr0,f
  2115  0781  0A84               	movf	indf,w
  2116  0782  0800               	movwf	(lcd_num@num+1)
  2117  0783  00A6               	movlw	low(03h)
  2118  0784  3003               	movwf	(??_main+2)+0
  2119  0785  00CC               	movf	(??_main+2)+0,w
  2120  0786  084C               	movwf	(lcd_num@tam)
  2121  0787  00A7               	movlw	low(01h)
  2122  0788  3001               	fcall	_lcd_num
  2123  0789  120A  118A  25B9  120A  118A  	line	43
  2124                           	
  2125                           l1685:	
  2126  078E                     ;main.c: 43:         if (tecla_incrementar_subida() )
  2127                           	fcall	_tecla_incrementar_subida
  2128  078E  120A  118A  200B  120A  118A  	xorlw	0
  2129  0793  3A00               	skipnz
  2130  0794  1903               	goto	u1531
  2131  0795  2F97               	goto	u1530
  2132  0796  2F98               u1531:
  2133  0797                     	goto	l1689
  2134  0797  2FA7               u1530:
  2135  0798                     	line	45
  2136                           	
  2137                           l1687:	
  2138  0798                     ;main.c: 44:         {;main.c: 45:             canal = ++canal % 4;
  2139                           	movlw	01h
  2140  0798  3001               	bcf	status, 5	;RP0=0, select bank0
  2141  0799  1283               	bcf	status, 6	;RP1=0, select bank0
  2142  079A  1303               	addwf	(_canal),f
  2143  079B  07CE               	skipnc
  2144  079C  1803               	incf	(_canal+1),f
  2145  079D  0ACF               	movlw	0
  2146  079E  3000               	addwf	(_canal+1),f
  2147  079F  07CF               	movlw	03h
  2148  07A0  3003               	andwf	((_canal)),w
  2149  07A1  054E               	movwf	(_canal)
  2150  07A2  00CE               	movlw	0
  2151  07A3  3000               	andwf	((_canal+1)),w
  2152  07A4  054F               	movwf	1+(_canal)
  2153  07A5  00CF               	goto	l1689
  2154  07A6  2FA7               	line	46
  2155                           ;main.c: 46:         }
  2156                           	
  2157                           l152:	
  2158  07A7                     	line	47
  2159                           	
  2160                           l1689:	
  2161  07A7                     ;main.c: 47:         if (tecla_decrementar_descida() )
  2162                           	fcall	_tecla_decrementar_descida
  2163  07A7  120A  158A  27BD  120A  118A  	xorlw	0
  2164  07AC  3A00               	skipnz
  2165  07AD  1903               	goto	u1541
  2166  07AE  2FB0               	goto	u1540
  2167  07AF  2FB1               u1541:
  2168  07B0                     	goto	l1693
  2169  07B0  2FC0               u1540:
  2170  07B1                     	line	49
  2171                           	
  2172                           l1691:	
  2173  07B1                     ;main.c: 48:         {;main.c: 49:             canal = --canal % 4;
  2174                           	movlw	0FFh
  2175  07B1  30FF               	bcf	status, 5	;RP0=0, select bank0
  2176  07B2  1283               	bcf	status, 6	;RP1=0, select bank0
  2177  07B3  1303               	addwf	(_canal),f
  2178  07B4  07CE               	skipnc
  2179  07B5  1803               	incf	(_canal+1),f
  2180  07B6  0ACF               	movlw	0FFh
  2181  07B7  30FF               	addwf	(_canal+1),f
  2182  07B8  07CF               	movlw	03h
  2183  07B9  3003               	andwf	((_canal)),w
  2184  07BA  054E               	movwf	(_canal)
  2185  07BB  00CE               	movlw	0
  2186  07BC  3000               	andwf	((_canal+1)),w
  2187  07BD  054F               	movwf	1+(_canal)
  2188  07BE  00CF               	goto	l1693
  2189  07BF  2FC0               	line	50
  2190                           ;main.c: 50:         }
  2191                           	
  2192                           l153:	
  2193  07C0                     	line	51
  2194                           	
  2195                           l1693:	
  2196  07C0                     ;main.c: 51:         for( char i=0; i<4; i++ )
  2197                           	bcf	status, 5	;RP0=0, select bank0
  2198  07C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2199  07C1  1303               	clrf	(main@i)
  2200  07C2  01CD               	
  2201                           l1695:	
  2202  07C3                     	movlw	low(04h)
  2203  07C3  3004               	subwf	(main@i),w
  2204  07C4  024D               	skipc
  2205  07C5  1C03               	goto	u1551
  2206  07C6  2FC8               	goto	u1550
  2207  07C7  2FC9               u1551:
  2208  07C8                     	goto	l1699
  2209  07C8  2FCB               u1550:
  2210  07C9                     	goto	l1675
  2211  07C9  2F33               	
  2212                           l1697:	
  2213  07CA                     	goto	l1675
  2214  07CA  2F33               	
  2215                           l154:	
  2216  07CB                     	line	52
  2217                           	
  2218                           l1699:	
  2219  07CB                     ;main.c: 52:             led_monitorar(&sensor[i]);
  2220                           	movlw	low(0Ch)
  2221  07CB  300C               	movwf	(??_main+0)+0
  2222  07CC  00CA               	movf	(??_main+0)+0,w
  2223  07CD  084A               	movwf	(___bmul@multiplicand)
  2224  07CE  00F0               	movf	(main@i),w
  2225  07CF  084D               	fcall	___bmul
  2226  07D0  120A  158A  27A4  120A  118A  	addlw	low(_sensor|((0x0)<<8))&0ffh
  2227  07D5  3EA0               	fcall	_led_monitorar
  2228  07D6  120A  118A  20D6  120A  118A  	
  2229                           l1701:	
  2230  07DB                     	movlw	low(01h)
  2231  07DB  3001               	bcf	status, 5	;RP0=0, select bank0
  2232  07DC  1283               	bcf	status, 6	;RP1=0, select bank0
  2233  07DD  1303               	movwf	(??_main+0)+0
  2234  07DE  00CA               	movf	(??_main+0)+0,w
  2235  07DF  084A               	addwf	(main@i),f
  2236  07E0  07CD               	
  2237                           l1703:	
  2238  07E1                     	movlw	low(04h)
  2239  07E1  3004               	subwf	(main@i),w
  2240  07E2  024D               	skipc
  2241  07E3  1C03               	goto	u1561
  2242  07E4  2FE6               	goto	u1560
  2243  07E5  2FE7               u1561:
  2244  07E6                     	goto	l1699
  2245  07E6  2FCB               u1560:
  2246  07E7                     	goto	l1675
  2247  07E7  2F33               	
  2248                           l155:	
  2249  07E8                     	goto	l1675
  2250  07E8  2F33               	line	53
  2251                           ;main.c: 53:     }
  2252                           	
  2253                           l156:	
  2254  07E9                     	goto	l1675
  2255  07E9  2F33               	
  2256                           l157:	
  2257  07EA                     	line	54
  2258                           	
  2259                           l158:	
  2260  07EA                     	global	start
  2261                           	ljmp	start
  2262  07EA  120A  118A  2800   	opt stack 0
  2263                           GLOBAL	__end_of_main
  2264                           	__end_of_main:
  2265  07ED                     	signat	_main,89
  2266                           	global	_teclas_init
  2267                           
  2268 ;; *************** function _teclas_init *****************
  2269 ;; Defined at:
  2270 ;;		line 19 in file "teclas.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		None
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0
  2287 ;;      Totals:         0       0       0       0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2297                           	file	"teclas.c"
  2298                           	line	19
  2299                           global __ptext1
  2300                           __ptext1:	;psect for function _teclas_init
  2301  0F70                     psect	text1
  2302                           	file	"teclas.c"
  2303                           	line	19
  2304                           	global	__size_of_teclas_init
  2305                           	__size_of_teclas_init	equ	__end_of_teclas_init-_teclas_init
  2306  0005                     	
  2307                           _teclas_init:	
  2308  0F70                     ;incstack = 0
  2309                           	opt	stack 7
  2310                           ; Regs used in _teclas_init: []
  2311                           	line	21
  2312                           	
  2313                           l1607:	
  2314  0F70                     ;teclas.c: 21:     TRISCbits.TRISC4 = 1;
  2315                           	bsf	status, 5	;RP0=1, select bank1
  2316  0F70  1683               	bcf	status, 6	;RP1=0, select bank1
  2317  0F71  1303               	bsf	(135)^080h,4	;volatile
  2318  0F72  1607               	line	22
  2319                           ;teclas.c: 22:     TRISCbits.TRISC5 = 1;
  2320                           	bsf	(135)^080h,5	;volatile
  2321  0F73  1687               	line	23
  2322                           	
  2323                           l186:	
  2324  0F74                     	return
  2325  0F74  0008               	opt stack 0
  2326                           GLOBAL	__end_of_teclas_init
  2327                           	__end_of_teclas_init:
  2328  0F75                     	signat	_teclas_init,89
  2329                           	global	_tecla_incrementar_subida
  2330                           
  2331 ;; *************** function _tecla_incrementar_subida *****************
  2332 ;; Defined at:
  2333 ;;		line 31 in file "teclas.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      unsigned char 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2360                           	line	31
  2361                           global __ptext2
  2362                           __ptext2:	;psect for function _tecla_incrementar_subida
  2363  000B                     psect	text2
  2364                           	file	"teclas.c"
  2365                           	line	31
  2366                           	global	__size_of_tecla_incrementar_subida
  2367                           	__size_of_tecla_incrementar_subida	equ	__end_of_tecla_incrementar_subida-_tecla_increme
                                 ntar_subida
  2368  001B                     	
  2369                           _tecla_incrementar_subida:	
  2370  000B                     ;incstack = 0
  2371                           	opt	stack 7
  2372                           ; Regs used in _tecla_incrementar_subida: [wreg+status,2+status,0]
  2373                           	line	33
  2374                           	
  2375                           l1609:	
  2376  000B                     ;teclas.c: 33:     if (!incrementar_anterior && PORTCbits.RC5)
  2377                           	bcf	status, 5	;RP0=0, select bank0
  2378  000B  1283               	bcf	status, 6	;RP1=0, select bank0
  2379  000C  1303               	movf	((_incrementar_anterior)),w
  2380  000D  0851               	btfss	status,2
  2381  000E  1D03               	goto	u1441
  2382  000F  2811               	goto	u1440
  2383  0010  2812               u1441:
  2384  0011                     	goto	l1621
  2385  0011  281E               u1440:
  2386  0012                     	
  2387                           l1611:	
  2388  0012                     	btfss	(7),5	;volatile
  2389  0012  1E87               	goto	u1451
  2390  0013  2815               	goto	u1450
  2391  0014  2816               u1451:
  2392  0015                     	goto	l1621
  2393  0015  281E               u1450:
  2394  0016                     	line	35
  2395                           	
  2396                           l1613:	
  2397  0016                     ;teclas.c: 34:     {;teclas.c: 35:         incrementar_anterior = PORTCbits.RC5;
  2398                           	movlw	0
  2399  0016  3000               	btfsc	(7),5	;volatile
  2400  0017  1A87               	movlw	1
  2401  0018  3001               	movwf	(_incrementar_anterior)
  2402  0019  00D1               	line	36
  2403                           	
  2404                           l1615:	
  2405  001A                     ;teclas.c: 36:         return (1);
  2406                           	movlw	low(01h)
  2407  001A  3001               	goto	l195
  2408  001B  2825               	
  2409                           l1617:	
  2410  001C                     	goto	l195
  2411  001C  2825               	line	37
  2412                           	
  2413                           l1619:	
  2414  001D                     ;teclas.c: 37:     }
  2415                           	goto	l195
  2416  001D  2825               	line	38
  2417                           ;teclas.c: 38:     else
  2418                           	
  2419                           l194:	
  2420  001E                     	line	40
  2421                           	
  2422                           l1621:	
  2423  001E                     ;teclas.c: 39:     {;teclas.c: 40:         incrementar_anterior = PORTCbits.RC5;
  2424                           	movlw	0
  2425  001E  3000               	btfsc	(7),5	;volatile
  2426  001F  1A87               	movlw	1
  2427  0020  3001               	movwf	(_incrementar_anterior)
  2428  0021  00D1               	line	41
  2429                           	
  2430                           l1623:	
  2431  0022                     ;teclas.c: 41:         return (0);
  2432                           	movlw	low(0)
  2433  0022  3000               	goto	l195
  2434  0023  2825               	
  2435                           l1625:	
  2436  0024                     	goto	l195
  2437  0024  2825               	line	42
  2438                           ;teclas.c: 42:     }
  2439                           	
  2440                           l196:	
  2441  0025                     	line	43
  2442                           	
  2443                           l195:	
  2444  0025                     	return
  2445  0025  0008               	opt stack 0
  2446                           GLOBAL	__end_of_tecla_incrementar_subida
  2447                           	__end_of_tecla_incrementar_subida:
  2448  0026                     	signat	_tecla_incrementar_subida,89
  2449                           	global	_tecla_decrementar_descida
  2450                           
  2451 ;; *************** function _tecla_decrementar_descida *****************
  2452 ;; Defined at:
  2453 ;;		line 79 in file "teclas.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      unsigned char 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2467 ;;      Params:         0       0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0
  2470 ;;      Totals:         0       0       0       0       0
  2471 ;;Total ram usage:        0 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2480                           	line	79
  2481                           global __ptext3
  2482                           __ptext3:	;psect for function _tecla_decrementar_descida
  2483  0FBD                     psect	text3
  2484                           	file	"teclas.c"
  2485                           	line	79
  2486                           	global	__size_of_tecla_decrementar_descida
  2487                           	__size_of_tecla_decrementar_descida	equ	__end_of_tecla_decrementar_descida-_tecla_decre
                                 mentar_descida
  2488  001B                     	
  2489                           _tecla_decrementar_descida:	
  2490  0FBD                     ;incstack = 0
  2491                           	opt	stack 7
  2492                           ; Regs used in _tecla_decrementar_descida: [wreg+status,2+status,0]
  2493                           	line	81
  2494                           	
  2495                           l1627:	
  2496  0FBD                     ;teclas.c: 81:     if (decrementar_anterior && !PORTCbits.RC4)
  2497                           	bcf	status, 5	;RP0=0, select bank0
  2498  0FBD  1283               	bcf	status, 6	;RP1=0, select bank0
  2499  0FBE  1303               	movf	((_decrementar_anterior)),w
  2500  0FBF  0850               	btfsc	status,2
  2501  0FC0  1903               	goto	u1461
  2502  0FC1  2FC3               	goto	u1460
  2503  0FC2  2FC4               u1461:
  2504  0FC3                     	goto	l1639
  2505  0FC3  2FD0               u1460:
  2506  0FC4                     	
  2507                           l1629:	
  2508  0FC4                     	btfsc	(7),4	;volatile
  2509  0FC4  1A07               	goto	u1471
  2510  0FC5  2FC7               	goto	u1470
  2511  0FC6  2FC8               u1471:
  2512  0FC7                     	goto	l1639
  2513  0FC7  2FD0               u1470:
  2514  0FC8                     	line	83
  2515                           	
  2516                           l1631:	
  2517  0FC8                     ;teclas.c: 82:     {;teclas.c: 83:         decrementar_anterior = PORTCbits.RC4;
  2518                           	movlw	0
  2519  0FC8  3000               	btfsc	(7),4	;volatile
  2520  0FC9  1A07               	movlw	1
  2521  0FCA  3001               	movwf	(_decrementar_anterior)
  2522  0FCB  00D0               	line	84
  2523                           	
  2524                           l1633:	
  2525  0FCC                     ;teclas.c: 84:         return (1);
  2526                           	movlw	low(01h)
  2527  0FCC  3001               	goto	l215
  2528  0FCD  2FD7               	
  2529                           l1635:	
  2530  0FCE                     	goto	l215
  2531  0FCE  2FD7               	line	85
  2532                           	
  2533                           l1637:	
  2534  0FCF                     ;teclas.c: 85:     }
  2535                           	goto	l215
  2536  0FCF  2FD7               	line	86
  2537                           ;teclas.c: 86:     else
  2538                           	
  2539                           l214:	
  2540  0FD0                     	line	88
  2541                           	
  2542                           l1639:	
  2543  0FD0                     ;teclas.c: 87:     {;teclas.c: 88:         decrementar_anterior = PORTCbits.RC4;
  2544                           	movlw	0
  2545  0FD0  3000               	btfsc	(7),4	;volatile
  2546  0FD1  1A07               	movlw	1
  2547  0FD2  3001               	movwf	(_decrementar_anterior)
  2548  0FD3  00D0               	line	89
  2549                           	
  2550                           l1641:	
  2551  0FD4                     ;teclas.c: 89:         return (0);
  2552                           	movlw	low(0)
  2553  0FD4  3000               	goto	l215
  2554  0FD5  2FD7               	
  2555                           l1643:	
  2556  0FD6                     	goto	l215
  2557  0FD6  2FD7               	line	90
  2558                           ;teclas.c: 90:     }
  2559                           	
  2560                           l216:	
  2561  0FD7                     	line	91
  2562                           	
  2563                           l215:	
  2564  0FD7                     	return
  2565  0FD7  0008               	opt stack 0
  2566                           GLOBAL	__end_of_tecla_decrementar_descida
  2567                           	__end_of_tecla_decrementar_descida:
  2568  0FD8                     	signat	_tecla_decrementar_descida,89
  2569                           	global	_sensor_readAll
  2570                           
  2571 ;; *************** function _sensor_readAll *****************
  2572 ;; Defined at:
  2573 ;;		line 26 in file "sensor.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  ptr             1    wreg     PTR struct sensor_t
  2576 ;;		 -> sensor(48), 
  2577 ;;  n               1    8[BANK0 ] unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  ptr             1   40[BANK0 ] PTR struct sensor_t
  2580 ;;		 -> sensor(48), 
  2581 ;;  i               1   41[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       1       0       0       0
  2592 ;;      Locals:         0       2       0       0       0
  2593 ;;      Temps:          0      31       0       0       0
  2594 ;;      Totals:         0      34       0       0       0
  2595 ;;Total ram usage:       34 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    1
  2598 ;; This function calls:
  2599 ;;		_ADC_read
  2600 ;;		___bmul
  2601 ;;		___lmul
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2607                           	file	"sensor.c"
  2608                           	line	26
  2609                           global __ptext4
  2610                           __ptext4:	;psect for function _sensor_readAll
  2611  04E6                     psect	text4
  2612                           	file	"sensor.c"
  2613                           	line	26
  2614                           	global	__size_of_sensor_readAll
  2615                           	__size_of_sensor_readAll	equ	__end_of_sensor_readAll-_sensor_readAll
  2616  00D3                     	
  2617                           _sensor_readAll:	
  2618  04E6                     ;incstack = 0
  2619                           	opt	stack 6
  2620                           ; Regs used in _sensor_readAll: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2621                           ;sensor_readAll@ptr stored from wreg
  2622                           	bcf	status, 5	;RP0=0, select bank0
  2623  04E6  1283               	bcf	status, 6	;RP1=0, select bank0
  2624  04E7  1303               	movwf	(sensor_readAll@ptr)
  2625  04E8  00C8               	line	29
  2626                           	
  2627                           l1597:	
  2628  04E9                     ;sensor.c: 26: void sensor_readAll(struct sensor_t *ptr, char n );sensor.c: 27: {;sensor
                                 .c: 28:     char i;;sensor.c: 29:     for( i=0; i<n; i++ )
  2629                           	clrf	(sensor_readAll@i)
  2630  04E9  01C9               	goto	l1603
  2631  04EA  2DB1               	
  2632                           l90:	
  2633  04EB                     	line	30
  2634                           	
  2635                           l1599:	
  2636  04EB                     ;sensor.c: 30:         (ptr+i)->Valor = ( ( (ADC_read((ptr+i)->CH) + 1) * (long)( (ptr+i
                                 )->Tmax - (ptr+i)->Tmin)>>10 ) + (ptr+i)->Tmin);
  2637                           	movlw	low(0Ch)
  2638  04EB  300C               	movwf	(??_sensor_readAll+0)+0
  2639  04EC  00A9               	movf	(??_sensor_readAll+0)+0,w
  2640  04ED  0829               	movwf	(___bmul@multiplicand)
  2641  04EE  00F0               	movf	(sensor_readAll@i),w
  2642  04EF  0849               	fcall	___bmul
  2643  04F0  120A  158A  27A4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2644  04F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2645  04F6  1303               	addwf	(sensor_readAll@ptr),w
  2646  04F7  0748               	movwf	(??_sensor_readAll+1)+0
  2647  04F8  00AA               	movf	0+(??_sensor_readAll+1)+0,w
  2648  04F9  082A               	addlw	06h
  2649  04FA  3E06               	movwf	fsr0
  2650  04FB  0084               	bcf	status, 7	;select IRP bank0
  2651  04FC  1383               	movf	indf,w
  2652  04FD  0800               	movwf	(??_sensor_readAll+2)+0+0
  2653  04FE  00AB               	incf	fsr0,f
  2654  04FF  0A84               	movf	indf,w
  2655  0500  0800               	movwf	(??_sensor_readAll+2)+0+1
  2656  0501  00AC               	movlw	low(0Ch)
  2657  0502  300C               	movwf	(??_sensor_readAll+4)+0
  2658  0503  00AD               	movf	(??_sensor_readAll+4)+0,w
  2659  0504  082D               	movwf	(___bmul@multiplicand)
  2660  0505  00F0               	movf	(sensor_readAll@i),w
  2661  0506  0849               	fcall	___bmul
  2662  0507  120A  158A  27A4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2663  050C  1283               	bcf	status, 6	;RP1=0, select bank0
  2664  050D  1303               	addwf	(sensor_readAll@ptr),w
  2665  050E  0748               	movwf	(??_sensor_readAll+5)+0
  2666  050F  00AE               	movf	0+(??_sensor_readAll+5)+0,w
  2667  0510  082E               	movwf	fsr0
  2668  0511  0084               	bcf	status, 7	;select IRP bank0
  2669  0512  1383               	movf	indf,w
  2670  0513  0800               	fcall	_ADC_read
  2671  0514  120A  118A  2091  120A  118A  	movf	(0+(?_ADC_read)),w
  2672  0519  0870               	addlw	low(01h)
  2673  051A  3E01               	bcf	status, 5	;RP0=0, select bank0
  2674  051B  1283               	bcf	status, 6	;RP1=0, select bank0
  2675  051C  1303               	movwf	(??_sensor_readAll+6)+0
  2676  051D  00AF               	movf	(1+(?_ADC_read)),w
  2677  051E  0871               	skipnc
  2678  051F  1803               	addlw	1
  2679  0520  3E01               	addlw	high(01h)
  2680  0521  3E00               	movwf	1+(??_sensor_readAll+6)+0
  2681  0522  00B0               	movf	0+(??_sensor_readAll+6)+0,w
  2682  0523  082F               	movwf	((??_sensor_readAll+8)+0)
  2683  0524  00B1               	movf	1+(??_sensor_readAll+6)+0,w
  2684  0525  0830               	movwf	((??_sensor_readAll+8)+0+1)
  2685  0526  00B2               	clrf	((??_sensor_readAll+8)+0+2)
  2686  0527  01B3               	clrf	((??_sensor_readAll+8)+0+3)
  2687  0528  01B4               	movf	3+(??_sensor_readAll+8)+0,w
  2688  0529  0834               	movwf	(___lmul@multiplier+3)
  2689  052A  00A3               	movf	2+(??_sensor_readAll+8)+0,w
  2690  052B  0833               	movwf	(___lmul@multiplier+2)
  2691  052C  00A2               	movf	1+(??_sensor_readAll+8)+0,w
  2692  052D  0832               	movwf	(___lmul@multiplier+1)
  2693  052E  00A1               	movf	0+(??_sensor_readAll+8)+0,w
  2694  052F  0831               	movwf	(___lmul@multiplier)
  2695  0530  00A0               
  2696                           	movlw	low(0Ch)
  2697  0531  300C               	movwf	(??_sensor_readAll+12)+0
  2698  0532  00B5               	movf	(??_sensor_readAll+12)+0,w
  2699  0533  0835               	movwf	(___bmul@multiplicand)
  2700  0534  00F0               	movf	(sensor_readAll@i),w
  2701  0535  0849               	fcall	___bmul
  2702  0536  120A  158A  27A4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2703  053B  1283               	bcf	status, 6	;RP1=0, select bank0
  2704  053C  1303               	addwf	(sensor_readAll@ptr),w
  2705  053D  0748               	movwf	(??_sensor_readAll+13)+0
  2706  053E  00B6               	movf	0+(??_sensor_readAll+13)+0,w
  2707  053F  0836               	addlw	08h
  2708  0540  3E08               	movwf	fsr0
  2709  0541  0084               	bcf	status, 7	;select IRP bank0
  2710  0542  1383               	movf	indf,w
  2711  0543  0800               	movwf	(??_sensor_readAll+14)+0+0
  2712  0544  00B7               	incf	fsr0,f
  2713  0545  0A84               	movf	indf,w
  2714  0546  0800               	movwf	(??_sensor_readAll+14)+0+1
  2715  0547  00B8               	movlw	low(0Ch)
  2716  0548  300C               	movwf	(??_sensor_readAll+16)+0
  2717  0549  00B9               	movf	(??_sensor_readAll+16)+0,w
  2718  054A  0839               	movwf	(___bmul@multiplicand)
  2719  054B  00F0               	movf	(sensor_readAll@i),w
  2720  054C  0849               	fcall	___bmul
  2721  054D  120A  158A  27A4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2722  0552  1283               	bcf	status, 6	;RP1=0, select bank0
  2723  0553  1303               	addwf	(sensor_readAll@ptr),w
  2724  0554  0748               	movwf	(??_sensor_readAll+17)+0
  2725  0555  00BA               	movf	0+(??_sensor_readAll+17)+0,w
  2726  0556  083A               	addlw	06h
  2727  0557  3E06               	movwf	fsr0
  2728  0558  0084               	bcf	status, 7	;select IRP bank0
  2729  0559  1383               	movf	indf,w
  2730  055A  0800               	movwf	(??_sensor_readAll+18)+0+0
  2731  055B  00BB               	incf	fsr0,f
  2732  055C  0A84               	movf	indf,w
  2733  055D  0800               	movwf	(??_sensor_readAll+18)+0+1
  2734  055E  00BC               	comf	(??_sensor_readAll+18)+0,f
  2735  055F  09BB               	comf	(??_sensor_readAll+18)+1,f
  2736  0560  09BC               	incf	(??_sensor_readAll+18)+0,f
  2737  0561  0ABB               	skipnz
  2738  0562  1903               	incf	(??_sensor_readAll+18)+1,f
  2739  0563  0ABC               	movf	0+(??_sensor_readAll+14)+0,w
  2740  0564  0837               	addwf	0+(??_sensor_readAll+18)+0,w
  2741  0565  073B               	movwf	(??_sensor_readAll+20)+0
  2742  0566  00BD               	movf	1+(??_sensor_readAll+14)+0,w
  2743  0567  0838               	skipnc
  2744  0568  1803               	incf	1+(??_sensor_readAll+14)+0,w
  2745  0569  0A38               	addwf	1+(??_sensor_readAll+18)+0,w
  2746  056A  073C               	movwf	1+(??_sensor_readAll+20)+0
  2747  056B  00BE               	movf	0+(??_sensor_readAll+20)+0,w
  2748  056C  083D               	movwf	(___lmul@multiplicand)
  2749  056D  00A4               	movf	1+(??_sensor_readAll+20)+0,w
  2750  056E  083E               	movwf	(___lmul@multiplicand+1)
  2751  056F  00A5               	movlw	0
  2752  0570  3000               	btfsc	(___lmul@multiplicand+1),7
  2753  0571  1BA5               	movlw	255
  2754  0572  30FF               	movwf	(___lmul@multiplicand+2)
  2755  0573  00A6               	movwf	(___lmul@multiplicand+3)
  2756  0574  00A7               	fcall	___lmul
  2757  0575  120A  118A  211F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2758  057A  1283               	bcf	status, 6	;RP1=0, select bank0
  2759  057B  1303               	movf	(0+?___lmul),w
  2760  057C  0820               	movwf	(??_sensor_readAll+22)+0
  2761  057D  00BF               	movf	(1+?___lmul),w
  2762  057E  0821               	movwf	((??_sensor_readAll+22)+0+1)
  2763  057F  00C0               	movf	(2+?___lmul),w
  2764  0580  0822               	movwf	((??_sensor_readAll+22)+0+2)
  2765  0581  00C1               	movf	(3+?___lmul),w
  2766  0582  0823               	movwf	((??_sensor_readAll+22)+0+3)
  2767  0583  00C2               	movlw	0Ah
  2768  0584  300A               	movwf	(??_sensor_readAll+26)+0
  2769  0585  00C3               u1425:
  2770  0586                     	rlf	(??_sensor_readAll+22)+3,w
  2771  0586  0D42               	rrf	(??_sensor_readAll+22)+3,f
  2772  0587  0CC2               	rrf	(??_sensor_readAll+22)+2,f
  2773  0588  0CC1               	rrf	(??_sensor_readAll+22)+1,f
  2774  0589  0CC0               	rrf	(??_sensor_readAll+22)+0,f
  2775  058A  0CBF               u1420:
  2776  058B                     	decfsz	(??_sensor_readAll+26)+0,f
  2777  058B  0BC3               	goto	u1425
  2778  058C  2D86               	movf	0+(??_sensor_readAll+2)+0,w
  2779  058D  082B               	addwf	0+(??_sensor_readAll+22)+0,w
  2780  058E  073F               	movwf	(??_sensor_readAll+27)+0
  2781  058F  00C4               	movf	1+(??_sensor_readAll+2)+0,w
  2782  0590  082C               	skipnc
  2783  0591  1803               	incf	1+(??_sensor_readAll+2)+0,w
  2784  0592  0A2C               	addwf	1+(??_sensor_readAll+22)+0,w
  2785  0593  0740               	movwf	1+(??_sensor_readAll+27)+0
  2786  0594  00C5               	movlw	low(0Ch)
  2787  0595  300C               	movwf	(??_sensor_readAll+29)+0
  2788  0596  00C6               	movf	(??_sensor_readAll+29)+0,w
  2789  0597  0846               	movwf	(___bmul@multiplicand)
  2790  0598  00F0               	movf	(sensor_readAll@i),w
  2791  0599  0849               	fcall	___bmul
  2792  059A  120A  158A  27A4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2793  059F  1283               	bcf	status, 6	;RP1=0, select bank0
  2794  05A0  1303               	addwf	(sensor_readAll@ptr),w
  2795  05A1  0748               	movwf	(??_sensor_readAll+30)+0
  2796  05A2  00C7               	movf	0+(??_sensor_readAll+30)+0,w
  2797  05A3  0847               	addlw	02h
  2798  05A4  3E02               	movwf	fsr0
  2799  05A5  0084               	movf	0+(??_sensor_readAll+27)+0,w
  2800  05A6  0844               	bcf	status, 7	;select IRP bank0
  2801  05A7  1383               	movwf	indf
  2802  05A8  0080               	incf	fsr0,f
  2803  05A9  0A84               	movf	1+(??_sensor_readAll+27)+0,w
  2804  05AA  0845               	movwf	indf
  2805  05AB  0080               	
  2806                           l1601:	
  2807  05AC                     	movlw	low(01h)
  2808  05AC  3001               	movwf	(??_sensor_readAll+0)+0
  2809  05AD  00A9               	movf	(??_sensor_readAll+0)+0,w
  2810  05AE  0829               	addwf	(sensor_readAll@i),f
  2811  05AF  07C9               	goto	l1603
  2812  05B0  2DB1               	
  2813                           l89:	
  2814  05B1                     	
  2815                           l1603:	
  2816  05B1                     	movf	(sensor_readAll@n),w
  2817  05B1  0828               	subwf	(sensor_readAll@i),w
  2818  05B2  0249               	skipc
  2819  05B3  1C03               	goto	u1431
  2820  05B4  2DB6               	goto	u1430
  2821  05B5  2DB7               u1431:
  2822  05B6                     	goto	l1599
  2823  05B6  2CEB               u1430:
  2824  05B7                     	goto	l92
  2825  05B7  2DB8               	
  2826                           l91:	
  2827  05B8                     	line	31
  2828                           	
  2829                           l92:	
  2830  05B8                     	return
  2831  05B8  0008               	opt stack 0
  2832                           GLOBAL	__end_of_sensor_readAll
  2833                           	__end_of_sensor_readAll:
  2834  05B9                     	signat	_sensor_readAll,8313
  2835                           	global	___lmul
  2836                           
  2837 ;; *************** function ___lmul *****************
  2838 ;; Defined at:
  2839 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2842 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  product         4   10[COMMON] unsigned long 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  4    0[BANK0 ] unsigned long 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       8       0       0       0
  2855 ;;      Locals:         4       0       0       0       0
  2856 ;;      Temps:          1       0       0       0       0
  2857 ;;      Totals:         5       8       0       0       0
  2858 ;;Total ram usage:       13 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_sensor_readAll
  2864 ;;		_sensor_read
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2868                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2869                           	line	15
  2870                           global __ptext5
  2871                           __ptext5:	;psect for function ___lmul
  2872  011F                     psect	text5
  2873                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2874                           	line	15
  2875                           	global	__size_of___lmul
  2876                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  2877  004C                     	
  2878                           ___lmul:	
  2879  011F                     ;incstack = 0
  2880                           	opt	stack 6
  2881                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2882                           	line	119
  2883                           	
  2884                           l1443:	
  2885  011F                     	movlw	high highword(0)
  2886  011F  3000               	movwf	(___lmul@product+3)
  2887  0120  00FD               	movlw	low highword(0)
  2888  0121  3000               	movwf	(___lmul@product+2)
  2889  0122  00FC               	movlw	high(0)
  2890  0123  3000               	movwf	(___lmul@product+1)
  2891  0124  00FB               	movlw	low(0)
  2892  0125  3000               	movwf	(___lmul@product)
  2893  0126  00FA               
  2894                           	goto	l1445
  2895  0127  2928               	line	120
  2896                           	
  2897                           l313:	
  2898  0128                     	line	121
  2899                           	
  2900                           l1445:	
  2901  0128                     	bcf	status, 5	;RP0=0, select bank0
  2902  0128  1283               	bcf	status, 6	;RP1=0, select bank0
  2903  0129  1303               	btfss	(___lmul@multiplier),(0)&7
  2904  012A  1C20               	goto	u1161
  2905  012B  292D               	goto	u1160
  2906  012C  292E               u1161:
  2907  012D                     	goto	l1449
  2908  012D  2946               u1160:
  2909  012E                     	line	122
  2910                           	
  2911                           l1447:	
  2912  012E                     	movf	(___lmul@multiplicand),w
  2913  012E  0824               	addwf	(___lmul@product),f
  2914  012F  07FA               	movf	(___lmul@multiplicand+1),w
  2915  0130  0825               	clrz
  2916  0131  1103               	skipnc
  2917  0132  1803               	addlw	1
  2918  0133  3E01               	skipnz
  2919  0134  1903               	goto	u1171
  2920  0135  2937               	addwf	(___lmul@product+1),f
  2921  0136  07FB               u1171:
  2922  0137                     	movf	(___lmul@multiplicand+2),w
  2923  0137  0826               	clrz
  2924  0138  1103               	skipnc
  2925  0139  1803               	addlw	1
  2926  013A  3E01               	skipnz
  2927  013B  1903               	goto	u1172
  2928  013C  293E               	addwf	(___lmul@product+2),f
  2929  013D  07FC               u1172:
  2930  013E                     	movf	(___lmul@multiplicand+3),w
  2931  013E  0827               	clrz
  2932  013F  1103               	skipnc
  2933  0140  1803               	addlw	1
  2934  0141  3E01               	skipnz
  2935  0142  1903               	goto	u1173
  2936  0143  2945               	addwf	(___lmul@product+3),f
  2937  0144  07FD               u1173:
  2938  0145                     
  2939                           	goto	l1449
  2940  0145  2946               	
  2941                           l314:	
  2942  0146                     	line	123
  2943                           	
  2944                           l1449:	
  2945  0146                     	movlw	01h
  2946  0146  3001               	movwf	(??___lmul+0)+0
  2947  0147  00F9               u1185:
  2948  0148                     	clrc
  2949  0148  1003               	rlf	(___lmul@multiplicand),f
  2950  0149  0DA4               	rlf	(___lmul@multiplicand+1),f
  2951  014A  0DA5               	rlf	(___lmul@multiplicand+2),f
  2952  014B  0DA6               	rlf	(___lmul@multiplicand+3),f
  2953  014C  0DA7               	decfsz	(??___lmul+0)+0
  2954  014D  0BF9               	goto	u1185
  2955  014E  2948               	line	124
  2956                           	
  2957                           l1451:	
  2958  014F                     	movlw	01h
  2959  014F  3001               u1195:
  2960  0150                     	clrc
  2961  0150  1003               	rrf	(___lmul@multiplier+3),f
  2962  0151  0CA3               	rrf	(___lmul@multiplier+2),f
  2963  0152  0CA2               	rrf	(___lmul@multiplier+1),f
  2964  0153  0CA1               	rrf	(___lmul@multiplier),f
  2965  0154  0CA0               	addlw	-1
  2966  0155  3EFF               	skipz
  2967  0156  1D03               	goto	u1195
  2968  0157  2950               
  2969                           	line	125
  2970                           	movf	(___lmul@multiplier+3),w
  2971  0158  0823               	iorwf	(___lmul@multiplier+2),w
  2972  0159  0422               	iorwf	(___lmul@multiplier+1),w
  2973  015A  0421               	iorwf	(___lmul@multiplier),w
  2974  015B  0420               	skipz
  2975  015C  1D03               	goto	u1201
  2976  015D  295F               	goto	u1200
  2977  015E  2960               u1201:
  2978  015F                     	goto	l1445
  2979  015F  2928               u1200:
  2980  0160                     	goto	l1453
  2981  0160  2961               	
  2982                           l315:	
  2983  0161                     	line	128
  2984                           	
  2985                           l1453:	
  2986  0161                     	movf	(___lmul@product+3),w
  2987  0161  087D               	movwf	(?___lmul+3)
  2988  0162  00A3               	movf	(___lmul@product+2),w
  2989  0163  087C               	movwf	(?___lmul+2)
  2990  0164  00A2               	movf	(___lmul@product+1),w
  2991  0165  087B               	movwf	(?___lmul+1)
  2992  0166  00A1               	movf	(___lmul@product),w
  2993  0167  087A               	movwf	(?___lmul)
  2994  0168  00A0               
  2995                           	goto	l316
  2996  0169  296A               	
  2997                           l1455:	
  2998  016A                     	line	129
  2999                           	
  3000                           l316:	
  3001  016A                     	return
  3002  016A  0008               	opt stack 0
  3003                           GLOBAL	__end_of___lmul
  3004                           	__end_of___lmul:
  3005  016B                     	signat	___lmul,8316
  3006                           	global	_ADC_read
  3007                           
  3008 ;; *************** function _ADC_read *****************
  3009 ;; Defined at:
  3010 ;;		line 16 in file "analog.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  canais          1    wreg     unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  canais          1    8[COMMON] unsigned char 
  3015 ;;  Valor_ADC       2    6[COMMON] unsigned int 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  2    0[COMMON] unsigned int 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         2       0       0       0       0
  3026 ;;      Locals:         5       0       0       0       0
  3027 ;;      Temps:          2       0       0       0       0
  3028 ;;      Totals:         9       0       0       0       0
  3029 ;;Total ram usage:        9 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_sensor_readAll
  3035 ;;		_sensor_read
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3039                           	file	"analog.c"
  3040                           	line	16
  3041                           global __ptext6
  3042                           __ptext6:	;psect for function _ADC_read
  3043  0091                     psect	text6
  3044                           	file	"analog.c"
  3045                           	line	16
  3046                           	global	__size_of_ADC_read
  3047                           	__size_of_ADC_read	equ	__end_of_ADC_read-_ADC_read
  3048  0045                     	
  3049                           _ADC_read:	
  3050  0091                     ;incstack = 0
  3051                           	opt	stack 6
  3052                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  3053                           ;ADC_read@canais stored from wreg
  3054                           	movwf	(ADC_read@canais)
  3055  0091  00F8               	line	18
  3056                           	
  3057                           l1367:	
  3058  0092                     ;analog.c: 16: unsigned int ADC_read (unsigned char canais);analog.c: 17: {;analog.c: 18
                                 :     unsigned int Valor_ADC = 0;
  3059                           	clrf	(ADC_read@Valor_ADC)
  3060  0092  01F6               	clrf	(ADC_read@Valor_ADC+1)
  3061  0093  01F7               	line	19
  3062                           	
  3063                           l1369:	
  3064  0094                     ;analog.c: 19:     ADCON0bits.CHS = canais < 4 ? canais : 0;
  3065                           	movlw	low(04h)
  3066  0094  3004               	subwf	(ADC_read@canais),w
  3067  0095  0278               	skipc
  3068  0096  1C03               	goto	u1051
  3069  0097  2899               	goto	u1050
  3070  0098  289A               u1051:
  3071  0099                     	goto	l1373
  3072  0099  289D               u1050:
  3073  009A                     	
  3074                           l1371:	
  3075  009A                     	clrf	(_ADC_read$99)
  3076  009A  01F4               	clrf	(_ADC_read$99+1)
  3077  009B  01F5               	goto	l1375
  3078  009C  28A5               	
  3079                           l17:	
  3080  009D                     	
  3081                           l1373:	
  3082  009D                     	movf	(ADC_read@canais),w
  3083  009D  0878               	movwf	(??_ADC_read+0)+0
  3084  009E  00F2               	clrf	(??_ADC_read+0)+0+1
  3085  009F  01F3               	movf	0+(??_ADC_read+0)+0,w
  3086  00A0  0872               	movwf	(_ADC_read$99)
  3087  00A1  00F4               	movf	1+(??_ADC_read+0)+0,w
  3088  00A2  0873               	movwf	(_ADC_read$99+1)
  3089  00A3  00F5               	goto	l1375
  3090  00A4  28A5               	
  3091                           l19:	
  3092  00A5                     	
  3093                           l1375:	
  3094  00A5                     	movf	(_ADC_read$99),w
  3095  00A5  0874               	movwf	(??_ADC_read+0)+0
  3096  00A6  00F2               	rlf	(??_ADC_read+0)+0,f
  3097  00A7  0DF2               	rlf	(??_ADC_read+0)+0,f
  3098  00A8  0DF2               	bcf	status, 5	;RP0=0, select bank0
  3099  00A9  1283               	bcf	status, 6	;RP1=0, select bank0
  3100  00AA  1303               	movf	(31),w	;volatile
  3101  00AB  081F               	xorwf	(??_ADC_read+0)+0,w
  3102  00AC  0672               	andlw	not (((1<<4)-1)<<2)
  3103  00AD  39C3               	xorwf	(??_ADC_read+0)+0,w
  3104  00AE  0672               	movwf	(31)	;volatile
  3105  00AF  009F               	line	20
  3106                           	
  3107                           l1377:	
  3108  00B0                     ;analog.c: 20:     ADCON0bits.GO = 1;
  3109                           	bsf	(31),1	;volatile
  3110  00B0  149F               	line	23
  3111                           ;analog.c: 23:     while (ADCON0bits.GO);
  3112                           	goto	l20
  3113  00B1  28B2               	
  3114                           l21:	
  3115  00B2                     	
  3116                           l20:	
  3117  00B2                     	btfsc	(31),1	;volatile
  3118  00B2  189F               	goto	u1061
  3119  00B3  28B5               	goto	u1060
  3120  00B4  28B6               u1061:
  3121  00B5                     	goto	l20
  3122  00B5  28B2               u1060:
  3123  00B6                     	goto	l1379
  3124  00B6  28B7               	
  3125                           l22:	
  3126  00B7                     	line	24
  3127                           	
  3128                           l1379:	
  3129  00B7                     ;analog.c: 24:     Valor_ADC = ADRESH;
  3130                           	movf	(30),w	;volatile
  3131  00B7  081E               	movwf	(??_ADC_read+0)+0
  3132  00B8  00F2               	clrf	(??_ADC_read+0)+0+1
  3133  00B9  01F3               	movf	0+(??_ADC_read+0)+0,w
  3134  00BA  0872               	movwf	(ADC_read@Valor_ADC)
  3135  00BB  00F6               	movf	1+(??_ADC_read+0)+0,w
  3136  00BC  0873               	movwf	(ADC_read@Valor_ADC+1)
  3137  00BD  00F7               	line	25
  3138                           ;analog.c: 25:     Valor_ADC <<=8;
  3139                           	movlw	08h
  3140  00BE  3008               	
  3141                           u1075:
  3142  00BF                     	clrc
  3143  00BF  1003               	rlf	(ADC_read@Valor_ADC),f
  3144  00C0  0DF6               	rlf	(ADC_read@Valor_ADC+1),f
  3145  00C1  0DF7               	addlw	-1
  3146  00C2  3EFF               	skipz
  3147  00C3  1D03               	goto	u1075
  3148  00C4  28BF               	line	26
  3149                           ;analog.c: 26:     Valor_ADC += ADRESL;
  3150                           	bsf	status, 5	;RP0=1, select bank1
  3151  00C5  1683               	bcf	status, 6	;RP1=0, select bank1
  3152  00C6  1303               	movf	(158)^080h,w	;volatile
  3153  00C7  081E               	movwf	(??_ADC_read+0)+0
  3154  00C8  00F2               	clrf	(??_ADC_read+0)+0+1
  3155  00C9  01F3               	movf	0+(??_ADC_read+0)+0,w
  3156  00CA  0872               	addwf	(ADC_read@Valor_ADC),f
  3157  00CB  07F6               	skipnc
  3158  00CC  1803               	incf	(ADC_read@Valor_ADC+1),f
  3159  00CD  0AF7               	movf	1+(??_ADC_read+0)+0,w
  3160  00CE  0873               	addwf	(ADC_read@Valor_ADC+1),f
  3161  00CF  07F7               	line	27
  3162                           ;analog.c: 27:     return (Valor_ADC);
  3163                           	movf	(ADC_read@Valor_ADC+1),w
  3164  00D0  0877               	movwf	(?_ADC_read+1)
  3165  00D1  00F1               	movf	(ADC_read@Valor_ADC),w
  3166  00D2  0876               	movwf	(?_ADC_read)
  3167  00D3  00F0               	goto	l23
  3168  00D4  28D5               	
  3169                           l1381:	
  3170  00D5                     	line	28
  3171                           	
  3172                           l23:	
  3173  00D5                     	return
  3174  00D5  0008               	opt stack 0
  3175                           GLOBAL	__end_of_ADC_read
  3176                           	__end_of_ADC_read:
  3177  00D6                     	signat	_ADC_read,4218
  3178                           	global	_sensor_init
  3179                           
  3180 ;; *************** function _sensor_init *****************
  3181 ;; Defined at:
  3182 ;;		line 10 in file "sensor.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  ptr             1    wreg     PTR struct sensor_t
  3185 ;;		 -> sensor(48), 
  3186 ;;  ch              1    4[COMMON] unsigned char 
  3187 ;;  tmin            2    5[COMMON] int 
  3188 ;;  tmax            2    7[COMMON] int 
  3189 ;;  alvo            2    9[COMMON] int 
  3190 ;;  aceitavel       1   11[COMMON] unsigned char 
  3191 ;;  toleravel       1   12[COMMON] unsigned char 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  ptr             1   13[COMMON] PTR struct sensor_t
  3194 ;;		 -> sensor(48), 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         9       0       0       0       0
  3205 ;;      Locals:         1       0       0       0       0
  3206 ;;      Temps:          0       4       0       0       0
  3207 ;;      Totals:        10       4       0       0       0
  3208 ;;Total ram usage:       14 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    1
  3211 ;; This function calls:
  3212 ;;		___bmul
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3218                           	file	"sensor.c"
  3219                           	line	10
  3220                           global __ptext7
  3221                           __ptext7:	;psect for function _sensor_init
  3222  031C                     psect	text7
  3223                           	file	"sensor.c"
  3224                           	line	10
  3225                           	global	__size_of_sensor_init
  3226                           	__size_of_sensor_init	equ	__end_of_sensor_init-_sensor_init
  3227  008E                     	
  3228                           _sensor_init:	
  3229  031C                     ;incstack = 0
  3230                           	opt	stack 6
  3231                           ; Regs used in _sensor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3232                           ;sensor_init@ptr stored from wreg
  3233                           	movwf	(sensor_init@ptr)
  3234  031C  00FD               	line	12
  3235                           	
  3236                           l1595:	
  3237  031D                     ;sensor.c: 10: void sensor_init(struct sensor_t * ptr, char ch, int tmin, int tmax, int 
                                 alvo, char aceitavel, char toleravel);sensor.c: 11: {;sensor.c: 12:     (ptr+ch)->CH = c
                                 h;
  3238                           	movf	(sensor_init@ch),w
  3239  031D  0874               	bcf	status, 5	;RP0=0, select bank0
  3240  031E  1283               	bcf	status, 6	;RP1=0, select bank0
  3241  031F  1303               	movwf	(??_sensor_init+0)+0
  3242  0320  00A0               	clrf	(??_sensor_init+0)+0+1
  3243  0321  01A1               	movlw	low(0Ch)
  3244  0322  300C               	movwf	(??_sensor_init+2)+0
  3245  0323  00A2               	movf	(??_sensor_init+2)+0,w
  3246  0324  0822               	movwf	(___bmul@multiplicand)
  3247  0325  00F0               	movf	(sensor_init@ch),w
  3248  0326  0874               	fcall	___bmul
  3249  0327  120A  158A  27A4  120A  118A  	addwf	(sensor_init@ptr),w
  3250  032C  077D               	bcf	status, 5	;RP0=0, select bank0
  3251  032D  1283               	bcf	status, 6	;RP1=0, select bank0
  3252  032E  1303               	movwf	(??_sensor_init+3)+0
  3253  032F  00A3               	movf	0+(??_sensor_init+3)+0,w
  3254  0330  0823               	movwf	fsr0
  3255  0331  0084               	movf	0+(??_sensor_init+0)+0,w
  3256  0332  0820               	bcf	status, 7	;select IRP bank0
  3257  0333  1383               	movwf	indf
  3258  0334  0080               	incf	fsr0,f
  3259  0335  0A84               	movf	1+(??_sensor_init+0)+0,w
  3260  0336  0821               	movwf	indf
  3261  0337  0080               	line	13
  3262                           ;sensor.c: 13:     (ptr+ch)->Tmin = tmin;
  3263                           	movlw	low(0Ch)
  3264  0338  300C               	movwf	(??_sensor_init+0)+0
  3265  0339  00A0               	movf	(??_sensor_init+0)+0,w
  3266  033A  0820               	movwf	(___bmul@multiplicand)
  3267  033B  00F0               	movf	(sensor_init@ch),w
  3268  033C  0874               	fcall	___bmul
  3269  033D  120A  158A  27A4  120A  118A  	addwf	(sensor_init@ptr),w
  3270  0342  077D               	bcf	status, 5	;RP0=0, select bank0
  3271  0343  1283               	bcf	status, 6	;RP1=0, select bank0
  3272  0344  1303               	movwf	(??_sensor_init+1)+0
  3273  0345  00A1               	movf	0+(??_sensor_init+1)+0,w
  3274  0346  0821               	addlw	06h
  3275  0347  3E06               	movwf	fsr0
  3276  0348  0084               	movf	(sensor_init@tmin),w
  3277  0349  0875               	bcf	status, 7	;select IRP bank0
  3278  034A  1383               	movwf	indf
  3279  034B  0080               	incf	fsr0,f
  3280  034C  0A84               	movf	(sensor_init@tmin+1),w
  3281  034D  0876               	movwf	indf
  3282  034E  0080               	line	14
  3283                           ;sensor.c: 14:     (ptr+ch)->Tmax = tmax;
  3284                           	movlw	low(0Ch)
  3285  034F  300C               	movwf	(??_sensor_init+0)+0
  3286  0350  00A0               	movf	(??_sensor_init+0)+0,w
  3287  0351  0820               	movwf	(___bmul@multiplicand)
  3288  0352  00F0               	movf	(sensor_init@ch),w
  3289  0353  0874               	fcall	___bmul
  3290  0354  120A  158A  27A4  120A  118A  	addwf	(sensor_init@ptr),w
  3291  0359  077D               	bcf	status, 5	;RP0=0, select bank0
  3292  035A  1283               	bcf	status, 6	;RP1=0, select bank0
  3293  035B  1303               	movwf	(??_sensor_init+1)+0
  3294  035C  00A1               	movf	0+(??_sensor_init+1)+0,w
  3295  035D  0821               	addlw	08h
  3296  035E  3E08               	movwf	fsr0
  3297  035F  0084               	movf	(sensor_init@tmax),w
  3298  0360  0877               	bcf	status, 7	;select IRP bank0
  3299  0361  1383               	movwf	indf
  3300  0362  0080               	incf	fsr0,f
  3301  0363  0A84               	movf	(sensor_init@tmax+1),w
  3302  0364  0878               	movwf	indf
  3303  0365  0080               	line	15
  3304                           ;sensor.c: 15:     (ptr+ch)->Alvo = alvo;
  3305                           	movlw	low(0Ch)
  3306  0366  300C               	movwf	(??_sensor_init+0)+0
  3307  0367  00A0               	movf	(??_sensor_init+0)+0,w
  3308  0368  0820               	movwf	(___bmul@multiplicand)
  3309  0369  00F0               	movf	(sensor_init@ch),w
  3310  036A  0874               	fcall	___bmul
  3311  036B  120A  158A  27A4  120A  118A  	addwf	(sensor_init@ptr),w
  3312  0370  077D               	bcf	status, 5	;RP0=0, select bank0
  3313  0371  1283               	bcf	status, 6	;RP1=0, select bank0
  3314  0372  1303               	movwf	(??_sensor_init+1)+0
  3315  0373  00A1               	movf	0+(??_sensor_init+1)+0,w
  3316  0374  0821               	addlw	04h
  3317  0375  3E04               	movwf	fsr0
  3318  0376  0084               	movf	(sensor_init@alvo),w
  3319  0377  0879               	bcf	status, 7	;select IRP bank0
  3320  0378  1383               	movwf	indf
  3321  0379  0080               	incf	fsr0,f
  3322  037A  0A84               	movf	(sensor_init@alvo+1),w
  3323  037B  087A               	movwf	indf
  3324  037C  0080               	line	16
  3325                           ;sensor.c: 16:     (ptr+ch)->aceitavel = aceitavel;
  3326                           	movf	(sensor_init@aceitavel),w
  3327  037D  087B               	movwf	(??_sensor_init+0)+0
  3328  037E  00A0               	movlw	low(0Ch)
  3329  037F  300C               	movwf	(??_sensor_init+1)+0
  3330  0380  00A1               	movf	(??_sensor_init+1)+0,w
  3331  0381  0821               	movwf	(___bmul@multiplicand)
  3332  0382  00F0               	movf	(sensor_init@ch),w
  3333  0383  0874               	fcall	___bmul
  3334  0384  120A  158A  27A4  120A  118A  	addwf	(sensor_init@ptr),w
  3335  0389  077D               	bcf	status, 5	;RP0=0, select bank0
  3336  038A  1283               	bcf	status, 6	;RP1=0, select bank0
  3337  038B  1303               	movwf	(??_sensor_init+2)+0
  3338  038C  00A2               	movf	0+(??_sensor_init+2)+0,w
  3339  038D  0822               	addlw	0Ah
  3340  038E  3E0A               	movwf	fsr0
  3341  038F  0084               	movf	(??_sensor_init+0)+0,w
  3342  0390  0820               	bcf	status, 7	;select IRP bank0
  3343  0391  1383               	movwf	indf
  3344  0392  0080               	line	17
  3345                           ;sensor.c: 17:     (ptr+ch)->toleravel = toleravel;
  3346                           	movf	(sensor_init@toleravel),w
  3347  0393  087C               	movwf	(??_sensor_init+0)+0
  3348  0394  00A0               	movlw	low(0Ch)
  3349  0395  300C               	movwf	(??_sensor_init+1)+0
  3350  0396  00A1               	movf	(??_sensor_init+1)+0,w
  3351  0397  0821               	movwf	(___bmul@multiplicand)
  3352  0398  00F0               	movf	(sensor_init@ch),w
  3353  0399  0874               	fcall	___bmul
  3354  039A  120A  158A  27A4  120A  118A  	addwf	(sensor_init@ptr),w
  3355  039F  077D               	bcf	status, 5	;RP0=0, select bank0
  3356  03A0  1283               	bcf	status, 6	;RP1=0, select bank0
  3357  03A1  1303               	movwf	(??_sensor_init+2)+0
  3358  03A2  00A2               	movf	0+(??_sensor_init+2)+0,w
  3359  03A3  0822               	addlw	0Bh
  3360  03A4  3E0B               	movwf	fsr0
  3361  03A5  0084               	movf	(??_sensor_init+0)+0,w
  3362  03A6  0820               	bcf	status, 7	;select IRP bank0
  3363  03A7  1383               	movwf	indf
  3364  03A8  0080               	line	18
  3365                           	
  3366                           l83:	
  3367  03A9                     	return
  3368  03A9  0008               	opt stack 0
  3369                           GLOBAL	__end_of_sensor_init
  3370                           	__end_of_sensor_init:
  3371  03AA                     	signat	_sensor_init,28793
  3372                           	global	___bmul
  3373                           
  3374 ;; *************** function ___bmul *****************
  3375 ;; Defined at:
  3376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  multiplier      1    wreg     unsigned char 
  3379 ;;  multiplicand    1    0[COMMON] unsigned char 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  multiplier      1    3[COMMON] unsigned char 
  3382 ;;  product         1    2[COMMON] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      unsigned char 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         1       0       0       0       0
  3393 ;;      Locals:         2       0       0       0       0
  3394 ;;      Temps:          1       0       0       0       0
  3395 ;;      Totals:         4       0       0       0       0
  3396 ;;Total ram usage:        4 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_sensor_init
  3402 ;;		_sensor_readAll
  3403 ;;		_main
  3404 ;;		_sensor_read
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3408                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3409                           	line	4
  3410                           global __ptext8
  3411                           __ptext8:	;psect for function ___bmul
  3412  0FA4                     psect	text8
  3413                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3414                           	line	4
  3415                           	global	__size_of___bmul
  3416                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  3417  0019                     	
  3418                           ___bmul:	
  3419  0FA4                     ;incstack = 0
  3420                           	opt	stack 6
  3421                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3422                           ;___bmul@multiplier stored from wreg
  3423                           	movwf	(___bmul@multiplier)
  3424  0FA4  00F3               	line	6
  3425                           	
  3426                           l1457:	
  3427  0FA5                     	clrf	(___bmul@product)
  3428  0FA5  01F2               	goto	l1459
  3429  0FA6  2FA7               	line	42
  3430                           	
  3431                           l325:	
  3432  0FA7                     	line	43
  3433                           	
  3434                           l1459:	
  3435  0FA7                     	btfss	(___bmul@multiplier),(0)&7
  3436  0FA7  1C73               	goto	u1211
  3437  0FA8  2FAA               	goto	u1210
  3438  0FA9  2FAB               u1211:
  3439  0FAA                     	goto	l1463
  3440  0FAA  2FB0               u1210:
  3441  0FAB                     	line	44
  3442                           	
  3443                           l1461:	
  3444  0FAB                     	movf	(___bmul@multiplicand),w
  3445  0FAB  0870               	movwf	(??___bmul+0)+0
  3446  0FAC  00F1               	movf	(??___bmul+0)+0,w
  3447  0FAD  0871               	addwf	(___bmul@product),f
  3448  0FAE  07F2               	goto	l1463
  3449  0FAF  2FB0               	
  3450                           l326:	
  3451  0FB0                     	line	45
  3452                           	
  3453                           l1463:	
  3454  0FB0                     	clrc
  3455  0FB0  1003               	rlf	(___bmul@multiplicand),f
  3456  0FB1  0DF0               
  3457                           	line	46
  3458                           	
  3459                           l1465:	
  3460  0FB2                     	clrc
  3461  0FB2  1003               	rrf	(___bmul@multiplier),f
  3462  0FB3  0CF3               
  3463                           	line	47
  3464                           	movf	((___bmul@multiplier)),w
  3465  0FB4  0873               	btfss	status,2
  3466  0FB5  1D03               	goto	u1221
  3467  0FB6  2FB8               	goto	u1220
  3468  0FB7  2FB9               u1221:
  3469  0FB8                     	goto	l1459
  3470  0FB8  2FA7               u1220:
  3471  0FB9                     	goto	l1467
  3472  0FB9  2FBA               	
  3473                           l327:	
  3474  0FBA                     	line	50
  3475                           	
  3476                           l1467:	
  3477  0FBA                     	movf	(___bmul@product),w
  3478  0FBA  0872               	goto	l328
  3479  0FBB  2FBC               	
  3480                           l1469:	
  3481  0FBC                     	line	51
  3482                           	
  3483                           l328:	
  3484  0FBC                     	return
  3485  0FBC  0008               	opt stack 0
  3486                           GLOBAL	__end_of___bmul
  3487                           	__end_of___bmul:
  3488  0FBD                     	signat	___bmul,8313
  3489                           	global	_led_monitorar
  3490                           
  3491 ;; *************** function _led_monitorar *****************
  3492 ;; Defined at:
  3493 ;;		line 28 in file "led.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  ptr             1    wreg     PTR struct sensor_t
  3496 ;;		 -> sensor(48), 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  ptr             1    9[BANK0 ] PTR struct sensor_t
  3499 ;;		 -> sensor(48), 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         0       0       0       0       0
  3510 ;;      Locals:         0       1       0       0       0
  3511 ;;      Temps:          0       0       0       0       0
  3512 ;;      Totals:         0       1       0       0       0
  3513 ;;Total ram usage:        1 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    2
  3516 ;; This function calls:
  3517 ;;		_sensor_alert
  3518 ;;		_sensor_danger
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3524                           	file	"led.c"
  3525                           	line	28
  3526                           global __ptext9
  3527                           __ptext9:	;psect for function _led_monitorar
  3528  00D6                     psect	text9
  3529                           	file	"led.c"
  3530                           	line	28
  3531                           	global	__size_of_led_monitorar
  3532                           	__size_of_led_monitorar	equ	__end_of_led_monitorar-_led_monitorar
  3533  0049                     	
  3534                           _led_monitorar:	
  3535  00D6                     ;incstack = 0
  3536                           	opt	stack 5
  3537                           ; Regs used in _led_monitorar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3538                           ;led_monitorar@ptr stored from wreg
  3539                           	bcf	status, 5	;RP0=0, select bank0
  3540  00D6  1283               	bcf	status, 6	;RP1=0, select bank0
  3541  00D7  1303               	movwf	(led_monitorar@ptr)
  3542  00D8  00A9               	line	30
  3543                           	
  3544                           l1645:	
  3545  00D9                     ;led.c: 28: void led_monitorar(struct sensor_t * ptr );led.c: 29: {;led.c: 30:         i
                                 f( sensor_danger ( ptr ) && sensor_alert (ptr) )
  3546                           	movf	(led_monitorar@ptr),w
  3547  00D9  0829               	fcall	_sensor_danger
  3548  00DA  120A  118A  2448  120A  118A  	xorlw	0
  3549  00DF  3A00               	skipnz
  3550  00E0  1903               	goto	u1481
  3551  00E1  28E3               	goto	u1480
  3552  00E2  28E4               u1481:
  3553  00E3                     	goto	l1651
  3554  00E3  28F7               u1480:
  3555  00E4                     	
  3556                           l1647:	
  3557  00E4                     	bcf	status, 5	;RP0=0, select bank0
  3558  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  3559  00E5  1303               	movf	(led_monitorar@ptr),w
  3560  00E6  0829               	fcall	_sensor_alert
  3561  00E7  120A  118A  23AA  120A  118A  	xorlw	0
  3562  00EC  3A00               	skipnz
  3563  00ED  1903               	goto	u1491
  3564  00EE  28F0               	goto	u1490
  3565  00EF  28F1               u1491:
  3566  00F0                     	goto	l1651
  3567  00F0  28F7               u1490:
  3568  00F1                     	line	32
  3569                           	
  3570                           l1649:	
  3571  00F1                     ;led.c: 31:         {;led.c: 32:             PORTCbits.RC0 = 0;
  3572                           	bcf	status, 5	;RP0=0, select bank0
  3573  00F1  1283               	bcf	status, 6	;RP1=0, select bank0
  3574  00F2  1303               	bcf	(7),0	;volatile
  3575  00F3  1007               	line	33
  3576                           ;led.c: 33:             PORTCbits.RC1 = 0;
  3577                           	bcf	(7),1	;volatile
  3578  00F4  1087               	line	34
  3579                           ;led.c: 34:             PORTCbits.RC2 = 1;
  3580                           	bsf	(7),2	;volatile
  3581  00F5  1507               	line	36
  3582                           ;led.c: 36:         }
  3583                           	goto	l179
  3584  00F6  291E               	line	37
  3585                           ;led.c: 37:         else if(sensor_alert( ptr) && !sensor_danger (ptr))
  3586                           	
  3587                           l175:	
  3588  00F7                     	
  3589                           l1651:	
  3590  00F7                     	bcf	status, 5	;RP0=0, select bank0
  3591  00F7  1283               	bcf	status, 6	;RP1=0, select bank0
  3592  00F8  1303               	movf	(led_monitorar@ptr),w
  3593  00F9  0829               	fcall	_sensor_alert
  3594  00FA  120A  118A  23AA  120A  118A  	xorlw	0
  3595  00FF  3A00               	skipnz
  3596  0100  1903               	goto	u1501
  3597  0101  2903               	goto	u1500
  3598  0102  2904               u1501:
  3599  0103                     	goto	l177
  3600  0103  2917               u1500:
  3601  0104                     	
  3602                           l1653:	
  3603  0104                     	bcf	status, 5	;RP0=0, select bank0
  3604  0104  1283               	bcf	status, 6	;RP1=0, select bank0
  3605  0105  1303               	movf	(led_monitorar@ptr),w
  3606  0106  0829               	fcall	_sensor_danger
  3607  0107  120A  118A  2448  120A  118A  	xorlw	0
  3608  010C  3A00               	skipz
  3609  010D  1D03               	goto	u1511
  3610  010E  2910               	goto	u1510
  3611  010F  2911               u1511:
  3612  0110                     	goto	l177
  3613  0110  2917               u1510:
  3614  0111                     	line	39
  3615                           	
  3616                           l1655:	
  3617  0111                     ;led.c: 38:         {;led.c: 39:             PORTCbits.RC0 = 0;
  3618                           	bcf	status, 5	;RP0=0, select bank0
  3619  0111  1283               	bcf	status, 6	;RP1=0, select bank0
  3620  0112  1303               	bcf	(7),0	;volatile
  3621  0113  1007               	line	40
  3622                           ;led.c: 40:             PORTCbits.RC2 = 0;
  3623                           	bcf	(7),2	;volatile
  3624  0114  1107               	line	41
  3625                           ;led.c: 41:             PORTCbits.RC1 = 1;
  3626                           	bsf	(7),1	;volatile
  3627  0115  1487               	line	42
  3628                           ;led.c: 42:         }
  3629                           	goto	l179
  3630  0116  291E               	line	43
  3631                           ;led.c: 43:         else
  3632                           	
  3633                           l177:	
  3634  0117                     	line	45
  3635                           ;led.c: 44:         {;led.c: 45:             PORTCbits.RC0 = 1;
  3636                           	bcf	status, 5	;RP0=0, select bank0
  3637  0117  1283               	bcf	status, 6	;RP1=0, select bank0
  3638  0118  1303               	bsf	(7),0	;volatile
  3639  0119  1407               	line	46
  3640                           ;led.c: 46:             PORTCbits.RC1 = 0;
  3641                           	bcf	(7),1	;volatile
  3642  011A  1087               	line	47
  3643                           ;led.c: 47:             PORTCbits.RC2 = 0;
  3644                           	bcf	(7),2	;volatile
  3645  011B  1107               	goto	l179
  3646  011C  291E               	line	48
  3647                           ;led.c: 48:         }
  3648                           	
  3649                           l178:	
  3650  011D                     	goto	l179
  3651  011D  291E               	
  3652                           l176:	
  3653  011E                     	line	50
  3654                           	
  3655                           l179:	
  3656  011E                     	return
  3657  011E  0008               	opt stack 0
  3658                           GLOBAL	__end_of_led_monitorar
  3659                           	__end_of_led_monitorar:
  3660  011F                     	signat	_led_monitorar,4217
  3661                           	global	_sensor_danger
  3662                           
  3663 ;; *************** function _sensor_danger *****************
  3664 ;; Defined at:
  3665 ;;		line 60 in file "sensor.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  ptr             1    wreg     PTR struct sensor_t
  3668 ;;		 -> sensor(48), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  ptr             1    8[BANK0 ] PTR struct sensor_t
  3671 ;;		 -> sensor(48), 
  3672 ;;  max             2    6[BANK0 ] int 
  3673 ;;  min             2    4[BANK0 ] int 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      unsigned char 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       0       0       0       0
  3684 ;;      Locals:         0       5       0       0       0
  3685 ;;      Temps:          3       0       0       0       0
  3686 ;;      Totals:         3       5       0       0       0
  3687 ;;Total ram usage:        8 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    1
  3690 ;; This function calls:
  3691 ;;		___awdiv
  3692 ;;		___wmul
  3693 ;; This function is called by:
  3694 ;;		_led_monitorar
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3698                           	file	"sensor.c"
  3699                           	line	60
  3700                           global __ptext10
  3701                           __ptext10:	;psect for function _sensor_danger
  3702  0448                     psect	text10
  3703                           	file	"sensor.c"
  3704                           	line	60
  3705                           	global	__size_of_sensor_danger
  3706                           	__size_of_sensor_danger	equ	__end_of_sensor_danger-_sensor_danger
  3707  009E                     	
  3708                           _sensor_danger:	
  3709  0448                     ;incstack = 0
  3710                           	opt	stack 5
  3711                           ; Regs used in _sensor_danger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3712                           ;sensor_danger@ptr stored from wreg
  3713                           	bcf	status, 5	;RP0=0, select bank0
  3714  0448  1283               	bcf	status, 6	;RP1=0, select bank0
  3715  0449  1303               	movwf	(sensor_danger@ptr)
  3716  044A  00A8               	line	64
  3717                           	
  3718                           l1423:	
  3719  044B                     ;sensor.c: 60: char sensor_danger( struct sensor_t * ptr );sensor.c: 61: {;sensor.c: 62:
                                      int min, max;;sensor.c: 64:     min = ptr->Alvo;
  3720                           	movf	(sensor_danger@ptr),w
  3721  044B  0828               	addlw	04h
  3722  044C  3E04               	movwf	fsr0
  3723  044D  0084               	bcf	status, 7	;select IRP bank0
  3724  044E  1383               	movf	indf,w
  3725  044F  0800               	movwf	(sensor_danger@min)
  3726  0450  00A4               	incf	fsr0,f
  3727  0451  0A84               	movf	indf,w
  3728  0452  0800               	movwf	(sensor_danger@min+1)
  3729  0453  00A5               	line	65
  3730                           	
  3731                           l1425:	
  3732  0454                     ;sensor.c: 65:     min -= (min*ptr->toleravel)/100;
  3733                           	movlw	064h
  3734  0454  3064               	movwf	(___awdiv@divisor)
  3735  0455  00F6               	movlw	0
  3736  0456  3000               	movwf	((___awdiv@divisor))+1
  3737  0457  00F7               	movf	(sensor_danger@ptr),w
  3738  0458  0828               	addlw	0Bh
  3739  0459  3E0B               	movwf	fsr0
  3740  045A  0084               	movf	indf,w
  3741  045B  0800               	movwf	(??_sensor_danger+0)+0
  3742  045C  00FB               	clrf	(??_sensor_danger+0)+0+1
  3743  045D  01FC               	movf	0+(??_sensor_danger+0)+0,w
  3744  045E  087B               	movwf	(___wmul@multiplier)
  3745  045F  00F0               	movf	1+(??_sensor_danger+0)+0,w
  3746  0460  087C               	movwf	(___wmul@multiplier+1)
  3747  0461  00F1               	movf	(sensor_danger@min+1),w
  3748  0462  0825               	movwf	(___wmul@multiplicand+1)
  3749  0463  00F3               	movf	(sensor_danger@min),w
  3750  0464  0824               	movwf	(___wmul@multiplicand)
  3751  0465  00F2               	fcall	___wmul
  3752  0466  120A  158A  27D8  120A  118A  	movf	(1+(?___wmul)),w
  3753  046B  0871               	movwf	(___awdiv@dividend+1)
  3754  046C  00F9               	movf	(0+(?___wmul)),w
  3755  046D  0870               	movwf	(___awdiv@dividend)
  3756  046E  00F8               	fcall	___awdiv
  3757  046F  120A  118A  221B  120A  118A  	movf	(0+(?___awdiv)),w
  3758  0474  0876               	bcf	status, 5	;RP0=0, select bank0
  3759  0475  1283               	bcf	status, 6	;RP1=0, select bank0
  3760  0476  1303               	subwf	(sensor_danger@min),f
  3761  0477  02A4               	movf	(1+(?___awdiv)),w
  3762  0478  0877               	skipc
  3763  0479  1C03               	decf	(sensor_danger@min+1),f
  3764  047A  03A5               	subwf	(sensor_danger@min+1),f
  3765  047B  02A5               	line	66
  3766                           	
  3767                           l1427:	
  3768  047C                     ;sensor.c: 66:     max = ptr->Alvo;
  3769                           	movf	(sensor_danger@ptr),w
  3770  047C  0828               	addlw	04h
  3771  047D  3E04               	movwf	fsr0
  3772  047E  0084               	bcf	status, 7	;select IRP bank0
  3773  047F  1383               	movf	indf,w
  3774  0480  0800               	movwf	(sensor_danger@max)
  3775  0481  00A6               	incf	fsr0,f
  3776  0482  0A84               	movf	indf,w
  3777  0483  0800               	movwf	(sensor_danger@max+1)
  3778  0484  00A7               	line	67
  3779                           ;sensor.c: 67:     max += (max*ptr->toleravel)/100;
  3780                           	movlw	064h
  3781  0485  3064               	movwf	(___awdiv@divisor)
  3782  0486  00F6               	movlw	0
  3783  0487  3000               	movwf	((___awdiv@divisor))+1
  3784  0488  00F7               	movf	(sensor_danger@ptr),w
  3785  0489  0828               	addlw	0Bh
  3786  048A  3E0B               	movwf	fsr0
  3787  048B  0084               	movf	indf,w
  3788  048C  0800               	movwf	(??_sensor_danger+0)+0
  3789  048D  00FB               	clrf	(??_sensor_danger+0)+0+1
  3790  048E  01FC               	movf	0+(??_sensor_danger+0)+0,w
  3791  048F  087B               	movwf	(___wmul@multiplier)
  3792  0490  00F0               	movf	1+(??_sensor_danger+0)+0,w
  3793  0491  087C               	movwf	(___wmul@multiplier+1)
  3794  0492  00F1               	movf	(sensor_danger@max+1),w
  3795  0493  0827               	movwf	(___wmul@multiplicand+1)
  3796  0494  00F3               	movf	(sensor_danger@max),w
  3797  0495  0826               	movwf	(___wmul@multiplicand)
  3798  0496  00F2               	fcall	___wmul
  3799  0497  120A  158A  27D8  120A  118A  	movf	(1+(?___wmul)),w
  3800  049C  0871               	movwf	(___awdiv@dividend+1)
  3801  049D  00F9               	movf	(0+(?___wmul)),w
  3802  049E  0870               	movwf	(___awdiv@dividend)
  3803  049F  00F8               	fcall	___awdiv
  3804  04A0  120A  118A  221B  120A  118A  	movf	(0+(?___awdiv)),w
  3805  04A5  0876               	bcf	status, 5	;RP0=0, select bank0
  3806  04A6  1283               	bcf	status, 6	;RP1=0, select bank0
  3807  04A7  1303               	addwf	(sensor_danger@max),f
  3808  04A8  07A6               	skipnc
  3809  04A9  1803               	incf	(sensor_danger@max+1),f
  3810  04AA  0AA7               	movf	(1+(?___awdiv)),w
  3811  04AB  0877               	addwf	(sensor_danger@max+1),f
  3812  04AC  07A7               	line	69
  3813                           	
  3814                           l1429:	
  3815  04AD                     ;sensor.c: 69:     if( ptr->Valor <= min || ptr->Valor >= max )
  3816                           	movf	(sensor_danger@ptr),w
  3817  04AD  0828               	addlw	02h
  3818  04AE  3E02               	movwf	fsr0
  3819  04AF  0084               	bcf	status, 7	;select IRP bank0
  3820  04B0  1383               	movf	indf,w
  3821  04B1  0800               	movwf	(??_sensor_danger+0)+0+0
  3822  04B2  00FB               	incf	fsr0,f
  3823  04B3  0A84               	movf	indf,w
  3824  04B4  0800               	movwf	(??_sensor_danger+0)+0+1
  3825  04B5  00FC               	movf	(sensor_danger@min+1),w
  3826  04B6  0825               	xorlw	80h
  3827  04B7  3A80               	movwf	(??_sensor_danger+2)+0
  3828  04B8  00FD               	movf	1+(??_sensor_danger+0)+0,w
  3829  04B9  087C               	xorlw	80h
  3830  04BA  3A80               	subwf	(??_sensor_danger+2)+0,w
  3831  04BB  027D               	skipz
  3832  04BC  1D03               	goto	u1145
  3833  04BD  2CC0               	movf	0+(??_sensor_danger+0)+0,w
  3834  04BE  087B               	subwf	(sensor_danger@min),w
  3835  04BF  0224               u1145:
  3836  04C0                     
  3837                           	skipnc
  3838  04C0  1803               	goto	u1141
  3839  04C1  2CC3               	goto	u1140
  3840  04C2  2CC4               u1141:
  3841  04C3                     	goto	l1433
  3842  04C3  2CDE               u1140:
  3843  04C4                     	
  3844                           l1431:	
  3845  04C4                     	bcf	status, 5	;RP0=0, select bank0
  3846  04C4  1283               	bcf	status, 6	;RP1=0, select bank0
  3847  04C5  1303               	movf	(sensor_danger@ptr),w
  3848  04C6  0828               	addlw	02h
  3849  04C7  3E02               	movwf	fsr0
  3850  04C8  0084               	bcf	status, 7	;select IRP bank0
  3851  04C9  1383               	movf	indf,w
  3852  04CA  0800               	movwf	(??_sensor_danger+0)+0+0
  3853  04CB  00FB               	incf	fsr0,f
  3854  04CC  0A84               	movf	indf,w
  3855  04CD  0800               	movwf	(??_sensor_danger+0)+0+1
  3856  04CE  00FC               	movf	1+(??_sensor_danger+0)+0,w
  3857  04CF  087C               	xorlw	80h
  3858  04D0  3A80               	movwf	(??_sensor_danger+2)+0
  3859  04D1  00FD               	movf	(sensor_danger@max+1),w
  3860  04D2  0827               	xorlw	80h
  3861  04D3  3A80               	subwf	(??_sensor_danger+2)+0,w
  3862  04D4  027D               	skipz
  3863  04D5  1D03               	goto	u1155
  3864  04D6  2CD9               	movf	(sensor_danger@max),w
  3865  04D7  0826               	subwf	0+(??_sensor_danger+0)+0,w
  3866  04D8  027B               u1155:
  3867  04D9                     
  3868                           	skipc
  3869  04D9  1C03               	goto	u1151
  3870  04DA  2CDC               	goto	u1150
  3871  04DB  2CDD               u1151:
  3872  04DC                     	goto	l1439
  3873  04DC  2CE2               u1150:
  3874  04DD                     	goto	l1433
  3875  04DD  2CDE               	
  3876                           l113:	
  3877  04DE                     	line	70
  3878                           	
  3879                           l1433:	
  3880  04DE                     ;sensor.c: 70:         return( 1 );
  3881                           	movlw	low(01h)
  3882  04DE  3001               	goto	l114
  3883  04DF  2CE5               	
  3884                           l1435:	
  3885  04E0                     	goto	l114
  3886  04E0  2CE5               	
  3887                           l1437:	
  3888  04E1                     	goto	l114
  3889  04E1  2CE5               	line	71
  3890                           ;sensor.c: 71:     else
  3891                           	
  3892                           l111:	
  3893  04E2                     	line	72
  3894                           	
  3895                           l1439:	
  3896  04E2                     ;sensor.c: 72:         return( 0 );
  3897                           	movlw	low(0)
  3898  04E2  3000               	goto	l114
  3899  04E3  2CE5               	
  3900                           l1441:	
  3901  04E4                     	goto	l114
  3902  04E4  2CE5               	
  3903                           l115:	
  3904  04E5                     	line	73
  3905                           	
  3906                           l114:	
  3907  04E5                     	return
  3908  04E5  0008               	opt stack 0
  3909                           GLOBAL	__end_of_sensor_danger
  3910                           	__end_of_sensor_danger:
  3911  04E6                     	signat	_sensor_danger,4217
  3912                           	global	_sensor_alert
  3913                           
  3914 ;; *************** function _sensor_alert *****************
  3915 ;; Defined at:
  3916 ;;		line 46 in file "sensor.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  ptr             1    wreg     PTR struct sensor_t
  3919 ;;		 -> sensor(48), 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  ptr             1    8[BANK0 ] PTR struct sensor_t
  3922 ;;		 -> sensor(48), 
  3923 ;;  max             2    6[BANK0 ] int 
  3924 ;;  min             2    4[BANK0 ] int 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      unsigned char 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       0       0       0       0
  3935 ;;      Locals:         0       5       0       0       0
  3936 ;;      Temps:          3       0       0       0       0
  3937 ;;      Totals:         3       5       0       0       0
  3938 ;;Total ram usage:        8 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    1
  3941 ;; This function calls:
  3942 ;;		___awdiv
  3943 ;;		___wmul
  3944 ;; This function is called by:
  3945 ;;		_led_monitorar
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3949                           	line	46
  3950                           global __ptext11
  3951                           __ptext11:	;psect for function _sensor_alert
  3952  03AA                     psect	text11
  3953                           	file	"sensor.c"
  3954                           	line	46
  3955                           	global	__size_of_sensor_alert
  3956                           	__size_of_sensor_alert	equ	__end_of_sensor_alert-_sensor_alert
  3957  009E                     	
  3958                           _sensor_alert:	
  3959  03AA                     ;incstack = 0
  3960                           	opt	stack 5
  3961                           ; Regs used in _sensor_alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3962                           ;sensor_alert@ptr stored from wreg
  3963                           	bcf	status, 5	;RP0=0, select bank0
  3964  03AA  1283               	bcf	status, 6	;RP1=0, select bank0
  3965  03AB  1303               	movwf	(sensor_alert@ptr)
  3966  03AC  00A8               	line	50
  3967                           	
  3968                           l1403:	
  3969  03AD                     ;sensor.c: 46: char sensor_alert( struct sensor_t * ptr );sensor.c: 47: {;sensor.c: 48: 
                                     int min, max;;sensor.c: 50:     min = ptr->Alvo;
  3970                           	movf	(sensor_alert@ptr),w
  3971  03AD  0828               	addlw	04h
  3972  03AE  3E04               	movwf	fsr0
  3973  03AF  0084               	bcf	status, 7	;select IRP bank0
  3974  03B0  1383               	movf	indf,w
  3975  03B1  0800               	movwf	(sensor_alert@min)
  3976  03B2  00A4               	incf	fsr0,f
  3977  03B3  0A84               	movf	indf,w
  3978  03B4  0800               	movwf	(sensor_alert@min+1)
  3979  03B5  00A5               	line	51
  3980                           	
  3981                           l1405:	
  3982  03B6                     ;sensor.c: 51:     min -= (min*ptr->aceitavel)/100;
  3983                           	movlw	064h
  3984  03B6  3064               	movwf	(___awdiv@divisor)
  3985  03B7  00F6               	movlw	0
  3986  03B8  3000               	movwf	((___awdiv@divisor))+1
  3987  03B9  00F7               	movf	(sensor_alert@ptr),w
  3988  03BA  0828               	addlw	0Ah
  3989  03BB  3E0A               	movwf	fsr0
  3990  03BC  0084               	movf	indf,w
  3991  03BD  0800               	movwf	(??_sensor_alert+0)+0
  3992  03BE  00FB               	clrf	(??_sensor_alert+0)+0+1
  3993  03BF  01FC               	movf	0+(??_sensor_alert+0)+0,w
  3994  03C0  087B               	movwf	(___wmul@multiplier)
  3995  03C1  00F0               	movf	1+(??_sensor_alert+0)+0,w
  3996  03C2  087C               	movwf	(___wmul@multiplier+1)
  3997  03C3  00F1               	movf	(sensor_alert@min+1),w
  3998  03C4  0825               	movwf	(___wmul@multiplicand+1)
  3999  03C5  00F3               	movf	(sensor_alert@min),w
  4000  03C6  0824               	movwf	(___wmul@multiplicand)
  4001  03C7  00F2               	fcall	___wmul
  4002  03C8  120A  158A  27D8  120A  118A  	movf	(1+(?___wmul)),w
  4003  03CD  0871               	movwf	(___awdiv@dividend+1)
  4004  03CE  00F9               	movf	(0+(?___wmul)),w
  4005  03CF  0870               	movwf	(___awdiv@dividend)
  4006  03D0  00F8               	fcall	___awdiv
  4007  03D1  120A  118A  221B  120A  118A  	movf	(0+(?___awdiv)),w
  4008  03D6  0876               	bcf	status, 5	;RP0=0, select bank0
  4009  03D7  1283               	bcf	status, 6	;RP1=0, select bank0
  4010  03D8  1303               	subwf	(sensor_alert@min),f
  4011  03D9  02A4               	movf	(1+(?___awdiv)),w
  4012  03DA  0877               	skipc
  4013  03DB  1C03               	decf	(sensor_alert@min+1),f
  4014  03DC  03A5               	subwf	(sensor_alert@min+1),f
  4015  03DD  02A5               	line	52
  4016                           	
  4017                           l1407:	
  4018  03DE                     ;sensor.c: 52:     max = ptr->Alvo;
  4019                           	movf	(sensor_alert@ptr),w
  4020  03DE  0828               	addlw	04h
  4021  03DF  3E04               	movwf	fsr0
  4022  03E0  0084               	bcf	status, 7	;select IRP bank0
  4023  03E1  1383               	movf	indf,w
  4024  03E2  0800               	movwf	(sensor_alert@max)
  4025  03E3  00A6               	incf	fsr0,f
  4026  03E4  0A84               	movf	indf,w
  4027  03E5  0800               	movwf	(sensor_alert@max+1)
  4028  03E6  00A7               	line	53
  4029                           ;sensor.c: 53:     max += (max*ptr->aceitavel)/100;
  4030                           	movlw	064h
  4031  03E7  3064               	movwf	(___awdiv@divisor)
  4032  03E8  00F6               	movlw	0
  4033  03E9  3000               	movwf	((___awdiv@divisor))+1
  4034  03EA  00F7               	movf	(sensor_alert@ptr),w
  4035  03EB  0828               	addlw	0Ah
  4036  03EC  3E0A               	movwf	fsr0
  4037  03ED  0084               	movf	indf,w
  4038  03EE  0800               	movwf	(??_sensor_alert+0)+0
  4039  03EF  00FB               	clrf	(??_sensor_alert+0)+0+1
  4040  03F0  01FC               	movf	0+(??_sensor_alert+0)+0,w
  4041  03F1  087B               	movwf	(___wmul@multiplier)
  4042  03F2  00F0               	movf	1+(??_sensor_alert+0)+0,w
  4043  03F3  087C               	movwf	(___wmul@multiplier+1)
  4044  03F4  00F1               	movf	(sensor_alert@max+1),w
  4045  03F5  0827               	movwf	(___wmul@multiplicand+1)
  4046  03F6  00F3               	movf	(sensor_alert@max),w
  4047  03F7  0826               	movwf	(___wmul@multiplicand)
  4048  03F8  00F2               	fcall	___wmul
  4049  03F9  120A  158A  27D8  120A  118A  	movf	(1+(?___wmul)),w
  4050  03FE  0871               	movwf	(___awdiv@dividend+1)
  4051  03FF  00F9               	movf	(0+(?___wmul)),w
  4052  0400  0870               	movwf	(___awdiv@dividend)
  4053  0401  00F8               	fcall	___awdiv
  4054  0402  120A  118A  221B  120A  118A  	movf	(0+(?___awdiv)),w
  4055  0407  0876               	bcf	status, 5	;RP0=0, select bank0
  4056  0408  1283               	bcf	status, 6	;RP1=0, select bank0
  4057  0409  1303               	addwf	(sensor_alert@max),f
  4058  040A  07A6               	skipnc
  4059  040B  1803               	incf	(sensor_alert@max+1),f
  4060  040C  0AA7               	movf	(1+(?___awdiv)),w
  4061  040D  0877               	addwf	(sensor_alert@max+1),f
  4062  040E  07A7               	line	55
  4063                           	
  4064                           l1409:	
  4065  040F                     ;sensor.c: 55:     if( ptr->Valor <= min || ptr->Valor >= max )
  4066                           	movf	(sensor_alert@ptr),w
  4067  040F  0828               	addlw	02h
  4068  0410  3E02               	movwf	fsr0
  4069  0411  0084               	bcf	status, 7	;select IRP bank0
  4070  0412  1383               	movf	indf,w
  4071  0413  0800               	movwf	(??_sensor_alert+0)+0+0
  4072  0414  00FB               	incf	fsr0,f
  4073  0415  0A84               	movf	indf,w
  4074  0416  0800               	movwf	(??_sensor_alert+0)+0+1
  4075  0417  00FC               	movf	(sensor_alert@min+1),w
  4076  0418  0825               	xorlw	80h
  4077  0419  3A80               	movwf	(??_sensor_alert+2)+0
  4078  041A  00FD               	movf	1+(??_sensor_alert+0)+0,w
  4079  041B  087C               	xorlw	80h
  4080  041C  3A80               	subwf	(??_sensor_alert+2)+0,w
  4081  041D  027D               	skipz
  4082  041E  1D03               	goto	u1125
  4083  041F  2C22               	movf	0+(??_sensor_alert+0)+0,w
  4084  0420  087B               	subwf	(sensor_alert@min),w
  4085  0421  0224               u1125:
  4086  0422                     
  4087                           	skipnc
  4088  0422  1803               	goto	u1121
  4089  0423  2C25               	goto	u1120
  4090  0424  2C26               u1121:
  4091  0425                     	goto	l1413
  4092  0425  2C40               u1120:
  4093  0426                     	
  4094                           l1411:	
  4095  0426                     	bcf	status, 5	;RP0=0, select bank0
  4096  0426  1283               	bcf	status, 6	;RP1=0, select bank0
  4097  0427  1303               	movf	(sensor_alert@ptr),w
  4098  0428  0828               	addlw	02h
  4099  0429  3E02               	movwf	fsr0
  4100  042A  0084               	bcf	status, 7	;select IRP bank0
  4101  042B  1383               	movf	indf,w
  4102  042C  0800               	movwf	(??_sensor_alert+0)+0+0
  4103  042D  00FB               	incf	fsr0,f
  4104  042E  0A84               	movf	indf,w
  4105  042F  0800               	movwf	(??_sensor_alert+0)+0+1
  4106  0430  00FC               	movf	1+(??_sensor_alert+0)+0,w
  4107  0431  087C               	xorlw	80h
  4108  0432  3A80               	movwf	(??_sensor_alert+2)+0
  4109  0433  00FD               	movf	(sensor_alert@max+1),w
  4110  0434  0827               	xorlw	80h
  4111  0435  3A80               	subwf	(??_sensor_alert+2)+0,w
  4112  0436  027D               	skipz
  4113  0437  1D03               	goto	u1135
  4114  0438  2C3B               	movf	(sensor_alert@max),w
  4115  0439  0826               	subwf	0+(??_sensor_alert+0)+0,w
  4116  043A  027B               u1135:
  4117  043B                     
  4118                           	skipc
  4119  043B  1C03               	goto	u1131
  4120  043C  2C3E               	goto	u1130
  4121  043D  2C3F               u1131:
  4122  043E                     	goto	l1419
  4123  043E  2C44               u1130:
  4124  043F                     	goto	l1413
  4125  043F  2C40               	
  4126                           l106:	
  4127  0440                     	line	56
  4128                           	
  4129                           l1413:	
  4130  0440                     ;sensor.c: 56:         return( 1 );
  4131                           	movlw	low(01h)
  4132  0440  3001               	goto	l107
  4133  0441  2C47               	
  4134                           l1415:	
  4135  0442                     	goto	l107
  4136  0442  2C47               	
  4137                           l1417:	
  4138  0443                     	goto	l107
  4139  0443  2C47               	line	57
  4140                           ;sensor.c: 57:     else
  4141                           	
  4142                           l104:	
  4143  0444                     	line	58
  4144                           	
  4145                           l1419:	
  4146  0444                     ;sensor.c: 58:         return( 0 );
  4147                           	movlw	low(0)
  4148  0444  3000               	goto	l107
  4149  0445  2C47               	
  4150                           l1421:	
  4151  0446                     	goto	l107
  4152  0446  2C47               	
  4153                           l108:	
  4154  0447                     	line	59
  4155                           	
  4156                           l107:	
  4157  0447                     	return
  4158  0447  0008               	opt stack 0
  4159                           GLOBAL	__end_of_sensor_alert
  4160                           	__end_of_sensor_alert:
  4161  0448                     	signat	_sensor_alert,4217
  4162                           	global	___wmul
  4163                           
  4164 ;; *************** function ___wmul *****************
  4165 ;; Defined at:
  4166 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  multiplier      2    0[COMMON] unsigned int 
  4169 ;;  multiplicand    2    2[COMMON] unsigned int 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  product         2    4[COMMON] unsigned int 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  2    0[COMMON] unsigned int 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4181 ;;      Params:         4       0       0       0       0
  4182 ;;      Locals:         2       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0
  4184 ;;      Totals:         6       0       0       0       0
  4185 ;;Total ram usage:        6 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_sensor_alert
  4191 ;;		_sensor_danger
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  4195                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4196                           	line	15
  4197                           global __ptext12
  4198                           __ptext12:	;psect for function ___wmul
  4199  0FD8                     psect	text12
  4200                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4201                           	line	15
  4202                           	global	__size_of___wmul
  4203                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4204  0028                     	
  4205                           ___wmul:	
  4206  0FD8                     ;incstack = 0
  4207                           	opt	stack 5
  4208                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4209                           	line	43
  4210                           	
  4211                           l1309:	
  4212  0FD8                     	clrf	(___wmul@product)
  4213  0FD8  01F4               	clrf	(___wmul@product+1)
  4214  0FD9  01F5               	goto	l1311
  4215  0FDA  2FDB               	line	44
  4216                           	
  4217                           l301:	
  4218  0FDB                     	line	45
  4219                           	
  4220                           l1311:	
  4221  0FDB                     	btfss	(___wmul@multiplier),(0)&7
  4222  0FDB  1C70               	goto	u911
  4223  0FDC  2FDE               	goto	u910
  4224  0FDD  2FDF               u911:
  4225  0FDE                     	goto	l302
  4226  0FDE  2FE5               u910:
  4227  0FDF                     	line	46
  4228                           	
  4229                           l1313:	
  4230  0FDF                     	movf	(___wmul@multiplicand),w
  4231  0FDF  0872               	addwf	(___wmul@product),f
  4232  0FE0  07F4               	skipnc
  4233  0FE1  1803               	incf	(___wmul@product+1),f
  4234  0FE2  0AF5               	movf	(___wmul@multiplicand+1),w
  4235  0FE3  0873               	addwf	(___wmul@product+1),f
  4236  0FE4  07F5               	
  4237                           l302:	
  4238  0FE5                     	line	47
  4239                           	movlw	01h
  4240  0FE5  3001               	
  4241                           u925:
  4242  0FE6                     	clrc
  4243  0FE6  1003               	rlf	(___wmul@multiplicand),f
  4244  0FE7  0DF2               	rlf	(___wmul@multiplicand+1),f
  4245  0FE8  0DF3               	addlw	-1
  4246  0FE9  3EFF               	skipz
  4247  0FEA  1D03               	goto	u925
  4248  0FEB  2FE6               	line	48
  4249                           	
  4250                           l1315:	
  4251  0FEC                     	movlw	01h
  4252  0FEC  3001               	
  4253                           u935:
  4254  0FED                     	clrc
  4255  0FED  1003               	rrf	(___wmul@multiplier+1),f
  4256  0FEE  0CF1               	rrf	(___wmul@multiplier),f
  4257  0FEF  0CF0               	addlw	-1
  4258  0FF0  3EFF               	skipz
  4259  0FF1  1D03               	goto	u935
  4260  0FF2  2FED               	line	49
  4261                           	
  4262                           l1317:	
  4263  0FF3                     	movf	((___wmul@multiplier)),w
  4264  0FF3  0870               iorwf	((___wmul@multiplier+1)),w
  4265  0FF4  0471               	btfss	status,2
  4266  0FF5  1D03               	goto	u941
  4267  0FF6  2FF8               	goto	u940
  4268  0FF7  2FF9               u941:
  4269  0FF8                     	goto	l1311
  4270  0FF8  2FDB               u940:
  4271  0FF9                     	goto	l1319
  4272  0FF9  2FFA               	
  4273                           l303:	
  4274  0FFA                     	line	52
  4275                           	
  4276                           l1319:	
  4277  0FFA                     	movf	(___wmul@product+1),w
  4278  0FFA  0875               	movwf	(?___wmul+1)
  4279  0FFB  00F1               	movf	(___wmul@product),w
  4280  0FFC  0874               	movwf	(?___wmul)
  4281  0FFD  00F0               	goto	l304
  4282  0FFE  2FFF               	
  4283                           l1321:	
  4284  0FFF                     	line	53
  4285                           	
  4286                           l304:	
  4287  0FFF                     	return
  4288  0FFF  0008               	opt stack 0
  4289                           GLOBAL	__end_of___wmul
  4290                           	__end_of___wmul:
  4291  1000                     	signat	___wmul,8314
  4292                           	global	_led_init
  4293                           
  4294 ;; *************** function _led_init *****************
  4295 ;; Defined at:
  4296 ;;		line 9 in file "led.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		None
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4310 ;;      Params:         0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4323                           	file	"led.c"
  4324                           	line	9
  4325                           global __ptext13
  4326                           __ptext13:	;psect for function _led_init
  4327  0F75                     psect	text13
  4328                           	file	"led.c"
  4329                           	line	9
  4330                           	global	__size_of_led_init
  4331                           	__size_of_led_init	equ	__end_of_led_init-_led_init
  4332  000B                     	
  4333                           _led_init:	
  4334  0F75                     ;incstack = 0
  4335                           	opt	stack 7
  4336                           ; Regs used in _led_init: []
  4337                           	line	12
  4338                           	
  4339                           l1605:	
  4340  0F75                     ;led.c: 12:     PORTCbits.RC0 = 0;
  4341                           	bcf	status, 5	;RP0=0, select bank0
  4342  0F75  1283               	bcf	status, 6	;RP1=0, select bank0
  4343  0F76  1303               	bcf	(7),0	;volatile
  4344  0F77  1007               	line	13
  4345                           ;led.c: 13:     PORTCbits.RC1 = 0;
  4346                           	bcf	(7),1	;volatile
  4347  0F78  1087               	line	14
  4348                           ;led.c: 14:     PORTCbits.RC2 = 0;
  4349                           	bcf	(7),2	;volatile
  4350  0F79  1107               	line	16
  4351                           ;led.c: 16:     TRISCbits.TRISC0 = 0;
  4352                           	bsf	status, 5	;RP0=1, select bank1
  4353  0F7A  1683               	bcf	status, 6	;RP1=0, select bank1
  4354  0F7B  1303               	bcf	(135)^080h,0	;volatile
  4355  0F7C  1007               	line	17
  4356                           ;led.c: 17:     TRISCbits.TRISC1 = 0;
  4357                           	bcf	(135)^080h,1	;volatile
  4358  0F7D  1087               	line	18
  4359                           ;led.c: 18:     TRISCbits.TRISC2 = 0;
  4360                           	bcf	(135)^080h,2	;volatile
  4361  0F7E  1107               	line	19
  4362                           	
  4363                           l169:	
  4364  0F7F                     	return
  4365  0F7F  0008               	opt stack 0
  4366                           GLOBAL	__end_of_led_init
  4367                           	__end_of_led_init:
  4368  0F80                     	signat	_led_init,89
  4369                           	global	_lcd_print
  4370                           
  4371 ;; *************** function _lcd_print *****************
  4372 ;; Defined at:
  4373 ;;		line 168 in file "lcd.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  lin             1    wreg     unsigned char 
  4376 ;;  col             1    6[COMMON] unsigned char 
  4377 ;;  str             1    7[COMMON] PTR const unsigned char 
  4378 ;;		 -> STR_1(17), 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  lin             1   10[COMMON] unsigned char 
  4381 ;;  pos             1    9[COMMON] unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         2       0       0       0       0
  4392 ;;      Locals:         2       0       0       0       0
  4393 ;;      Temps:          1       0       0       0       0
  4394 ;;      Totals:         5       0       0       0       0
  4395 ;;Total ram usage:        5 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    2
  4398 ;; This function calls:
  4399 ;;		_lcd_data
  4400 ;;		_lcd_lincol
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4406                           	file	"lcd.c"
  4407                           	line	168
  4408                           global __ptext14
  4409                           __ptext14:	;psect for function _lcd_print
  4410  0026                     psect	text14
  4411                           	file	"lcd.c"
  4412                           	line	168
  4413                           	global	__size_of_lcd_print
  4414                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  4415  0033                     	
  4416                           _lcd_print:	
  4417  0026                     ;incstack = 0
  4418                           	opt	stack 5
  4419                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4420                           ;lcd_print@lin stored from wreg
  4421                           	movwf	(lcd_print@lin)
  4422  0026  00FA               	line	170
  4423                           	
  4424                           l1549:	
  4425  0027                     ;lcd.c: 168: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 169: {;lcd.c: 170:     char pos = col;
  4426                           	movf	(lcd_print@col),w
  4427  0027  0876               	movwf	(??_lcd_print+0)+0
  4428  0028  00F8               	movf	(??_lcd_print+0)+0,w
  4429  0029  0878               	movwf	(lcd_print@pos)
  4430  002A  00F9               	line	171
  4431                           	
  4432                           l1551:	
  4433  002B                     ;lcd.c: 171:     lcd_lincol( lin, col );
  4434                           	movf	(lcd_print@col),w
  4435  002B  0876               	movwf	(??_lcd_print+0)+0
  4436  002C  00F8               	movf	(??_lcd_print+0)+0,w
  4437  002D  0878               	movwf	(lcd_lincol@col)
  4438  002E  00F3               	movf	(lcd_print@lin),w
  4439  002F  087A               	fcall	_lcd_lincol
  4440  0030  120A  158A  2791  120A  118A  	line	173
  4441                           ;lcd.c: 173:     while( *str )
  4442                           	goto	l1559
  4443  0035  284B               	
  4444                           l59:	
  4445  0036                     	line	175
  4446                           	
  4447                           l1553:	
  4448  0036                     ;lcd.c: 174:     {;lcd.c: 175:         lcd_data( *str );
  4449                           	movf	(lcd_print@str),w
  4450  0036  0877               	movwf	fsr0
  4451  0037  0084               	fcall	stringdir
  4452  0038  120A  158A  2000  120A  118A  	fcall	_lcd_data
  4453  003D  120A  118A  2059  120A  118A  	line	176
  4454                           	
  4455                           l1555:	
  4456  0042                     ;lcd.c: 176:         ++str;
  4457                           	movlw	low(01h)
  4458  0042  3001               	movwf	(??_lcd_print+0)+0
  4459  0043  00F8               	movf	(??_lcd_print+0)+0,w
  4460  0044  0878               	addwf	(lcd_print@str),f
  4461  0045  07F7               	line	177
  4462                           	
  4463                           l1557:	
  4464  0046                     ;lcd.c: 177:         ++pos;
  4465                           	movlw	low(01h)
  4466  0046  3001               	movwf	(??_lcd_print+0)+0
  4467  0047  00F8               	movf	(??_lcd_print+0)+0,w
  4468  0048  0878               	addwf	(lcd_print@pos),f
  4469  0049  07F9               	goto	l1559
  4470  004A  284B               	line	178
  4471                           ;lcd.c: 178:     }
  4472                           	
  4473                           l58:	
  4474  004B                     	line	173
  4475                           	
  4476                           l1559:	
  4477  004B                     ;lcd.c: 173:     while( *str )
  4478                           	movf	(lcd_print@str),w
  4479  004B  0877               	movwf	fsr0
  4480  004C  0084               	fcall	stringdir
  4481  004D  120A  158A  2000  120A  118A  	xorlw	0
  4482  0052  3A00               	skipz
  4483  0053  1D03               	goto	u1321
  4484  0054  2856               	goto	u1320
  4485  0055  2857               u1321:
  4486  0056                     	goto	l1553
  4487  0056  2836               u1320:
  4488  0057                     	goto	l61
  4489  0057  2858               	
  4490                           l60:	
  4491  0058                     	line	179
  4492                           	
  4493                           l61:	
  4494  0058                     	return
  4495  0058  0008               	opt stack 0
  4496                           GLOBAL	__end_of_lcd_print
  4497                           	__end_of_lcd_print:
  4498  0059                     	signat	_lcd_print,12409
  4499                           	global	_lcd_num
  4500                           
  4501 ;; *************** function _lcd_num *****************
  4502 ;; Defined at:
  4503 ;;		line 182 in file "lcd.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  lin             1    wreg     unsigned char 
  4506 ;;  col             1    4[BANK0 ] unsigned char 
  4507 ;;  num             2    5[BANK0 ] int 
  4508 ;;  tam             1    7[BANK0 ] unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  lin             1    8[BANK0 ] unsigned char 
  4511 ;;  div             2   11[BANK0 ] int 
  4512 ;;  sinal           1   10[BANK0 ] unsigned char 
  4513 ;;  size            1    9[BANK0 ] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4523 ;;      Params:         0       4       0       0       0
  4524 ;;      Locals:         0       5       0       0       0
  4525 ;;      Temps:          3       0       0       0       0
  4526 ;;      Totals:         3       9       0       0       0
  4527 ;;Total ram usage:       12 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    2
  4530 ;; This function calls:
  4531 ;;		___awdiv
  4532 ;;		___awmod
  4533 ;;		_lcd_data
  4534 ;;		_lcd_lincol
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4540                           	line	182
  4541                           global __ptext15
  4542                           __ptext15:	;psect for function _lcd_num
  4543  05B9                     psect	text15
  4544                           	file	"lcd.c"
  4545                           	line	182
  4546                           	global	__size_of_lcd_num
  4547                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  4548  00EE                     	
  4549                           _lcd_num:	
  4550  05B9                     ;incstack = 0
  4551                           	opt	stack 5
  4552                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4553                           ;lcd_num@lin stored from wreg
  4554                           	bcf	status, 5	;RP0=0, select bank0
  4555  05B9  1283               	bcf	status, 6	;RP1=0, select bank0
  4556  05BA  1303               	movwf	(lcd_num@lin)
  4557  05BB  00A8               	line	189
  4558                           	
  4559                           l1561:	
  4560  05BC                     ;lcd.c: 182: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 183:            
                                          int num, unsigned char tam );lcd.c: 184: {;lcd.c: 185:     int div;;lcd.c: 186:
                                      unsigned char size;;lcd.c: 187:     char sinal;;lcd.c: 189:     sinal = num < 0;
  4561                           	btfsc	(lcd_num@num+1),7
  4562  05BC  1BA6               	goto	u1331
  4563  05BD  2DBF               	goto	u1330
  4564  05BE  2DC1               u1331:
  4565  05BF                     	movlw	1
  4566  05BF  3001               	goto	u1340
  4567  05C0  2DC2               u1330:
  4568  05C1                     	movlw	0
  4569  05C1  3000               u1340:
  4570  05C2                     	movwf	(??_lcd_num+0)+0
  4571  05C2  00FB               	movf	(??_lcd_num+0)+0,w
  4572  05C3  087B               	movwf	(lcd_num@sinal)
  4573  05C4  00AA               	line	190
  4574                           	
  4575                           l1563:	
  4576  05C5                     ;lcd.c: 190:     if( sinal )
  4577                           	movf	((lcd_num@sinal)),w
  4578  05C5  082A               	btfsc	status,2
  4579  05C6  1903               	goto	u1351
  4580  05C7  2DC9               	goto	u1350
  4581  05C8  2DCA               u1351:
  4582  05C9                     	goto	l1567
  4583  05C9  2DD0               u1350:
  4584  05CA                     	line	191
  4585                           	
  4586                           l1565:	
  4587  05CA                     ;lcd.c: 191:         num = (~num) + 1;
  4588                           	comf	(lcd_num@num),f
  4589  05CA  09A5               	comf	(lcd_num@num+1),f
  4590  05CB  09A6               	incf	(lcd_num@num),f
  4591  05CC  0AA5               	skipnz
  4592  05CD  1903               	incf	(lcd_num@num+1),f
  4593  05CE  0AA6               	goto	l1567
  4594  05CF  2DD0               	
  4595                           l64:	
  4596  05D0                     	line	193
  4597                           	
  4598                           l1567:	
  4599  05D0                     ;lcd.c: 193:     lcd_lincol(lin, col);
  4600                           	movf	(lcd_num@col),w
  4601  05D0  0824               	movwf	(??_lcd_num+0)+0
  4602  05D1  00FB               	movf	(??_lcd_num+0)+0,w
  4603  05D2  087B               	movwf	(lcd_lincol@col)
  4604  05D3  00F3               	movf	(lcd_num@lin),w
  4605  05D4  0828               	fcall	_lcd_lincol
  4606  05D5  120A  158A  2791  120A  118A  	line	195
  4607                           	
  4608                           l1569:	
  4609  05DA                     ;lcd.c: 195:     div=10000;
  4610                           	movlw	010h
  4611  05DA  3010               	bcf	status, 5	;RP0=0, select bank0
  4612  05DB  1283               	bcf	status, 6	;RP1=0, select bank0
  4613  05DC  1303               	movwf	(lcd_num@div)
  4614  05DD  00AB               	movlw	027h
  4615  05DE  3027               	movwf	((lcd_num@div))+1
  4616  05DF  00AC               	line	196
  4617                           	
  4618                           l1571:	
  4619  05E0                     ;lcd.c: 196:     size = 5;
  4620                           	movlw	low(05h)
  4621  05E0  3005               	movwf	(??_lcd_num+0)+0
  4622  05E1  00FB               	movf	(??_lcd_num+0)+0,w
  4623  05E2  087B               	movwf	(lcd_num@size)
  4624  05E3  00A9               	line	197
  4625                           ;lcd.c: 197:     while( div >= 1 )
  4626                           	goto	l1579
  4627  05E4  2E14               	
  4628                           l66:	
  4629  05E5                     	line	199
  4630                           	
  4631                           l1573:	
  4632  05E5                     ;lcd.c: 198:     {;lcd.c: 199:         if( num/div == 0 )
  4633                           	bcf	status, 5	;RP0=0, select bank0
  4634  05E5  1283               	bcf	status, 6	;RP1=0, select bank0
  4635  05E6  1303               	movf	(lcd_num@div+1),w
  4636  05E7  082C               	movwf	(___awdiv@divisor+1)
  4637  05E8  00F7               	movf	(lcd_num@div),w
  4638  05E9  082B               	movwf	(___awdiv@divisor)
  4639  05EA  00F6               	movf	(lcd_num@num+1),w
  4640  05EB  0826               	movwf	(___awdiv@dividend+1)
  4641  05EC  00F9               	movf	(lcd_num@num),w
  4642  05ED  0825               	movwf	(___awdiv@dividend)
  4643  05EE  00F8               	fcall	___awdiv
  4644  05EF  120A  118A  221B  120A  118A  	movf	((0+(?___awdiv))),w
  4645  05F4  0876               iorwf	((1+(?___awdiv))),w
  4646  05F5  0477               	btfss	status,2
  4647  05F6  1D03               	goto	u1361
  4648  05F7  2DF9               	goto	u1360
  4649  05F8  2DFA               u1361:
  4650  05F9                     	goto	l1585
  4651  05F9  2E2E               u1360:
  4652  05FA                     	line	200
  4653                           	
  4654                           l1575:	
  4655  05FA                     ;lcd.c: 200:             --size;
  4656                           	movlw	01h
  4657  05FA  3001               	bcf	status, 5	;RP0=0, select bank0
  4658  05FB  1283               	bcf	status, 6	;RP1=0, select bank0
  4659  05FC  1303               	subwf	(lcd_num@size),f
  4660  05FD  02A9               	goto	l1577
  4661  05FE  2E00               	line	201
  4662                           ;lcd.c: 201:         else
  4663                           	
  4664                           l67:	
  4665  05FF                     	line	202
  4666                           ;lcd.c: 202:             break;
  4667                           	goto	l1585
  4668  05FF  2E2E               	
  4669                           l68:	
  4670  0600                     	line	203
  4671                           	
  4672                           l1577:	
  4673  0600                     ;lcd.c: 203:         div/=10;
  4674                           	movlw	0Ah
  4675  0600  300A               	movwf	(___awdiv@divisor)
  4676  0601  00F6               	movlw	0
  4677  0602  3000               	movwf	((___awdiv@divisor))+1
  4678  0603  00F7               	movf	(lcd_num@div+1),w
  4679  0604  082C               	movwf	(___awdiv@dividend+1)
  4680  0605  00F9               	movf	(lcd_num@div),w
  4681  0606  082B               	movwf	(___awdiv@dividend)
  4682  0607  00F8               	fcall	___awdiv
  4683  0608  120A  118A  221B  120A  118A  	movf	(1+(?___awdiv)),w
  4684  060D  0877               	bcf	status, 5	;RP0=0, select bank0
  4685  060E  1283               	bcf	status, 6	;RP1=0, select bank0
  4686  060F  1303               	movwf	(lcd_num@div+1)
  4687  0610  00AC               	movf	(0+(?___awdiv)),w
  4688  0611  0876               	movwf	(lcd_num@div)
  4689  0612  00AB               	goto	l1579
  4690  0613  2E14               	line	204
  4691                           ;lcd.c: 204:     }
  4692                           	
  4693                           l65:	
  4694  0614                     	line	197
  4695                           	
  4696                           l1579:	
  4697  0614                     ;lcd.c: 197:     while( div >= 1 )
  4698                           	movf	(lcd_num@div+1),w
  4699  0614  082C               	xorlw	80h
  4700  0615  3A80               	movwf	btemp+1
  4701  0616  00FF               	movlw	(0)^80h
  4702  0617  3080               	subwf	btemp+1,w
  4703  0618  027F               	skipz
  4704  0619  1D03               	goto	u1375
  4705  061A  2E1D               	movlw	01h
  4706  061B  3001               	subwf	(lcd_num@div),w
  4707  061C  022B               u1375:
  4708  061D                     
  4709                           	skipnc
  4710  061D  1803               	goto	u1371
  4711  061E  2E20               	goto	u1370
  4712  061F  2E21               u1371:
  4713  0620                     	goto	l1573
  4714  0620  2DE5               u1370:
  4715  0621                     	goto	l1585
  4716  0621  2E2E               	
  4717                           l69:	
  4718  0622                     	line	206
  4719                           ;lcd.c: 206:     while( tam > (size+sinal) && tam > 1 )
  4720                           	goto	l1585
  4721  0622  2E2E               	
  4722                           l71:	
  4723  0623                     	line	208
  4724                           	
  4725                           l1581:	
  4726  0623                     ;lcd.c: 207:     {;lcd.c: 208:         lcd_data(' ');
  4727                           	movlw	low(020h)
  4728  0623  3020               	fcall	_lcd_data
  4729  0624  120A  118A  2059  120A  118A  	line	209
  4730                           	
  4731                           l1583:	
  4732  0629                     ;lcd.c: 209:         --tam;
  4733                           	movlw	01h
  4734  0629  3001               	bcf	status, 5	;RP0=0, select bank0
  4735  062A  1283               	bcf	status, 6	;RP1=0, select bank0
  4736  062B  1303               	subwf	(lcd_num@tam),f
  4737  062C  02A7               	goto	l1585
  4738  062D  2E2E               	line	210
  4739                           ;lcd.c: 210:     }
  4740                           	
  4741                           l70:	
  4742  062E                     	line	206
  4743                           	
  4744                           l1585:	
  4745  062E                     ;lcd.c: 206:     while( tam > (size+sinal) && tam > 1 )
  4746                           	bcf	status, 5	;RP0=0, select bank0
  4747  062E  1283               	bcf	status, 6	;RP1=0, select bank0
  4748  062F  1303               	movf	(lcd_num@size),w
  4749  0630  0829               	addwf	(lcd_num@sinal),w
  4750  0631  072A               	movwf	(??_lcd_num+0)+0
  4751  0632  00FB               	clrf	(??_lcd_num+0)+0+1
  4752  0633  01FC               	rlf	1+(??_lcd_num+0)+0,f
  4753  0634  0DFC               	
  4754                           	movf	1+(??_lcd_num+0)+0,w
  4755  0635  087C               	xorlw	80h
  4756  0636  3A80               	movwf	(??_lcd_num+2)+0
  4757  0637  00FD               	movlw	80h
  4758  0638  3080               	subwf	(??_lcd_num+2)+0,w
  4759  0639  027D               	skipz
  4760  063A  1D03               	goto	u1385
  4761  063B  2E3E               	movf	(lcd_num@tam),w
  4762  063C  0827               	subwf	0+(??_lcd_num+0)+0,w
  4763  063D  027B               u1385:
  4764  063E                     
  4765                           	skipnc
  4766  063E  1803               	goto	u1381
  4767  063F  2E41               	goto	u1380
  4768  0640  2E42               u1381:
  4769  0641                     	goto	l1589
  4770  0641  2E4C               u1380:
  4771  0642                     	
  4772                           l1587:	
  4773  0642                     	movlw	low(02h)
  4774  0642  3002               	bcf	status, 5	;RP0=0, select bank0
  4775  0643  1283               	bcf	status, 6	;RP1=0, select bank0
  4776  0644  1303               	subwf	(lcd_num@tam),w
  4777  0645  0227               	skipnc
  4778  0646  1803               	goto	u1391
  4779  0647  2E49               	goto	u1390
  4780  0648  2E4A               u1391:
  4781  0649                     	goto	l1581
  4782  0649  2E23               u1390:
  4783  064A                     	goto	l1589
  4784  064A  2E4C               	
  4785                           l73:	
  4786  064B                     	goto	l1589
  4787  064B  2E4C               	
  4788                           l74:	
  4789  064C                     	line	212
  4790                           	
  4791                           l1589:	
  4792  064C                     ;lcd.c: 212:     if( sinal )
  4793                           	bcf	status, 5	;RP0=0, select bank0
  4794  064C  1283               	bcf	status, 6	;RP1=0, select bank0
  4795  064D  1303               	movf	((lcd_num@sinal)),w
  4796  064E  082A               	btfsc	status,2
  4797  064F  1903               	goto	u1401
  4798  0650  2E52               	goto	u1400
  4799  0651  2E53               u1401:
  4800  0652                     	goto	l76
  4801  0652  2E5A               u1400:
  4802  0653                     	line	213
  4803                           	
  4804                           l1591:	
  4805  0653                     ;lcd.c: 213:         lcd_data('-');
  4806                           	movlw	low(02Dh)
  4807  0653  302D               	fcall	_lcd_data
  4808  0654  120A  118A  2059  120A  118A  	goto	l76
  4809  0659  2E5A               	
  4810                           l75:	
  4811  065A                     	line	215
  4812                           ;lcd.c: 215:     do
  4813                           	
  4814                           l76:	
  4815  065A                     	line	217
  4816                           ;lcd.c: 216:     {;lcd.c: 217:         lcd_data( (unsigned char)(num / div) + '0' );
  4817                           	bcf	status, 5	;RP0=0, select bank0
  4818  065A  1283               	bcf	status, 6	;RP1=0, select bank0
  4819  065B  1303               	movf	(lcd_num@div+1),w
  4820  065C  082C               	movwf	(___awdiv@divisor+1)
  4821  065D  00F7               	movf	(lcd_num@div),w
  4822  065E  082B               	movwf	(___awdiv@divisor)
  4823  065F  00F6               	movf	(lcd_num@num+1),w
  4824  0660  0826               	movwf	(___awdiv@dividend+1)
  4825  0661  00F9               	movf	(lcd_num@num),w
  4826  0662  0825               	movwf	(___awdiv@dividend)
  4827  0663  00F8               	fcall	___awdiv
  4828  0664  120A  118A  221B  120A  118A  	movf	(0+(?___awdiv)),w
  4829  0669  0876               	addlw	030h
  4830  066A  3E30               	fcall	_lcd_data
  4831  066B  120A  118A  2059  120A  118A  	line	218
  4832                           ;lcd.c: 218:         num = num % div;
  4833                           	bcf	status, 5	;RP0=0, select bank0
  4834  0670  1283               	bcf	status, 6	;RP1=0, select bank0
  4835  0671  1303               	movf	(lcd_num@div+1),w
  4836  0672  082C               	movwf	(___awmod@divisor+1)
  4837  0673  00F1               	movf	(lcd_num@div),w
  4838  0674  082B               	movwf	(___awmod@divisor)
  4839  0675  00F0               	movf	(lcd_num@num+1),w
  4840  0676  0826               	movwf	(___awmod@dividend+1)
  4841  0677  00F3               	movf	(lcd_num@num),w
  4842  0678  0825               	movwf	(___awmod@dividend)
  4843  0679  00F2               	fcall	___awmod
  4844  067A  120A  118A  21B8  120A  118A  	movf	(1+(?___awmod)),w
  4845  067F  0871               	bcf	status, 5	;RP0=0, select bank0
  4846  0680  1283               	bcf	status, 6	;RP1=0, select bank0
  4847  0681  1303               	movwf	(lcd_num@num+1)
  4848  0682  00A6               	movf	(0+(?___awmod)),w
  4849  0683  0870               	movwf	(lcd_num@num)
  4850  0684  00A5               	line	219
  4851                           ;lcd.c: 219:         div/=10;
  4852                           	movlw	0Ah
  4853  0685  300A               	movwf	(___awdiv@divisor)
  4854  0686  00F6               	movlw	0
  4855  0687  3000               	movwf	((___awdiv@divisor))+1
  4856  0688  00F7               	movf	(lcd_num@div+1),w
  4857  0689  082C               	movwf	(___awdiv@dividend+1)
  4858  068A  00F9               	movf	(lcd_num@div),w
  4859  068B  082B               	movwf	(___awdiv@dividend)
  4860  068C  00F8               	fcall	___awdiv
  4861  068D  120A  118A  221B  120A  118A  	movf	(1+(?___awdiv)),w
  4862  0692  0877               	bcf	status, 5	;RP0=0, select bank0
  4863  0693  1283               	bcf	status, 6	;RP1=0, select bank0
  4864  0694  1303               	movwf	(lcd_num@div+1)
  4865  0695  00AC               	movf	(0+(?___awdiv)),w
  4866  0696  0876               	movwf	(lcd_num@div)
  4867  0697  00AB               	line	220
  4868                           	
  4869                           l1593:	
  4870  0698                     ;lcd.c: 220:     }
  4871                           	movf	(lcd_num@div+1),w
  4872  0698  082C               	xorlw	80h
  4873  0699  3A80               	movwf	btemp+1
  4874  069A  00FF               	movlw	(0)^80h
  4875  069B  3080               	subwf	btemp+1,w
  4876  069C  027F               	skipz
  4877  069D  1D03               	goto	u1415
  4878  069E  2EA1               	movlw	01h
  4879  069F  3001               	subwf	(lcd_num@div),w
  4880  06A0  022B               u1415:
  4881  06A1                     
  4882                           	skipnc
  4883  06A1  1803               	goto	u1411
  4884  06A2  2EA4               	goto	u1410
  4885  06A3  2EA5               u1411:
  4886  06A4                     	goto	l76
  4887  06A4  2E5A               u1410:
  4888  06A5                     	goto	l78
  4889  06A5  2EA6               	
  4890                           l77:	
  4891  06A6                     	line	222
  4892                           	
  4893                           l78:	
  4894  06A6                     	return
  4895  06A6  0008               	opt stack 0
  4896                           GLOBAL	__end_of_lcd_num
  4897                           	__end_of_lcd_num:
  4898  06A7                     	signat	_lcd_num,16505
  4899                           	global	_lcd_lincol
  4900                           
  4901 ;; *************** function _lcd_lincol *****************
  4902 ;; Defined at:
  4903 ;;		line 116 in file "lcd.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  lin             1    wreg     unsigned char 
  4906 ;;  col             1    3[COMMON] unsigned char 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  lin             1    5[COMMON] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4918 ;;      Params:         1       0       0       0       0
  4919 ;;      Locals:         1       0       0       0       0
  4920 ;;      Temps:          1       0       0       0       0
  4921 ;;      Totals:         3       0       0       0       0
  4922 ;;Total ram usage:        3 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    1
  4925 ;; This function calls:
  4926 ;;		_lcd_inst
  4927 ;; This function is called by:
  4928 ;;		_lcd_print
  4929 ;;		_lcd_num
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4933                           	line	116
  4934                           global __ptext16
  4935                           __ptext16:	;psect for function _lcd_lincol
  4936  0F91                     psect	text16
  4937                           	file	"lcd.c"
  4938                           	line	116
  4939                           	global	__size_of_lcd_lincol
  4940                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  4941  0013                     	
  4942                           _lcd_lincol:	
  4943  0F91                     ;incstack = 0
  4944                           	opt	stack 5
  4945                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  4946                           ;lcd_lincol@lin stored from wreg
  4947                           	movwf	(lcd_lincol@lin)
  4948  0F91  00F5               	line	118
  4949                           	
  4950                           l1401:	
  4951  0F92                     ;lcd.c: 116: void lcd_lincol ( unsigned char lin, unsigned char col);lcd.c: 117: {;lcd.c
                                 : 118:     lcd_inst ( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  4952                           	movf	(lcd_lincol@lin),w
  4953  0F92  0875               	movwf	(??_lcd_lincol+0)+0
  4954  0F93  00F4               	movlw	06h
  4955  0F94  3006               u1115:
  4956  0F95                     	clrc
  4957  0F95  1003               	rlf	(??_lcd_lincol+0)+0,f
  4958  0F96  0DF4               	addlw	-1
  4959  0F97  3EFF               	skipz
  4960  0F98  1D03               	goto	u1115
  4961  0F99  2F95               	movf	(lcd_lincol@col),w
  4962  0F9A  0873               	addwf	0+(??_lcd_lincol+0)+0,w
  4963  0F9B  0774               	andlw	07Fh
  4964  0F9C  397F               	addlw	080h
  4965  0F9D  3E80               	fcall	_lcd_inst
  4966  0F9E  120A  118A  228E  120A  158A  	line	119
  4967                           	
  4968                           l49:	
  4969  0FA3                     	return
  4970  0FA3  0008               	opt stack 0
  4971                           GLOBAL	__end_of_lcd_lincol
  4972                           	__end_of_lcd_lincol:
  4973  0FA4                     	signat	_lcd_lincol,8313
  4974                           	global	_lcd_data
  4975                           
  4976 ;; *************** function _lcd_data *****************
  4977 ;; Defined at:
  4978 ;;		line 100 in file "lcd.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  d               1    wreg     unsigned char 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  d               1    2[COMMON] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4992 ;;      Params:         0       0       0       0       0
  4993 ;;      Locals:         1       0       0       0       0
  4994 ;;      Temps:          2       0       0       0       0
  4995 ;;      Totals:         3       0       0       0       0
  4996 ;;Total ram usage:        3 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_lcd_print
  5002 ;;		_lcd_num
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5006                           	line	100
  5007                           global __ptext17
  5008                           __ptext17:	;psect for function _lcd_data
  5009  0059                     psect	text17
  5010                           	file	"lcd.c"
  5011                           	line	100
  5012                           	global	__size_of_lcd_data
  5013                           	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  5014  0038                     	
  5015                           _lcd_data:	
  5016  0059                     ;incstack = 0
  5017                           	opt	stack 6
  5018                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  5019                           ;lcd_data@d stored from wreg
  5020                           	movwf	(lcd_data@d)
  5021  0059  00F2               	line	102
  5022                           	
  5023                           l1383:	
  5024  005A                     ;lcd.c: 100: void lcd_data (unsigned char d);lcd.c: 101: {;lcd.c: 102:     PORTDbits.RD2
                                  = 1;
  5025                           	bcf	status, 5	;RP0=0, select bank0
  5026  005A  1283               	bcf	status, 6	;RP1=0, select bank0
  5027  005B  1303               	bsf	(8),2	;volatile
  5028  005C  1508               	line	103
  5029                           	
  5030                           l1385:	
  5031  005D                     ;lcd.c: 103:     PORTD = ((PORTD & 0x0F)|(d>>4<<4));
  5032                           	movf	(lcd_data@d),w
  5033  005D  0872               	movwf	(??_lcd_data+0)+0
  5034  005E  00F0               	movlw	04h
  5035  005F  3004               u1085:
  5036  0060                     	clrc
  5037  0060  1003               	rrf	(??_lcd_data+0)+0,f
  5038  0061  0CF0               	addlw	-1
  5039  0062  3EFF               	skipz
  5040  0063  1D03               	goto	u1085
  5041  0064  2860               	movf	0+(??_lcd_data+0)+0,w
  5042  0065  0870               	movwf	(??_lcd_data+1)+0
  5043  0066  00F1               	movlw	04h
  5044  0067  3004               u1095:
  5045  0068                     	clrc
  5046  0068  1003               	rlf	(??_lcd_data+1)+0,f
  5047  0069  0DF1               	addlw	-1
  5048  006A  3EFF               	skipz
  5049  006B  1D03               	goto	u1095
  5050  006C  2868               	movf	(8),w	;volatile
  5051  006D  0808               	andlw	0Fh
  5052  006E  390F               	iorwf	0+(??_lcd_data+1)+0,w
  5053  006F  0471               	movwf	(8)	;volatile
  5054  0070  0088               	line	104
  5055                           	
  5056                           l1387:	
  5057  0071                     ;lcd.c: 104:     PORTDbits.RD3 = 0;
  5058                           	bcf	(8),3	;volatile
  5059  0071  1188               	line	105
  5060                           	
  5061                           l1389:	
  5062  0072                     ;lcd.c: 105:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  5063                           	opt asmopt_push
  5064                           opt asmopt_off
  5065                           	movlw	66
  5066  0072  3042               movwf	((??_lcd_data+0)+0),f
  5067  0073  00F0               	u1627:
  5068  0074                     decfsz	(??_lcd_data+0)+0,f
  5069  0074  0BF0               	goto	u1627
  5070  0075  2874               	nop
  5071  0076  0000               opt asmopt_pop
  5072                           
  5073                           	line	106
  5074                           	
  5075                           l1391:	
  5076  0077                     ;lcd.c: 106:     PORTDbits.RD3 = 1;
  5077                           	bcf	status, 5	;RP0=0, select bank0
  5078  0077  1283               	bcf	status, 6	;RP1=0, select bank0
  5079  0078  1303               	bsf	(8),3	;volatile
  5080  0079  1588               	line	108
  5081                           	
  5082                           l1393:	
  5083  007A                     ;lcd.c: 108:     PORTDbits.RD2 = 1;
  5084                           	bsf	(8),2	;volatile
  5085  007A  1508               	line	109
  5086                           	
  5087                           l1395:	
  5088  007B                     ;lcd.c: 109:     PORTD = ((PORTD & 0x0F)|(d<<4));
  5089                           	movf	(lcd_data@d),w
  5090  007B  0872               	movwf	(??_lcd_data+0)+0
  5091  007C  00F0               	movlw	04h
  5092  007D  3004               u1105:
  5093  007E                     	clrc
  5094  007E  1003               	rlf	(??_lcd_data+0)+0,f
  5095  007F  0DF0               	addlw	-1
  5096  0080  3EFF               	skipz
  5097  0081  1D03               	goto	u1105
  5098  0082  287E               	movf	(8),w	;volatile
  5099  0083  0808               	andlw	0Fh
  5100  0084  390F               	iorwf	0+(??_lcd_data+0)+0,w
  5101  0085  0470               	movwf	(8)	;volatile
  5102  0086  0088               	line	110
  5103                           	
  5104                           l1397:	
  5105  0087                     ;lcd.c: 110:     PORTDbits.RD3 = 0;
  5106                           	bcf	(8),3	;volatile
  5107  0087  1188               	line	111
  5108                           ;lcd.c: 111:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  5109                           	opt asmopt_push
  5110                           opt asmopt_off
  5111                           	movlw	66
  5112  0088  3042               movwf	((??_lcd_data+0)+0),f
  5113  0089  00F0               	u1637:
  5114  008A                     decfsz	(??_lcd_data+0)+0,f
  5115  008A  0BF0               	goto	u1637
  5116  008B  288A               	nop
  5117  008C  0000               opt asmopt_pop
  5118                           
  5119                           	line	112
  5120                           	
  5121                           l1399:	
  5122  008D                     ;lcd.c: 112:     PORTDbits.RD3 = 1;
  5123                           	bcf	status, 5	;RP0=0, select bank0
  5124  008D  1283               	bcf	status, 6	;RP1=0, select bank0
  5125  008E  1303               	bsf	(8),3	;volatile
  5126  008F  1588               	line	113
  5127                           	
  5128                           l46:	
  5129  0090                     	return
  5130  0090  0008               	opt stack 0
  5131                           GLOBAL	__end_of_lcd_data
  5132                           	__end_of_lcd_data:
  5133  0091                     	signat	_lcd_data,4217
  5134                           	global	___awmod
  5135                           
  5136 ;; *************** function ___awmod *****************
  5137 ;; Defined at:
  5138 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  divisor         2    0[COMMON] int 
  5141 ;;  dividend        2    2[COMMON] int 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  sign            1    6[COMMON] unsigned char 
  5144 ;;  counter         1    5[COMMON] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2    0[COMMON] int 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5154 ;;      Params:         4       0       0       0       0
  5155 ;;      Locals:         2       0       0       0       0
  5156 ;;      Temps:          1       0       0       0       0
  5157 ;;      Totals:         7       0       0       0       0
  5158 ;;Total ram usage:        7 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_lcd_num
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5167                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  5168                           	line	5
  5169                           global __ptext18
  5170                           __ptext18:	;psect for function ___awmod
  5171  01B8                     psect	text18
  5172                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  5173                           	line	5
  5174                           	global	__size_of___awmod
  5175                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  5176  0063                     	
  5177                           ___awmod:	
  5178  01B8                     ;incstack = 0
  5179                           	opt	stack 6
  5180                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5181                           	line	12
  5182                           	
  5183                           l1471:	
  5184  01B8                     	clrf	(___awmod@sign)
  5185  01B8  01F6               	line	13
  5186                           	
  5187                           l1473:	
  5188  01B9                     	btfss	(___awmod@dividend+1),7
  5189  01B9  1FF3               	goto	u1231
  5190  01BA  29BC               	goto	u1230
  5191  01BB  29BD               u1231:
  5192  01BC                     	goto	l1479
  5193  01BC  29C5               u1230:
  5194  01BD                     	line	14
  5195                           	
  5196                           l1475:	
  5197  01BD                     	comf	(___awmod@dividend),f
  5198  01BD  09F2               	comf	(___awmod@dividend+1),f
  5199  01BE  09F3               	incf	(___awmod@dividend),f
  5200  01BF  0AF2               	skipnz
  5201  01C0  1903               	incf	(___awmod@dividend+1),f
  5202  01C1  0AF3               	line	15
  5203                           	
  5204                           l1477:	
  5205  01C2                     	clrf	(___awmod@sign)
  5206  01C2  01F6               	incf	(___awmod@sign),f
  5207  01C3  0AF6               	goto	l1479
  5208  01C4  29C5               	line	16
  5209                           	
  5210                           l458:	
  5211  01C5                     	line	17
  5212                           	
  5213                           l1479:	
  5214  01C5                     	btfss	(___awmod@divisor+1),7
  5215  01C5  1FF1               	goto	u1241
  5216  01C6  29C8               	goto	u1240
  5217  01C7  29C9               u1241:
  5218  01C8                     	goto	l1483
  5219  01C8  29CF               u1240:
  5220  01C9                     	line	18
  5221                           	
  5222                           l1481:	
  5223  01C9                     	comf	(___awmod@divisor),f
  5224  01C9  09F0               	comf	(___awmod@divisor+1),f
  5225  01CA  09F1               	incf	(___awmod@divisor),f
  5226  01CB  0AF0               	skipnz
  5227  01CC  1903               	incf	(___awmod@divisor+1),f
  5228  01CD  0AF1               	goto	l1483
  5229  01CE  29CF               	
  5230                           l459:	
  5231  01CF                     	line	19
  5232                           	
  5233                           l1483:	
  5234  01CF                     	movf	((___awmod@divisor)),w
  5235  01CF  0870               iorwf	((___awmod@divisor+1)),w
  5236  01D0  0471               	btfsc	status,2
  5237  01D1  1903               	goto	u1251
  5238  01D2  29D4               	goto	u1250
  5239  01D3  29D5               u1251:
  5240  01D4                     	goto	l1501
  5241  01D4  2A0A               u1250:
  5242  01D5                     	line	20
  5243                           	
  5244                           l1485:	
  5245  01D5                     	clrf	(___awmod@counter)
  5246  01D5  01F5               	incf	(___awmod@counter),f
  5247  01D6  0AF5               	line	21
  5248                           	goto	l1491
  5249  01D7  29E4               	
  5250                           l462:	
  5251  01D8                     	line	22
  5252                           	
  5253                           l1487:	
  5254  01D8                     	movlw	01h
  5255  01D8  3001               	
  5256                           u1265:
  5257  01D9                     	clrc
  5258  01D9  1003               	rlf	(___awmod@divisor),f
  5259  01DA  0DF0               	rlf	(___awmod@divisor+1),f
  5260  01DB  0DF1               	addlw	-1
  5261  01DC  3EFF               	skipz
  5262  01DD  1D03               	goto	u1265
  5263  01DE  29D9               	line	23
  5264                           	
  5265                           l1489:	
  5266  01DF                     	movlw	low(01h)
  5267  01DF  3001               	movwf	(??___awmod+0)+0
  5268  01E0  00F4               	movf	(??___awmod+0)+0,w
  5269  01E1  0874               	addwf	(___awmod@counter),f
  5270  01E2  07F5               	goto	l1491
  5271  01E3  29E4               	line	24
  5272                           	
  5273                           l461:	
  5274  01E4                     	line	21
  5275                           	
  5276                           l1491:	
  5277  01E4                     	btfss	(___awmod@divisor+1),(15)&7
  5278  01E4  1FF1               	goto	u1271
  5279  01E5  29E7               	goto	u1270
  5280  01E6  29E8               u1271:
  5281  01E7                     	goto	l1487
  5282  01E7  29D8               u1270:
  5283  01E8                     	goto	l1493
  5284  01E8  29EA               	
  5285                           l463:	
  5286  01E9                     	goto	l1493
  5287  01E9  29EA               	line	25
  5288                           	
  5289                           l464:	
  5290  01EA                     	line	26
  5291                           	
  5292                           l1493:	
  5293  01EA                     	movf	(___awmod@divisor+1),w
  5294  01EA  0871               	subwf	(___awmod@dividend+1),w
  5295  01EB  0273               	skipz
  5296  01EC  1D03               	goto	u1285
  5297  01ED  29F0               	movf	(___awmod@divisor),w
  5298  01EE  0870               	subwf	(___awmod@dividend),w
  5299  01EF  0272               u1285:
  5300  01F0                     	skipc
  5301  01F0  1C03               	goto	u1281
  5302  01F1  29F3               	goto	u1280
  5303  01F2  29F4               u1281:
  5304  01F3                     	goto	l1497
  5305  01F3  29FB               u1280:
  5306  01F4                     	line	27
  5307                           	
  5308                           l1495:	
  5309  01F4                     	movf	(___awmod@divisor),w
  5310  01F4  0870               	subwf	(___awmod@dividend),f
  5311  01F5  02F2               	movf	(___awmod@divisor+1),w
  5312  01F6  0871               	skipc
  5313  01F7  1C03               	decf	(___awmod@dividend+1),f
  5314  01F8  03F3               	subwf	(___awmod@dividend+1),f
  5315  01F9  02F3               	goto	l1497
  5316  01FA  29FB               	
  5317                           l465:	
  5318  01FB                     	line	28
  5319                           	
  5320                           l1497:	
  5321  01FB                     	movlw	01h
  5322  01FB  3001               	
  5323                           u1295:
  5324  01FC                     	clrc
  5325  01FC  1003               	rrf	(___awmod@divisor+1),f
  5326  01FD  0CF1               	rrf	(___awmod@divisor),f
  5327  01FE  0CF0               	addlw	-1
  5328  01FF  3EFF               	skipz
  5329  0200  1D03               	goto	u1295
  5330  0201  29FC               	line	29
  5331                           	
  5332                           l1499:	
  5333  0202                     	movlw	01h
  5334  0202  3001               	subwf	(___awmod@counter),f
  5335  0203  02F5               	btfss	status,2
  5336  0204  1D03               	goto	u1301
  5337  0205  2A07               	goto	u1300
  5338  0206  2A08               u1301:
  5339  0207                     	goto	l1493
  5340  0207  29EA               u1300:
  5341  0208                     	goto	l1501
  5342  0208  2A0A               	
  5343                           l466:	
  5344  0209                     	goto	l1501
  5345  0209  2A0A               	line	30
  5346                           	
  5347                           l460:	
  5348  020A                     	line	31
  5349                           	
  5350                           l1501:	
  5351  020A                     	movf	((___awmod@sign)),w
  5352  020A  0876               	btfsc	status,2
  5353  020B  1903               	goto	u1311
  5354  020C  2A0E               	goto	u1310
  5355  020D  2A0F               u1311:
  5356  020E                     	goto	l1505
  5357  020E  2A15               u1310:
  5358  020F                     	line	32
  5359                           	
  5360                           l1503:	
  5361  020F                     	comf	(___awmod@dividend),f
  5362  020F  09F2               	comf	(___awmod@dividend+1),f
  5363  0210  09F3               	incf	(___awmod@dividend),f
  5364  0211  0AF2               	skipnz
  5365  0212  1903               	incf	(___awmod@dividend+1),f
  5366  0213  0AF3               	goto	l1505
  5367  0214  2A15               	
  5368                           l467:	
  5369  0215                     	line	33
  5370                           	
  5371                           l1505:	
  5372  0215                     	movf	(___awmod@dividend+1),w
  5373  0215  0873               	movwf	(?___awmod+1)
  5374  0216  00F1               	movf	(___awmod@dividend),w
  5375  0217  0872               	movwf	(?___awmod)
  5376  0218  00F0               	goto	l468
  5377  0219  2A1A               	
  5378                           l1507:	
  5379  021A                     	line	34
  5380                           	
  5381                           l468:	
  5382  021A                     	return
  5383  021A  0008               	opt stack 0
  5384                           GLOBAL	__end_of___awmod
  5385                           	__end_of___awmod:
  5386  021B                     	signat	___awmod,8314
  5387                           	global	___awdiv
  5388                           
  5389 ;; *************** function ___awdiv *****************
  5390 ;; Defined at:
  5391 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  divisor         2    6[COMMON] int 
  5394 ;;  dividend        2    8[COMMON] int 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  quotient        2    2[BANK0 ] int 
  5397 ;;  sign            1    1[BANK0 ] unsigned char 
  5398 ;;  counter         1    0[BANK0 ] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  2    6[COMMON] int 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         4       0       0       0       0
  5409 ;;      Locals:         0       4       0       0       0
  5410 ;;      Temps:          1       0       0       0       0
  5411 ;;      Totals:         5       4       0       0       0
  5412 ;;Total ram usage:        9 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_lcd_num
  5418 ;;		_sensor_alert
  5419 ;;		_sensor_danger
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  5423                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5424                           	line	5
  5425                           global __ptext19
  5426                           __ptext19:	;psect for function ___awdiv
  5427  021B                     psect	text19
  5428                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5429                           	line	5
  5430                           	global	__size_of___awdiv
  5431                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5432  0073                     	
  5433                           ___awdiv:	
  5434  021B                     ;incstack = 0
  5435                           	opt	stack 5
  5436                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5437                           	line	13
  5438                           	
  5439                           l1323:	
  5440  021B                     	bcf	status, 5	;RP0=0, select bank0
  5441  021B  1283               	bcf	status, 6	;RP1=0, select bank0
  5442  021C  1303               	clrf	(___awdiv@sign)
  5443  021D  01A1               	line	14
  5444                           	
  5445                           l1325:	
  5446  021E                     	btfss	(___awdiv@divisor+1),7
  5447  021E  1FF7               	goto	u951
  5448  021F  2A21               	goto	u950
  5449  0220  2A22               u951:
  5450  0221                     	goto	l1331
  5451  0221  2A2A               u950:
  5452  0222                     	line	15
  5453                           	
  5454                           l1327:	
  5455  0222                     	comf	(___awdiv@divisor),f
  5456  0222  09F6               	comf	(___awdiv@divisor+1),f
  5457  0223  09F7               	incf	(___awdiv@divisor),f
  5458  0224  0AF6               	skipnz
  5459  0225  1903               	incf	(___awdiv@divisor+1),f
  5460  0226  0AF7               	line	16
  5461                           	
  5462                           l1329:	
  5463  0227                     	clrf	(___awdiv@sign)
  5464  0227  01A1               	incf	(___awdiv@sign),f
  5465  0228  0AA1               	goto	l1331
  5466  0229  2A2A               	line	17
  5467                           	
  5468                           l445:	
  5469  022A                     	line	18
  5470                           	
  5471                           l1331:	
  5472  022A                     	btfss	(___awdiv@dividend+1),7
  5473  022A  1FF9               	goto	u961
  5474  022B  2A2D               	goto	u960
  5475  022C  2A2E               u961:
  5476  022D                     	goto	l1337
  5477  022D  2A38               u960:
  5478  022E                     	line	19
  5479                           	
  5480                           l1333:	
  5481  022E                     	comf	(___awdiv@dividend),f
  5482  022E  09F8               	comf	(___awdiv@dividend+1),f
  5483  022F  09F9               	incf	(___awdiv@dividend),f
  5484  0230  0AF8               	skipnz
  5485  0231  1903               	incf	(___awdiv@dividend+1),f
  5486  0232  0AF9               	line	20
  5487                           	
  5488                           l1335:	
  5489  0233                     	movlw	low(01h)
  5490  0233  3001               	movwf	(??___awdiv+0)+0
  5491  0234  00FA               	movf	(??___awdiv+0)+0,w
  5492  0235  087A               	xorwf	(___awdiv@sign),f
  5493  0236  06A1               	goto	l1337
  5494  0237  2A38               	line	21
  5495                           	
  5496                           l446:	
  5497  0238                     	line	22
  5498                           	
  5499                           l1337:	
  5500  0238                     	clrf	(___awdiv@quotient)
  5501  0238  01A2               	clrf	(___awdiv@quotient+1)
  5502  0239  01A3               	line	23
  5503                           	
  5504                           l1339:	
  5505  023A                     	movf	((___awdiv@divisor)),w
  5506  023A  0876               iorwf	((___awdiv@divisor+1)),w
  5507  023B  0477               	btfsc	status,2
  5508  023C  1903               	goto	u971
  5509  023D  2A3F               	goto	u970
  5510  023E  2A40               u971:
  5511  023F                     	goto	l1359
  5512  023F  2A7D               u970:
  5513  0240                     	line	24
  5514                           	
  5515                           l1341:	
  5516  0240                     	clrf	(___awdiv@counter)
  5517  0240  01A0               	incf	(___awdiv@counter),f
  5518  0241  0AA0               	line	25
  5519                           	goto	l1347
  5520  0242  2A4F               	
  5521                           l449:	
  5522  0243                     	line	26
  5523                           	
  5524                           l1343:	
  5525  0243                     	movlw	01h
  5526  0243  3001               	
  5527                           u985:
  5528  0244                     	clrc
  5529  0244  1003               	rlf	(___awdiv@divisor),f
  5530  0245  0DF6               	rlf	(___awdiv@divisor+1),f
  5531  0246  0DF7               	addlw	-1
  5532  0247  3EFF               	skipz
  5533  0248  1D03               	goto	u985
  5534  0249  2A44               	line	27
  5535                           	
  5536                           l1345:	
  5537  024A                     	movlw	low(01h)
  5538  024A  3001               	movwf	(??___awdiv+0)+0
  5539  024B  00FA               	movf	(??___awdiv+0)+0,w
  5540  024C  087A               	addwf	(___awdiv@counter),f
  5541  024D  07A0               	goto	l1347
  5542  024E  2A4F               	line	28
  5543                           	
  5544                           l448:	
  5545  024F                     	line	25
  5546                           	
  5547                           l1347:	
  5548  024F                     	btfss	(___awdiv@divisor+1),(15)&7
  5549  024F  1FF7               	goto	u991
  5550  0250  2A52               	goto	u990
  5551  0251  2A53               u991:
  5552  0252                     	goto	l1343
  5553  0252  2A43               u990:
  5554  0253                     	goto	l1349
  5555  0253  2A55               	
  5556                           l450:	
  5557  0254                     	goto	l1349
  5558  0254  2A55               	line	29
  5559                           	
  5560                           l451:	
  5561  0255                     	line	30
  5562                           	
  5563                           l1349:	
  5564  0255                     	movlw	01h
  5565  0255  3001               	
  5566                           u1005:
  5567  0256                     	clrc
  5568  0256  1003               	rlf	(___awdiv@quotient),f
  5569  0257  0DA2               	rlf	(___awdiv@quotient+1),f
  5570  0258  0DA3               	addlw	-1
  5571  0259  3EFF               	skipz
  5572  025A  1D03               	goto	u1005
  5573  025B  2A56               	line	31
  5574                           	movf	(___awdiv@divisor+1),w
  5575  025C  0877               	subwf	(___awdiv@dividend+1),w
  5576  025D  0279               	skipz
  5577  025E  1D03               	goto	u1015
  5578  025F  2A62               	movf	(___awdiv@divisor),w
  5579  0260  0876               	subwf	(___awdiv@dividend),w
  5580  0261  0278               u1015:
  5581  0262                     	skipc
  5582  0262  1C03               	goto	u1011
  5583  0263  2A65               	goto	u1010
  5584  0264  2A66               u1011:
  5585  0265                     	goto	l1355
  5586  0265  2A6E               u1010:
  5587  0266                     	line	32
  5588                           	
  5589                           l1351:	
  5590  0266                     	movf	(___awdiv@divisor),w
  5591  0266  0876               	subwf	(___awdiv@dividend),f
  5592  0267  02F8               	movf	(___awdiv@divisor+1),w
  5593  0268  0877               	skipc
  5594  0269  1C03               	decf	(___awdiv@dividend+1),f
  5595  026A  03F9               	subwf	(___awdiv@dividend+1),f
  5596  026B  02F9               	line	33
  5597                           	
  5598                           l1353:	
  5599  026C                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5600  026C  1422               	goto	l1355
  5601  026D  2A6E               	line	34
  5602                           	
  5603                           l452:	
  5604  026E                     	line	35
  5605                           	
  5606                           l1355:	
  5607  026E                     	movlw	01h
  5608  026E  3001               	
  5609                           u1025:
  5610  026F                     	clrc
  5611  026F  1003               	rrf	(___awdiv@divisor+1),f
  5612  0270  0CF7               	rrf	(___awdiv@divisor),f
  5613  0271  0CF6               	addlw	-1
  5614  0272  3EFF               	skipz
  5615  0273  1D03               	goto	u1025
  5616  0274  2A6F               	line	36
  5617                           	
  5618                           l1357:	
  5619  0275                     	movlw	01h
  5620  0275  3001               	subwf	(___awdiv@counter),f
  5621  0276  02A0               	btfss	status,2
  5622  0277  1D03               	goto	u1031
  5623  0278  2A7A               	goto	u1030
  5624  0279  2A7B               u1031:
  5625  027A                     	goto	l1349
  5626  027A  2A55               u1030:
  5627  027B                     	goto	l1359
  5628  027B  2A7D               	
  5629                           l453:	
  5630  027C                     	goto	l1359
  5631  027C  2A7D               	line	37
  5632                           	
  5633                           l447:	
  5634  027D                     	line	38
  5635                           	
  5636                           l1359:	
  5637  027D                     	movf	((___awdiv@sign)),w
  5638  027D  0821               	btfsc	status,2
  5639  027E  1903               	goto	u1041
  5640  027F  2A81               	goto	u1040
  5641  0280  2A82               u1041:
  5642  0281                     	goto	l1363
  5643  0281  2A88               u1040:
  5644  0282                     	line	39
  5645                           	
  5646                           l1361:	
  5647  0282                     	comf	(___awdiv@quotient),f
  5648  0282  09A2               	comf	(___awdiv@quotient+1),f
  5649  0283  09A3               	incf	(___awdiv@quotient),f
  5650  0284  0AA2               	skipnz
  5651  0285  1903               	incf	(___awdiv@quotient+1),f
  5652  0286  0AA3               	goto	l1363
  5653  0287  2A88               	
  5654                           l454:	
  5655  0288                     	line	40
  5656                           	
  5657                           l1363:	
  5658  0288                     	movf	(___awdiv@quotient+1),w
  5659  0288  0823               	movwf	(?___awdiv+1)
  5660  0289  00F7               	movf	(___awdiv@quotient),w
  5661  028A  0822               	movwf	(?___awdiv)
  5662  028B  00F6               	goto	l455
  5663  028C  2A8D               	
  5664                           l1365:	
  5665  028D                     	line	41
  5666                           	
  5667                           l455:	
  5668  028D                     	return
  5669  028D  0008               	opt stack 0
  5670                           GLOBAL	__end_of___awdiv
  5671                           	__end_of___awdiv:
  5672  028E                     	signat	___awdiv,8314
  5673                           	global	_lcd_init
  5674                           
  5675 ;; *************** function _lcd_init *****************
  5676 ;; Defined at:
  5677 ;;		line 122 in file "lcd.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0, pclath, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5691 ;;      Params:         0       0       0       0       0
  5692 ;;      Locals:         0       0       0       0       0
  5693 ;;      Temps:          3       0       0       0       0
  5694 ;;      Totals:         3       0       0       0       0
  5695 ;;Total ram usage:        3 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    1
  5698 ;; This function calls:
  5699 ;;		_lcd_inst
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5705                           	file	"lcd.c"
  5706                           	line	122
  5707                           global __ptext20
  5708                           __ptext20:	;psect for function _lcd_init
  5709  016B                     psect	text20
  5710                           	file	"lcd.c"
  5711                           	line	122
  5712                           	global	__size_of_lcd_init
  5713                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5714  004D                     	
  5715                           _lcd_init:	
  5716  016B                     ;incstack = 0
  5717                           	opt	stack 6
  5718                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5719                           	line	124
  5720                           	
  5721                           l1521:	
  5722  016B                     ;lcd.c: 124:     _delay((unsigned long)((100)*(20000000/4000.0)));
  5723                           	opt asmopt_push
  5724                           opt asmopt_off
  5725                           movlw  3
  5726  016B  3003               movwf	((??_lcd_init+0)+0+2),f
  5727  016C  00F5               movlw	138
  5728  016D  308A               movwf	((??_lcd_init+0)+0+1),f
  5729  016E  00F4               	movlw	85
  5730  016F  3055               movwf	((??_lcd_init+0)+0),f
  5731  0170  00F3               	u1647:
  5732  0171                     decfsz	((??_lcd_init+0)+0),f
  5733  0171  0BF3               	goto	u1647
  5734  0172  2971               	decfsz	((??_lcd_init+0)+0+1),f
  5735  0173  0BF4               	goto	u1647
  5736  0174  2971               	decfsz	((??_lcd_init+0)+0+2),f
  5737  0175  0BF5               	goto	u1647
  5738  0176  2971               	nop2
  5739  0177  2978               opt asmopt_pop
  5740                           
  5741                           	line	141
  5742                           	
  5743                           l1523:	
  5744  0178                     ;lcd.c: 141:        TRISDbits.TRISD0 = 1;
  5745                           	bsf	status, 5	;RP0=1, select bank1
  5746  0178  1683               	bcf	status, 6	;RP1=0, select bank1
  5747  0179  1303               	bsf	(136)^080h,0	;volatile
  5748  017A  1408               	line	142
  5749                           	
  5750                           l1525:	
  5751  017B                     ;lcd.c: 142:        TRISDbits.TRISD1 = 1;
  5752                           	bsf	(136)^080h,1	;volatile
  5753  017B  1488               	line	143
  5754                           	
  5755                           l1527:	
  5756  017C                     ;lcd.c: 143:        TRISDbits.TRISD2 = 0;
  5757                           	bcf	(136)^080h,2	;volatile
  5758  017C  1108               	line	144
  5759                           	
  5760                           l1529:	
  5761  017D                     ;lcd.c: 144:        TRISDbits.TRISD3 = 0;
  5762                           	bcf	(136)^080h,3	;volatile
  5763  017D  1188               	line	145
  5764                           	
  5765                           l1531:	
  5766  017E                     ;lcd.c: 145:        TRISDbits.TRISD4 = 0;
  5767                           	bcf	(136)^080h,4	;volatile
  5768  017E  1208               	line	146
  5769                           	
  5770                           l1533:	
  5771  017F                     ;lcd.c: 146:        TRISDbits.TRISD5 = 0;
  5772                           	bcf	(136)^080h,5	;volatile
  5773  017F  1288               	line	147
  5774                           	
  5775                           l1535:	
  5776  0180                     ;lcd.c: 147:        TRISDbits.TRISD6 = 0;
  5777                           	bcf	(136)^080h,6	;volatile
  5778  0180  1308               	line	148
  5779                           	
  5780                           l1537:	
  5781  0181                     ;lcd.c: 148:        TRISDbits.TRISD7 = 0;
  5782                           	bcf	(136)^080h,7	;volatile
  5783  0181  1388               	line	151
  5784                           ;lcd.c: 151:     _delay((unsigned long)((100)*(20000000/4000.0)));
  5785                           	opt asmopt_push
  5786                           opt asmopt_off
  5787                           movlw  3
  5788  0182  3003               movwf	((??_lcd_init+0)+0+2),f
  5789  0183  00F5               movlw	138
  5790  0184  308A               movwf	((??_lcd_init+0)+0+1),f
  5791  0185  00F4               	movlw	85
  5792  0186  3055               movwf	((??_lcd_init+0)+0),f
  5793  0187  00F3               	u1657:
  5794  0188                     decfsz	((??_lcd_init+0)+0),f
  5795  0188  0BF3               	goto	u1657
  5796  0189  2988               	decfsz	((??_lcd_init+0)+0+1),f
  5797  018A  0BF4               	goto	u1657
  5798  018B  2988               	decfsz	((??_lcd_init+0)+0+2),f
  5799  018C  0BF5               	goto	u1657
  5800  018D  2988               	nop2
  5801  018E  298F               opt asmopt_pop
  5802                           
  5803                           	line	152
  5804                           	
  5805                           l1539:	
  5806  018F                     ;lcd.c: 152:     PORTDbits.RD3 = 1;
  5807                           	bcf	status, 5	;RP0=0, select bank0
  5808  018F  1283               	bcf	status, 6	;RP1=0, select bank0
  5809  0190  1303               	bsf	(8),3	;volatile
  5810  0191  1588               	line	153
  5811                           	
  5812                           l1541:	
  5813  0192                     ;lcd.c: 153:     lcd_inst( 0x20|0x00|0x08 );
  5814                           	movlw	low(028h)
  5815  0192  3028               	fcall	_lcd_inst
  5816  0193  120A  118A  228E  120A  118A  	line	154
  5817                           	
  5818                           l1543:	
  5819  0198                     ;lcd.c: 154:     lcd_inst( 0x08|0x04|0x00|0x00 );
  5820                           	movlw	low(0Ch)
  5821  0198  300C               	fcall	_lcd_inst
  5822  0199  120A  118A  228E  120A  118A  	line	155
  5823                           	
  5824                           l1545:	
  5825  019E                     ;lcd.c: 155:     lcd_inst( 0x01 );
  5826                           	movlw	low(01h)
  5827  019E  3001               	fcall	_lcd_inst
  5828  019F  120A  118A  228E  120A  118A  	line	156
  5829                           	
  5830                           l1547:	
  5831  01A4                     ;lcd.c: 156:     lcd_inst( 0x02 );
  5832                           	movlw	low(02h)
  5833  01A4  3002               	fcall	_lcd_inst
  5834  01A5  120A  118A  228E  120A  118A  	line	157
  5835                           ;lcd.c: 157:     _delay((unsigned long)((100)*(20000000/4000.0)));
  5836                           	opt asmopt_push
  5837                           opt asmopt_off
  5838                           movlw  3
  5839  01AA  3003               movwf	((??_lcd_init+0)+0+2),f
  5840  01AB  00F5               movlw	138
  5841  01AC  308A               movwf	((??_lcd_init+0)+0+1),f
  5842  01AD  00F4               	movlw	85
  5843  01AE  3055               movwf	((??_lcd_init+0)+0),f
  5844  01AF  00F3               	u1667:
  5845  01B0                     decfsz	((??_lcd_init+0)+0),f
  5846  01B0  0BF3               	goto	u1667
  5847  01B1  29B0               	decfsz	((??_lcd_init+0)+0+1),f
  5848  01B2  0BF4               	goto	u1667
  5849  01B3  29B0               	decfsz	((??_lcd_init+0)+0+2),f
  5850  01B4  0BF5               	goto	u1667
  5851  01B5  29B0               	nop2
  5852  01B6  29B7               opt asmopt_pop
  5853                           
  5854                           	line	158
  5855                           	
  5856                           l52:	
  5857  01B7                     	return
  5858  01B7  0008               	opt stack 0
  5859                           GLOBAL	__end_of_lcd_init
  5860                           	__end_of_lcd_init:
  5861  01B8                     	signat	_lcd_init,89
  5862                           	global	_lcd_inst
  5863                           
  5864 ;; *************** function _lcd_inst *****************
  5865 ;; Defined at:
  5866 ;;		line 68 in file "lcd.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  i               1    wreg     unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  i               1    2[COMMON] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5880 ;;      Params:         0       0       0       0       0
  5881 ;;      Locals:         1       0       0       0       0
  5882 ;;      Temps:          2       0       0       0       0
  5883 ;;      Totals:         3       0       0       0       0
  5884 ;;Total ram usage:        3 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_lcd_lincol
  5890 ;;		_lcd_init
  5891 ;;		_lcd_clear
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5895                           	line	68
  5896                           global __ptext21
  5897                           __ptext21:	;psect for function _lcd_inst
  5898  028E                     psect	text21
  5899                           	file	"lcd.c"
  5900                           	line	68
  5901                           	global	__size_of_lcd_inst
  5902                           	__size_of_lcd_inst	equ	__end_of_lcd_inst-_lcd_inst
  5903  008E                     	
  5904                           _lcd_inst:	
  5905  028E                     ;incstack = 0
  5906                           	opt	stack 5
  5907                           ; Regs used in _lcd_inst: [wreg+status,2+status,0]
  5908                           ;lcd_inst@i stored from wreg
  5909                           	movwf	(lcd_inst@i)
  5910  028E  00F2               	line	70
  5911                           	
  5912                           l1267:	
  5913  028F                     ;lcd.c: 68: void lcd_inst (unsigned char i);lcd.c: 69: {;lcd.c: 70:     PORTDbits.RD2 = 
                                 0;
  5914                           	bcf	status, 5	;RP0=0, select bank0
  5915  028F  1283               	bcf	status, 6	;RP1=0, select bank0
  5916  0290  1303               	bcf	(8),2	;volatile
  5917  0291  1108               	line	71
  5918                           	
  5919                           l1269:	
  5920  0292                     ;lcd.c: 71:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  5921                           	movf	(lcd_inst@i),w
  5922  0292  0872               	movwf	(??_lcd_inst+0)+0
  5923  0293  00F0               	movlw	04h
  5924  0294  3004               u815:
  5925  0295                     	clrc
  5926  0295  1003               	rrf	(??_lcd_inst+0)+0,f
  5927  0296  0CF0               	addlw	-1
  5928  0297  3EFF               	skipz
  5929  0298  1D03               	goto	u815
  5930  0299  2A95               	movf	0+(??_lcd_inst+0)+0,w
  5931  029A  0870               	movwf	(??_lcd_inst+1)+0
  5932  029B  00F1               	movlw	04h
  5933  029C  3004               u825:
  5934  029D                     	clrc
  5935  029D  1003               	rlf	(??_lcd_inst+1)+0,f
  5936  029E  0DF1               	addlw	-1
  5937  029F  3EFF               	skipz
  5938  02A0  1D03               	goto	u825
  5939  02A1  2A9D               	movf	(8),w	;volatile
  5940  02A2  0808               	andlw	0Fh
  5941  02A3  390F               	iorwf	0+(??_lcd_inst+1)+0,w
  5942  02A4  0471               	movwf	(8)	;volatile
  5943  02A5  0088               	line	73
  5944                           	
  5945                           l1271:	
  5946  02A6                     ;lcd.c: 73:     PORTDbits.RD3 =0;
  5947                           	bcf	(8),3	;volatile
  5948  02A6  1188               	line	74
  5949                           ;lcd.c: 74:     if ( i == 0x01 || i == 0x02 )
  5950                           		decf	((lcd_inst@i)),w
  5951  02A7  0372               	btfsc	status,2
  5952  02A8  1903               	goto	u831
  5953  02A9  2AAB               	goto	u830
  5954  02AA  2AAC               u831:
  5955  02AB                     	goto	l1275
  5956  02AB  2AB3               u830:
  5957  02AC                     	
  5958                           l1273:	
  5959  02AC                     		movlw	2
  5960  02AC  3002               	xorwf	((lcd_inst@i)),w
  5961  02AD  0672               	btfss	status,2
  5962  02AE  1D03               	goto	u841
  5963  02AF  2AB1               	goto	u840
  5964  02B0  2AB2               u841:
  5965  02B1                     	goto	l1277
  5966  02B1  2ABD               u840:
  5967  02B2                     	goto	l1275
  5968  02B2  2AB3               	
  5969                           l36:	
  5970  02B3                     	line	75
  5971                           	
  5972                           l1275:	
  5973  02B3                     ;lcd.c: 75:         _delay((unsigned long)((2)*(20000000/4000.0)));
  5974                           	opt asmopt_push
  5975                           opt asmopt_off
  5976                           movlw	13
  5977  02B3  300D               movwf	((??_lcd_inst+0)+0+1),f
  5978  02B4  00F1               	movlw	251
  5979  02B5  30FB               movwf	((??_lcd_inst+0)+0),f
  5980  02B6  00F0               	u1677:
  5981  02B7                     decfsz	((??_lcd_inst+0)+0),f
  5982  02B7  0BF0               	goto	u1677
  5983  02B8  2AB7               	decfsz	((??_lcd_inst+0)+0+1),f
  5984  02B9  0BF1               	goto	u1677
  5985  02BA  2AB7               	nop2
  5986  02BB  2ABC               opt asmopt_pop
  5987                           
  5988                           	goto	l1279
  5989  02BC  2AC3               	line	76
  5990                           ;lcd.c: 76:     else
  5991                           	
  5992                           l34:	
  5993  02BD                     	line	77
  5994                           	
  5995                           l1277:	
  5996  02BD                     ;lcd.c: 77:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  5997                           	opt asmopt_push
  5998                           opt asmopt_off
  5999                           	movlw	66
  6000  02BD  3042               movwf	((??_lcd_inst+0)+0),f
  6001  02BE  00F0               	u1687:
  6002  02BF                     decfsz	(??_lcd_inst+0)+0,f
  6003  02BF  0BF0               	goto	u1687
  6004  02C0  2ABF               	nop
  6005  02C1  0000               opt asmopt_pop
  6006                           
  6007                           	goto	l1279
  6008  02C2  2AC3               	
  6009                           l37:	
  6010  02C3                     	line	78
  6011                           	
  6012                           l1279:	
  6013  02C3                     ;lcd.c: 78:     PORTDbits.RD3 = 1;
  6014                           	bcf	status, 5	;RP0=0, select bank0
  6015  02C3  1283               	bcf	status, 6	;RP1=0, select bank0
  6016  02C4  1303               	bsf	(8),3	;volatile
  6017  02C5  1588               	line	80
  6018                           	
  6019                           l1281:	
  6020  02C6                     ;lcd.c: 80:     if ( (i & 0xF0) == (0x20 | 0x00) )
  6021                           	movlw	low(0F0h)
  6022  02C6  30F0               	andwf	(lcd_inst@i),w
  6023  02C7  0572               	movwf	(??_lcd_inst+0)+0
  6024  02C8  00F0               		movlw	32
  6025  02C9  3020               	xorwf	((??_lcd_inst+0)+0),w
  6026  02CA  0670               	btfss	status,2
  6027  02CB  1D03               	goto	u851
  6028  02CC  2ACE               	goto	u850
  6029  02CD  2ACF               u851:
  6030  02CE                     	goto	l1293
  6031  02CE  2AEE               u850:
  6032  02CF                     	line	82
  6033                           	
  6034                           l1283:	
  6035  02CF                     ;lcd.c: 81:     {;lcd.c: 82:         PORTDbits.RD2 = 0;
  6036                           	bcf	(8),2	;volatile
  6037  02CF  1108               	line	83
  6038                           	
  6039                           l1285:	
  6040  02D0                     ;lcd.c: 83:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  6041                           	movf	(lcd_inst@i),w
  6042  02D0  0872               	movwf	(??_lcd_inst+0)+0
  6043  02D1  00F0               	movlw	04h
  6044  02D2  3004               u865:
  6045  02D3                     	clrc
  6046  02D3  1003               	rrf	(??_lcd_inst+0)+0,f
  6047  02D4  0CF0               	addlw	-1
  6048  02D5  3EFF               	skipz
  6049  02D6  1D03               	goto	u865
  6050  02D7  2AD3               	movf	0+(??_lcd_inst+0)+0,w
  6051  02D8  0870               	movwf	(??_lcd_inst+1)+0
  6052  02D9  00F1               	movlw	04h
  6053  02DA  3004               u875:
  6054  02DB                     	clrc
  6055  02DB  1003               	rlf	(??_lcd_inst+1)+0,f
  6056  02DC  0DF1               	addlw	-1
  6057  02DD  3EFF               	skipz
  6058  02DE  1D03               	goto	u875
  6059  02DF  2ADB               	movf	(8),w	;volatile
  6060  02E0  0808               	andlw	0Fh
  6061  02E1  390F               	iorwf	0+(??_lcd_inst+1)+0,w
  6062  02E2  0471               	movwf	(8)	;volatile
  6063  02E3  0088               	line	84
  6064                           	
  6065                           l1287:	
  6066  02E4                     ;lcd.c: 84:         PORTDbits.RD3 = 0;
  6067                           	bcf	(8),3	;volatile
  6068  02E4  1188               	line	85
  6069                           	
  6070                           l1289:	
  6071  02E5                     ;lcd.c: 85:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  6072                           	opt asmopt_push
  6073                           opt asmopt_off
  6074                           	movlw	66
  6075  02E5  3042               movwf	((??_lcd_inst+0)+0),f
  6076  02E6  00F0               	u1697:
  6077  02E7                     decfsz	(??_lcd_inst+0)+0,f
  6078  02E7  0BF0               	goto	u1697
  6079  02E8  2AE7               	nop
  6080  02E9  0000               opt asmopt_pop
  6081                           
  6082                           	line	86
  6083                           	
  6084                           l1291:	
  6085  02EA                     ;lcd.c: 86:         PORTDbits.RD3 = 1;
  6086                           	bcf	status, 5	;RP0=0, select bank0
  6087  02EA  1283               	bcf	status, 6	;RP1=0, select bank0
  6088  02EB  1303               	bsf	(8),3	;volatile
  6089  02EC  1588               	goto	l1293
  6090  02ED  2AEE               	line	87
  6091                           ;lcd.c: 87:     }
  6092                           	
  6093                           l38:	
  6094  02EE                     	line	89
  6095                           	
  6096                           l1293:	
  6097  02EE                     ;lcd.c: 89:     PORTDbits.RD2 = 0;
  6098                           	bcf	(8),2	;volatile
  6099  02EE  1108               	line	90
  6100                           	
  6101                           l1295:	
  6102  02EF                     ;lcd.c: 90:     PORTD = ((PORTD & 0x0F)|(i<<4));
  6103                           	movf	(lcd_inst@i),w
  6104  02EF  0872               	movwf	(??_lcd_inst+0)+0
  6105  02F0  00F0               	movlw	04h
  6106  02F1  3004               u885:
  6107  02F2                     	clrc
  6108  02F2  1003               	rlf	(??_lcd_inst+0)+0,f
  6109  02F3  0DF0               	addlw	-1
  6110  02F4  3EFF               	skipz
  6111  02F5  1D03               	goto	u885
  6112  02F6  2AF2               	movf	(8),w	;volatile
  6113  02F7  0808               	andlw	0Fh
  6114  02F8  390F               	iorwf	0+(??_lcd_inst+0)+0,w
  6115  02F9  0470               	movwf	(8)	;volatile
  6116  02FA  0088               	line	91
  6117                           	
  6118                           l1297:	
  6119  02FB                     ;lcd.c: 91:     PORTDbits.RD3 = 0;
  6120                           	bcf	(8),3	;volatile
  6121  02FB  1188               	line	92
  6122                           	
  6123                           l1299:	
  6124  02FC                     ;lcd.c: 92:     if ( i==0x01 || i == 0x02 )
  6125                           		decf	((lcd_inst@i)),w
  6126  02FC  0372               	btfsc	status,2
  6127  02FD  1903               	goto	u891
  6128  02FE  2B00               	goto	u890
  6129  02FF  2B01               u891:
  6130  0300                     	goto	l1303
  6131  0300  2B08               u890:
  6132  0301                     	
  6133                           l1301:	
  6134  0301                     		movlw	2
  6135  0301  3002               	xorwf	((lcd_inst@i)),w
  6136  0302  0672               	btfss	status,2
  6137  0303  1D03               	goto	u901
  6138  0304  2B06               	goto	u900
  6139  0305  2B07               u901:
  6140  0306                     	goto	l1305
  6141  0306  2B12               u900:
  6142  0307                     	goto	l1303
  6143  0307  2B08               	
  6144                           l41:	
  6145  0308                     	line	93
  6146                           	
  6147                           l1303:	
  6148  0308                     ;lcd.c: 93:         _delay((unsigned long)((2)*(20000000/4000.0)));
  6149                           	opt asmopt_push
  6150                           opt asmopt_off
  6151                           movlw	13
  6152  0308  300D               movwf	((??_lcd_inst+0)+0+1),f
  6153  0309  00F1               	movlw	251
  6154  030A  30FB               movwf	((??_lcd_inst+0)+0),f
  6155  030B  00F0               	u1707:
  6156  030C                     decfsz	((??_lcd_inst+0)+0),f
  6157  030C  0BF0               	goto	u1707
  6158  030D  2B0C               	decfsz	((??_lcd_inst+0)+0+1),f
  6159  030E  0BF1               	goto	u1707
  6160  030F  2B0C               	nop2
  6161  0310  2B11               opt asmopt_pop
  6162                           
  6163                           	goto	l1307
  6164  0311  2B18               	line	94
  6165                           ;lcd.c: 94:     else
  6166                           	
  6167                           l39:	
  6168  0312                     	line	95
  6169                           	
  6170                           l1305:	
  6171  0312                     ;lcd.c: 95:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  6172                           	opt asmopt_push
  6173                           opt asmopt_off
  6174                           	movlw	66
  6175  0312  3042               movwf	((??_lcd_inst+0)+0),f
  6176  0313  00F0               	u1717:
  6177  0314                     decfsz	(??_lcd_inst+0)+0,f
  6178  0314  0BF0               	goto	u1717
  6179  0315  2B14               	nop
  6180  0316  0000               opt asmopt_pop
  6181                           
  6182                           	goto	l1307
  6183  0317  2B18               	
  6184                           l42:	
  6185  0318                     	line	96
  6186                           	
  6187                           l1307:	
  6188  0318                     ;lcd.c: 96:     PORTDbits.RD3 = 1;
  6189                           	bcf	status, 5	;RP0=0, select bank0
  6190  0318  1283               	bcf	status, 6	;RP1=0, select bank0
  6191  0319  1303               	bsf	(8),3	;volatile
  6192  031A  1588               	line	97
  6193                           	
  6194                           l43:	
  6195  031B                     	return
  6196  031B  0008               	opt stack 0
  6197                           GLOBAL	__end_of_lcd_inst
  6198                           	__end_of_lcd_inst:
  6199  031C                     	signat	_lcd_inst,4217
  6200                           	global	_analog_init
  6201                           
  6202 ;; *************** function _analog_init *****************
  6203 ;; Defined at:
  6204 ;;		line 7 in file "analog.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6218 ;;      Params:         0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_main
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6231                           	file	"analog.c"
  6232                           	line	7
  6233                           global __ptext22
  6234                           __ptext22:	;psect for function _analog_init
  6235  0F80                     psect	text22
  6236                           	file	"analog.c"
  6237                           	line	7
  6238                           	global	__size_of_analog_init
  6239                           	__size_of_analog_init	equ	__end_of_analog_init-_analog_init
  6240  0011                     	
  6241                           _analog_init:	
  6242  0F80                     ;incstack = 0
  6243                           	opt	stack 7
  6244                           ; Regs used in _analog_init: [wreg+status,2+status,0]
  6245                           	line	9
  6246                           	
  6247                           l1509:	
  6248  0F80                     ;analog.c: 9:     ANSEL = 0x0F;
  6249                           	movlw	low(0Fh)
  6250  0F80  300F               	bsf	status, 5	;RP0=1, select bank3
  6251  0F81  1683               	bsf	status, 6	;RP1=1, select bank3
  6252  0F82  1703               	movwf	(392)^0180h	;volatile
  6253  0F83  0088               	line	10
  6254                           	
  6255                           l1511:	
  6256  0F84                     ;analog.c: 10:     ADCON0bits.ADCS = 0x1;
  6257                           	bcf	status, 5	;RP0=0, select bank0
  6258  0F84  1283               	bcf	status, 6	;RP1=0, select bank0
  6259  0F85  1303               	movf	(31),w	;volatile
  6260  0F86  081F               	andlw	not (((1<<2)-1)<<6)
  6261  0F87  393F               	iorlw	(01h & ((1<<2)-1))<<6
  6262  0F88  3840               	movwf	(31)	;volatile
  6263  0F89  009F               	line	11
  6264                           	
  6265                           l1513:	
  6266  0F8A                     ;analog.c: 11:     ADCON0bits.ADON = 1;
  6267                           	bsf	(31),0	;volatile
  6268  0F8A  141F               	line	12
  6269                           	
  6270                           l1515:	
  6271  0F8B                     ;analog.c: 12:     ADCON1bits.ADFM = 1;
  6272                           	bsf	status, 5	;RP0=1, select bank1
  6273  0F8B  1683               	bcf	status, 6	;RP1=0, select bank1
  6274  0F8C  1303               	bsf	(159)^080h,7	;volatile
  6275  0F8D  179F               	line	13
  6276                           	
  6277                           l1517:	
  6278  0F8E                     ;analog.c: 13:     ADCON1bits.VCFG0 = 0;
  6279                           	bcf	(159)^080h,4	;volatile
  6280  0F8E  121F               	line	14
  6281                           	
  6282                           l1519:	
  6283  0F8F                     ;analog.c: 14:     ADCON1bits.VCFG1 = 0;
  6284                           	bcf	(159)^080h,5	;volatile
  6285  0F8F  129F               	line	15
  6286                           	
  6287                           l13:	
  6288  0F90                     	return
  6289  0F90  0008               	opt stack 0
  6290                           GLOBAL	__end_of_analog_init
  6291                           	__end_of_analog_init:
  6292  0F91                     	signat	_analog_init,89
  6293                           global	___latbits
  6294                           ___latbits	equ	2
  6295  0002                     	global	btemp
  6296                           	btemp set 07Eh
  6297  007E                     
  6298                           	DABS	1,126,2	;btemp
  6299                           	global	wtemp0
  6300                           	wtemp0 set btemp+0
  6301  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      50
    BANK1            80      0      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main$1120	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    led_monitorar@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_danger@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_alert@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_readAll@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    sensor_init@ptr	PTR struct sensor_t size(1) Largest target is 48
		 -> sensor(BANK1[48]), 

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_num
    _main->_sensor_init
    _sensor_readAll->___lmul
    ___lmul->_ADC_read
    _sensor_init->___bmul
    _led_monitorar->_sensor_alert
    _led_monitorar->_sensor_danger
    _sensor_danger->___awdiv
    _sensor_alert->___awdiv
    _lcd_print->_lcd_lincol
    _lcd_num->___awdiv
    _lcd_lincol->_lcd_inst
    ___awdiv->___wmul
    _lcd_init->_lcd_inst

Critical Paths under _main in BANK0

    _main->_sensor_readAll
    _sensor_readAll->___lmul
    _led_monitorar->_sensor_alert
    _led_monitorar->_sensor_danger
    _sensor_danger->___awdiv
    _sensor_alert->___awdiv
    _lcd_num->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   17265
                                             42 BANK0      4     4      0
                             ___bmul
                        _analog_init
                           _lcd_init
                            _lcd_num
                          _lcd_print
                           _led_init
                      _led_monitorar
                        _sensor_init
                     _sensor_readAll
          _tecla_decrementar_descida
           _tecla_incrementar_subida
                        _teclas_init
 ---------------------------------------------------------------------------------
 (1) _teclas_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tecla_incrementar_subida                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tecla_decrementar_descida                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sensor_readAll                                      34    33      1    1696
                                              8 BANK0     34    33      1
                           _ADC_read
                             ___bmul
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     396
                                              9 COMMON     5     5      0
                                              0 BANK0      8     0      8
                           _ADC_read (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             9     7      2      94
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _sensor_init                                         14     5      9    3183
                                              4 COMMON    10     1      9
                                              0 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     831
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _led_monitorar                                        1     1      0    7345
                                              9 BANK0      1     1      0
                       _sensor_alert
                      _sensor_danger
 ---------------------------------------------------------------------------------
 (2) _sensor_danger                                        8     8      0    3612
                                             11 COMMON     3     3      0
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _sensor_alert                                         8     8      0    3612
                                             11 COMMON     3     3      0
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1806
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     681
                                              6 COMMON     5     3      2
                           _lcd_data
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    3285
                                             11 COMMON     3     3      0
                                              4 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                             ___bmul (ARG)
                           _lcd_data
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              3 COMMON     3     2      1
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1516
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     176
                                              3 COMMON     3     3      0
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (3) _lcd_inst                                             3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _analog_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _analog_init
   _lcd_init
     _lcd_inst
   _lcd_num
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___bmul (ARG)
     _lcd_data (ARG)
     _lcd_lincol (ARG)
       _lcd_inst
   _lcd_print
     _lcd_data
     _lcd_lincol
       _lcd_inst
   _led_init
   _led_monitorar
     _sensor_alert
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _sensor_danger
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _sensor_init
     ___bmul
   _sensor_readAll
     _ADC_read
     ___bmul
     ___lmul
       _ADC_read (ARG)
       ___bmul (ARG)
   _tecla_decrementar_descida
   _tecla_incrementar_subida
   _teclas_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      70       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      32       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      30       7       60.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      70      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu May 26 10:10:16 2022

                                 pc 0002            _tecla_incrementar_subida 000B  
                    ___bmul@product 0072                         __CFG_CP$OFF 0000  
                                l20 00B2                                  l13 0F90  
                                l21 00B2                                  l22 00B7  
                                l23 00D5                                  l41 0308  
                                l17 009D                                  l42 0318  
                                l34 02BD                                  l43 031B  
                                l19 00A5                                  l36 02B3  
                                l52 01B7                                  l60 0058  
                                l37 02C3                                  l61 0058  
                                l38 02EE                                  l46 0090  
                                l70 062E                                  l39 0312  
                                l71 0623                                  l64 05D0  
                                l49 0FA3                                  l73 064B  
                                l65 0614                                  l74 064C  
                                l66 05E5                                  l58 004B  
                                l90 04EB                                  l75 065A  
                                l67 05FF                                  l59 0036  
                                l83 03A9                                  l91 05B8  
                                l76 065A                                  l68 0600  
                                l92 05B8                                  l77 06A6  
                                l69 0622                                  l78 06A6  
                                l89 05B1                        ___awdiv@sign 0021  
                   ??_sensor_danger 007B                                  fsr 0004  
               ___wmul@multiplicand 0072                sensor_init@toleravel 007C  
                     _led_monitorar 00D6                                 l111 04E2  
                               l104 0444                                 l113 04DE  
                               l106 0440                                 l114 04E5  
                               l107 0447                                 l115 04E5  
                               l108 0447                                 l301 0FDB  
                               l302 0FE5                                 l214 0FD0  
                               l303 0FFA                                 l215 0FD7  
                               l151 0733                                 l304 0FFF  
                               l216 0FD7                                 l152 07A7  
                               l313 0128                                 l153 07C0  
                               l314 0146                                 l154 07CB  
                               l315 0161                                 l155 07E8  
                               l316 016A                                 l156 07E9  
                               l325 0FA7                                 l157 07EA  
                               l326 0FB0                                 l158 07EA  
                               l175 00F7                                 l327 0FBA  
                               l176 011E                                 l328 0FBC  
                               l169 0F7F                                 l177 0117  
                               l450 0254                                 l178 011D  
                               l194 001E                                 l186 0F74  
                               l451 0255                                 l179 011E  
                               l195 0025                                 l452 026E  
                               l460 020A                                 l196 0025  
                               l453 027C                                 l445 022A  
                               l461 01E4                                 l454 0288  
                               l446 0238                                 l462 01D8  
                               l455 028D                                 l447 027D  
                               l463 01E9                                 l448 024F  
                               l464 01EA                                 l449 0243  
                               l465 01FB                                 l466 0209  
                               l458 01C5                                 l467 0215  
                               l459 01CF                                 l468 021A  
                      __CFG_CPD$OFF 0000                                 u900 0307  
                               u901 0306                                 u830 02AC  
                               u910 0FDF                                 u831 02AB  
                               u815 0295                                 u911 0FDE  
                               u840 02B2                                 u841 02B1  
                               u825 029D                                 u850 02CF  
                               u851 02CE                                 u940 0FF9  
                               u941 0FF8                                 u925 0FE6  
                               u950 0222                                 u951 0221  
                               u935 0FED                                 u960 022E  
                               u865 02D3                                 u961 022D  
                               u890 0301                                 u970 0240  
                               u891 0300                                 u875 02DB  
                               u971 023F                                 u885 02F2  
                               u990 0253                                 u991 0252  
                               u985 0244                                 fsr0 0004  
                               indf 0000                        ___awmod@sign 0076  
                      __CFG_FOSC$HS 0000                    ??_sensor_readAll 0029  
                      __CFG_LVP$OFF 0000                         lcd_num@size 0029  
                              l1301 0301                                l1303 0308  
                              l1311 0FDB                                l1305 0312  
                              l1401 0F92                                l1321 0FFF  
                              l1313 0FDF                                l1307 0318  
                              l1331 022A                                l1323 021B  
                              l1315 0FEC                                l1411 0426  
                              l1403 03AD                                l1341 0240  
                              l1333 022E                                l1325 021E  
                              l1501 020A                                l1317 0FF3  
                              l1309 0FD8                                l1421 0446  
                              l1413 0440                                l1405 03B6  
                              l1511 0F84                                l1271 02A6  
                              l1351 0266                                l1343 0243  
                              l1335 0233                                l1327 0222  
                              l1503 020F                                l1319 0FFA  
                              l1415 0442                                l1407 03DE  
                              l1431 04C4                                l1423 044B  
                              l1513 0F8A                                l1281 02C6  
                              l1273 02AC                                l1521 016B  
                              l1361 0282                                l1353 026C  
                              l1345 024A                                l1337 0238  
                              l1329 0227                                l1505 0215  
                              l1417 0443                                l1409 040F  
                              l1441 04E4                                l1433 04DE  
                              l1425 0454                                l1601 05AC  
                              l1515 0F8B                                l1291 02EA  
                              l1283 02CF                                l1275 02B3  
                              l1267 028F                                l1531 017E  
                              l1523 0178                                l1363 0288  
                              l1355 026E                                l1347 024F  
                              l1339 023A                                l1507 021A  
                              l1419 0444                                l1435 04E0  
                              l1427 047C                                l1371 009A  
                              l1451 014F                                l1443 011F  
                              l1603 05B1                                l1611 0012  
                              l1517 0F8E                                l1509 0F80  
                              l1285 02D0                                l1293 02EE  
                              l1277 02BD                                l1269 0292  
                              l1541 0192                                l1533 017F  
                              l1525 017B                                l1365 028D  
                              l1357 0275                                l1349 0255  
                              l1605 0F75                                l1437 04E1  
                              l1429 04AD                                l1461 0FAB  
                              l1381 00D5                                l1373 009D  
                              l1453 0161                                l1445 0128  
                              l1613 0016                                l1621 001E  
                              l1701 07DB                                l1519 0F8F  
                              l1295 02EF                                l1287 02E4  
                              l1279 02C3                                l1543 0198  
                              l1535 0180                                l1527 017C  
                              l1359 027D                                l1471 01B8  
                              l1391 0077                                l1383 005A  
                              l1551 002B                                l1439 04E2  
                              l1463 0FB0                                l1375 00A5  
                              l1367 0092                                l1455 016A  
                              l1447 012E                                l1631 0FC8  
                              l1623 0022                                l1615 001A  
                              l1607 0F70                                l1703 07E1  
                              l1297 02FB                                l1289 02E5  
                              l1545 019E                                l1537 0181  
                              l1529 017D                                l1481 01C9  
                              l1473 01B9                                l1393 007A  
                              l1385 005D                                l1561 05BC  
                              l1553 0036                                l1465 0FB2  
                              l1457 0FA5                                l1377 00B0  
                              l1369 0094                                l1449 0146  
                              l1641 0FD4                                l1633 0FCC  
                              l1625 0024                                l1617 001C  
                              l1609 000B                                l1299 02FC  
                              l1547 01A4                                l1539 018F  
                              l1491 01E4                                l1483 01CF  
                              l1475 01BD                                l1395 007B  
                              l1387 0071                                l1571 05E0  
                              l1563 05C5                                l1555 0042  
                              l1651 00F7                                l1467 0FBA  
                              l1459 0FA7                                l1379 00B7  
                              l1643 0FD6                                l1635 0FCE  
                              l1627 0FBD                                l1619 001D  
                              l1493 01EA                                l1485 01D5  
                              l1477 01C2                                l1397 0087  
                              l1389 0072                                l1581 0623  
                              l1573 05E5                                l1565 05CA  
                              l1557 0046                                l1549 0027  
                              l1653 0104                                l1645 00D9  
                              l1469 0FBC                                l1637 0FCF  
                              l1629 0FC4                                l1661 06A7  
                              l1495 01F4                                l1487 01D8  
                              l1479 01C5                                l1399 008D  
                              l1591 0653                                l1583 0629  
                              l1575 05FA                                l1567 05D0  
                              l1559 004B                                l1655 0111  
                              l1647 00E4                                l1639 0FD0  
                              l1671 06F4                                l1663 06B1  
                              l1497 01FB                                l1489 01DF  
                              l1593 0698                                l1577 0600  
                              l1585 062E                                l1569 05DA  
                              l1649 00F1                                l1681 0757  
                              l1673 0713                                l1665 06B6  
                              l1499 0202                                l1587 0642  
                              l1579 0614                                l1595 031D  
                              l1691 07B1                                l1683 0769  
                              l1675 0733                                l1667 06BB  
                              l1589 064C                                l1597 04E9  
                              l1693 07C0                                l1685 078E  
                              l1677 073E                                l1669 06D7  
                              l1599 04EB                                l1695 07C3  
                              l1687 0798                                l1679 074B  
                              l1697 07CA                                l1689 07A7  
                              l1699 07CB                                STR_1 0806  
                              u1010 0266                                u1011 0265  
                              u1005 0256                                u1030 027B  
                              u1031 027A                                u1015 0262  
                              u1040 0282                                u1120 0426  
                              u1200 0160                                u1041 0281  
                              u1025 026F                                u1105 007E  
                              u1121 0425                                u1201 015F  
                              u1130 043F                                u1210 0FAB  
                              u1050 009A                                u1115 0F95  
                              u1131 043E                                u1211 0FAA  
                              u1051 0099                                u1300 0208  
                              u1140 04C4                                u1220 0FB9  
                              u1060 00B6                                u1301 0207  
                              u1125 0422                                u1141 04C3  
                              u1221 0FB8                                u1061 00B5  
                              u1310 020F                                u1230 01BD  
                              u1150 04DD                                u1311 020E  
                              u1231 01BC                                u1135 043B  
                              u1151 04DC                                u1240 01C9  
                              u1400 0653                                u1320 0057  
                              u1160 012E                                u1241 01C8  
                              u1401 0652                                u1321 0056  
                              u1145 04C0                                u1161 012D  
                              u1250 01D5                                u1410 06A5  
                              u1330 05C1                                u1251 01D4  
                              u1411 06A4                                u1331 05BF  
                              u1155 04D9                                u1075 00BF  
                              u1171 0137                                u1340 05C2  
                              u1500 0104                                u1172 013E  
                              u1420 058B                                u1085 0060  
                              u1501 0103                                u1173 0145  
                              u1270 01E8                                u1350 05CA  
                              u1510 0111                                u1430 05B7  
                              u1271 01E7                                u1095 0068  
                              u1415 06A1                                u1351 05C9  
                              u1511 0110                                u1431 05B6  
                              u1280 01F4                                u1360 05FA  
                              u1440 0012                                u1281 01F3  
                              u1265 01D9                                u1361 05F9  
                              u1185 0148                                u1425 0586  
                              u1441 0011                                u1370 0621  
                              u1450 0016                                u1530 0798  
                              u1371 0620                                u1195 0150  
                              u1451 0015                                u1531 0797  
                              u1380 0642                                u1460 0FC4  
                              u1540 07B1                                u1285 01F0  
                              u1381 0641                                u1461 0FC3  
                              u1541 07B0                                u1390 064A  
                              u1470 0FC8                                u1550 07C9  
                              u1295 01FC                                u1391 0649  
                              u1375 061D                                u1471 0FC7  
                              u1551 07C8                                u1480 00E4  
                              u1560 07E7                                u1385 063E  
                              u1481 00E3                                u1561 07E6  
                              u1617 0739                                u1490 00F1  
                              u1707 030C                                u1627 0074  
                              u1491 00F0                                u1717 0314  
                              u1637 008A                                u1647 0171  
                              u1657 0188                                u1667 01B0  
                              u1677 02B7                                u1687 02BF  
                              u1697 02E7                        __CFG_WRT$OFF 0000  
                              _main 06A7          ?_tecla_decrementar_descida 0070  
                              btemp 007E                                start 0000  
                  __end_of_ADC_read 00D6                       __CFG_IESO$OFF 0000  
                 ___bmul@multiplier 0073                        lcd_num@sinal 002A  
                    ?_led_monitorar 0070                               ?_main 0070  
                   __end_of___awdiv 028E                       __CFG_WDTE$OFF 0000  
                   __end_of___awmod 021B                               _ANSEL 0188  
                   ___awdiv@divisor 0076                     ___awdiv@counter 0020  
                             _PORTD 0008                 ___lmul@multiplicand 0024  
                      lcd_print@col 0076                        lcd_print@lin 007A  
                    __CFG_FCMEN$OFF 0000                        lcd_print@pos 0079  
                      lcd_print@str 0077                     __end_of_lcd_num 06A7  
                             _canal 004E                               main@i 004D  
                    __CFG_BOREN$OFF 0000                               pclath 000A  
                 ADC_read@Valor_ADC 0076                               status 0003  
                             wtemp0 007E                       lcd_lincol@col 0073  
                     lcd_lincol@lin 0075                __size_of_analog_init 0011  
                    __CFG_MCLRE$OFF 0000                     __initialization 07ED  
                      __end_of_main 07ED                      ADC_read@canais 0078  
                            ??_main 004A                _incrementar_anterior 0051  
                      ?_teclas_init 0070                              _ADRESH 001E  
                            _ADRESL 009E                    ___awdiv@dividend 0078  
                    __CFG_PWRTE$OFF 0000                    __end_of_lcd_data 0091  
                  __end_of_lcd_init 01B8                    __end_of_lcd_inst 031C  
                            ___bmul 0FA4                    __end_of_led_init 0F80  
                            ___lmul 011F                              ___wmul 0FD8  
                         ??___awdiv 007A                           ??___awmod 0074  
                   ??_led_monitorar 007E                    ___awdiv@quotient 0022  
                   ___awmod@divisor 0070                              _sensor 00A0  
                   ___awmod@counter 0075                           ??_lcd_num 007B  
                      ?_sensor_init 0074                           ?_ADC_read 0070  
           __end_of__initialization 07FC          ??_tecla_incrementar_subida 0070  
               ___bmul@multiplicand 0070                      __pcstackCOMMON 0070  
                        ??_ADC_read 0072                  __size_of_lcd_print 0033  
                        __pbssBANK0 004E                          __pbssBANK1 00A0  
       ??_tecla_decrementar_descida 0070                          __pmaintext 06A7  
                           ?___bmul 0070                             ?___lmul 0020  
                           ?___wmul 0070                      ___lmul@product 007A  
                  sensor_danger@max 0026                    sensor_danger@min 0024  
                  sensor_danger@ptr 0028               __end_of_sensor_danger 04E6  
                        _lcd_lincol 0F91                           ?_lcd_data 0070  
              __size_of_teclas_init 0005                           ?_lcd_init 0070  
                         ?_lcd_inst 0070                           ?_led_init 0070  
                        __stringtab 0800                     __size_of___bmul 0019  
                 __end_of_lcd_print 0059                             ___awdiv 021B  
                   __size_of___lmul 004C                             ___awmod 01B8  
                   __size_of___wmul 0028           _tecla_decrementar_descida 0FBD  
                           __ptext1 0F70                             __ptext2 000B  
                           __ptext3 0FBD                             __ptext4 04E6  
                           __ptext5 011F                             __ptext6 0091  
                           __ptext7 031C                             __ptext8 0FA4  
                           __ptext9 00D6                             _lcd_num 05B9  
                  ___awmod@dividend 0072                __size_of_sensor_init 008E  
                        ??_lcd_data 0070                             clrloop0 0004  
                        ??_lcd_init 0073                          ??_lcd_inst 0070  
                        ??_led_init 0070                end_of_initialization 07FC  
                     ?_sensor_alert 0070                       ??_analog_init 0070  
  __end_of_tecla_incrementar_subida 0026             __size_of_sensor_readAll 00D3  
                         _PORTCbits 0007                           _PORTDbits 0008  
                         _TRISCbits 0087                         ?_lcd_lincol 0073  
                         _TRISDbits 0088                    led_monitorar@ptr 0029  
                    ??_sensor_alert 007B                   __size_of_ADC_read 0045  
                        lcd_num@col 0024                          lcd_num@div 002B  
                        lcd_num@lin 0028                          lcd_num@tam 0027  
                        lcd_num@num 0025                 __end_of_analog_init 0F91  
                    __end_of___bmul 0FBD                      __end_of___lmul 016B  
                    __end_of___wmul 1000               __end_of_led_monitorar 011F  
               start_initialization 07ED                         _ADC_read$99 0074  
                          ??___bmul 0071                 __size_of_lcd_lincol 0013  
                          ??___lmul 0079                            ??___wmul 0074  
 __size_of_tecla_incrementar_subida 001B           ?_tecla_incrementar_subida 0070  
                         ___latbits 0002                       __pcstackBANK0 0020  
__size_of_tecla_decrementar_descida 001B                   __size_of_lcd_data 0038  
                 __size_of_lcd_init 004D                   __size_of_lcd_inst 008E  
                 __size_of_led_init 000B                         _analog_init 0F80  
                    _sensor_readAll 04E6                            ?___awdiv 0076  
                          ?___awmod 0070                __end_of_sensor_alert 0448  
                   sensor_alert@max 0026                     sensor_alert@min 0024  
                   sensor_alert@ptr 0028                           __pstrings 0800  
                         _lcd_print 0026                            ?_lcd_num 0024  
                     ??_teclas_init 0070                            _ADC_read 0091  
 __end_of_tecla_decrementar_descida 0FD8                     sensor_init@alvo 0079  
            __end_of_sensor_readAll 05B9                     sensor_readAll@i 0049  
                   sensor_readAll@n 0028                     sensor_init@tmax 0077  
                   sensor_init@tmin 0075                      ___wmul@product 0074  
                         clear_ram0 0003              __size_of_sensor_danger 009E  
                         lcd_data@d 0072                          ?_lcd_print 0076  
                        _ADCON0bits 001F                         __stringbase 0805  
                        _ADCON1bits 009F                   ___wmul@multiplier 0070  
                     ??_sensor_init 0020                           lcd_inst@i 0072  
                      ??_lcd_lincol 0074                   ___lmul@multiplier 0020  
               __end_of_teclas_init 0F75                     ?_sensor_readAll 0028  
                __end_of_lcd_lincol 0FA4                    __size_of___awdiv 0073  
                  __size_of___awmod 0063                  __end_of__stringtab 0806  
                     _sensor_danger 0448                    __size_of_lcd_num 00EE  
              _decrementar_anterior 0050                            __ptext10 0448  
                          __ptext11 03AA                            __ptext20 016B  
                          __ptext12 0FD8                            __ptext21 028E  
                          __ptext13 0F75                            __ptext22 0F80  
                          __ptext14 0026                            __ptext15 05B9  
                          __ptext16 0F91                            __ptext17 0059  
                          __ptext18 01B8                            __ptext19 021B  
                 __CFG_BOR4V$BOR40V 0000                 __end_of_sensor_init 03AA  
                          _lcd_data 0059                            _lcd_init 016B  
                          _lcd_inst 028E                            _led_init 0F75  
                     __size_of_main 0146                      sensor_init@ptr 007D  
             __size_of_sensor_alert 009E                   sensor_readAll@ptr 0048  
                       ??_lcd_print 0078                      ?_sensor_danger 0070  
                       _teclas_init 0F70                sensor_init@aceitavel 007B  
                      _sensor_alert 03AA                        ?_analog_init 0070  
            __size_of_led_monitorar 0049                           stringcode 0800  
                     sensor_init@ch 0074                         _sensor_init 031C  
                          stringdir 0800                            stringtab 0800  
